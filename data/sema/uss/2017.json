[
    {
        "paperId": "0009a4b50d1ad0353f1cabfc50a769801d90cc3c",
        "externalIds": {
            "DBLP": "conf/uss/BiswasFCRVNFP17",
            "MAG": "2752912380",
            "CorpusId": 26469480
        },
        "corpusId": 26469480,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/0009a4b50d1ad0353f1cabfc50a769801d90cc3c",
        "title": "Venerable Variadic Vulnerabilities Vanquished",
        "abstract": "Programming languages such as C and C ++ support vari-adic functions, i.e., functions that accept a variable number of arguments (e.g., printf ). While variadic functions are \ufb02exible, they are inherently not type-safe. In fact, the semantics and parameters of variadic functions are de\ufb01ned implicitly by their implementation. It is left to the programmer to ensure that the caller and callee follow this implicit speci\ufb01cation, without the help of a static type checker. An adversary can take advantage of a mismatch between the argument types used by the caller of a variadic function and the types expected by the callee to violate the language semantics and to tamper with memory. Format string attacks are the most popular example of such a mismatch.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 60,
        "citationCount": 20,
        "influentialCitationCount": 1,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "186-198"
        },
        "citationStyles": {
            "bibtex": "@Article{Biswas2017VenerableVV,\n author = {Priyam Biswas and A. Federico and Scott A. Carr and Prabhu Rajasekaran and Stijn Volckaert and Yeoul Na and M. Franz and Mathias Payer},\n booktitle = {USENIX Security Symposium},\n pages = {186-198},\n title = {Venerable Variadic Vulnerabilities Vanquished},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "10576707",
                "name": "Priyam Biswas"
            },
            {
                "authorId": "2230073",
                "name": "A. Federico"
            },
            {
                "authorId": "2925856",
                "name": "Scott A. Carr"
            },
            {
                "authorId": "15569720",
                "name": "Prabhu Rajasekaran"
            },
            {
                "authorId": "2022955",
                "name": "Stijn Volckaert"
            },
            {
                "authorId": "2666356",
                "name": "Yeoul Na"
            },
            {
                "authorId": "144230973",
                "name": "M. Franz"
            },
            {
                "authorId": "144649236",
                "name": "Mathias Payer"
            }
        ]
    },
    {
        "paperId": "0632b69aca6500bf65f3d9c82aad62369b2bc682",
        "externalIds": {
            "MAG": "2752548035",
            "DBLP": "conf/uss/CalzavaraRB17",
            "CorpusId": 31920945
        },
        "corpusId": 31920945,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/0632b69aca6500bf65f3d9c82aad62369b2bc682",
        "title": "CCSP: Controlled Relaxation of Content Security Policies by Runtime Policy Composition",
        "abstract": "Content Security Policy (CSP) is a W3C standard designed to prevent and mitigate the impact of content injection vulnerabilities on websites by means of browserenforced security policies. Though CSP is gaining a lot of popularity in the wild, previous research questioned one of its key design choices, namely the use of static white-lists to define legitimate content inclusions. In this paper we present Compositional CSP (CCSP), an extension of CSP based on runtime policy composition. CCSP is designed to overcome the limitations arising from the use of static white-lists, while avoiding a major overhaul of CSP and the logic underlying policy writing. We perform an extensive evaluation of the design of CCSP by focusing on the general security guarantees it provides, its backward compatibility and its deployment cost. We then assess the potential impact of CCSP on the web and we implement a prototype of our proposal, which we test on major websites. In the end, we conclude that the deployment of CCSP can be done with limited efforts and would lead to significant benefits for the large majority of the websites.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 15,
        "citationCount": 12,
        "influentialCitationCount": 1,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "695-712"
        },
        "citationStyles": {
            "bibtex": "@Article{Calzavara2017CCSPCR,\n author = {Stefano Calzavara and Alvise Rabitti and M. Bugliesi},\n booktitle = {USENIX Security Symposium},\n pages = {695-712},\n title = {CCSP: Controlled Relaxation of Content Security Policies by Runtime Policy Composition},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "1734266",
                "name": "Stefano Calzavara"
            },
            {
                "authorId": "1880363",
                "name": "Alvise Rabitti"
            },
            {
                "authorId": "1707168",
                "name": "M. Bugliesi"
            }
        ]
    },
    {
        "paperId": "0a0195eaf4cb94ce55e73bae65e4fd165ce114cc",
        "externalIds": {
            "MAG": "2752160765",
            "DBLP": "conf/uss/GhoseLL17",
            "CorpusId": 30445883
        },
        "corpusId": 30445883,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/0a0195eaf4cb94ce55e73bae65e4fd165ce114cc",
        "title": "HELP: Helper-Enabled In-Band Device Pairing Resistant Against Signal Cancellation",
        "abstract": "Bootstrapping trust between wireless devices without entering or preloading secrets is a fundamental security problem in many applications, including home networking, mobile device tethering, and the Internet-of-Things. This is because many new wireless devices lack the necessary interfaces (keyboard, screen, etc.) to manually enter passwords, or are often preloaded with default keys that are easily leaked. Alternatively, two devices can establish a common secret by executing key agreement protocols. However, the latter are vulnerable to Man-in-theMiddle (MitM) attacks. In the wireless domain, MitM attacks can be launched by manipulating the over-the-air transmissions. The strongest form of manipulation is signal cancellation, which completely annihilates the signal at a targeted receiver. Recently, cancellation attacks were shown to be practical under predictable channel conditions, without an effective defense mechanism. In this paper, we propose HELP, a helper-assisted message integrity verification primitive that detects message manipulation and signal cancellation over the wireless channel (rather than prevent it). By leveraging transmissions from a helper device which has already established trust with one of the devices (e.g., the hub), we enable signal tampering detection with high probability. We then use HELP to build a device pairing protocol, which securely introduces new devices to the network without requiring them to share any secret keys with the existing devices beforehand. We carry out extensive analysis and real-world experiments to validate the security and performance of our proposed protocol.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 65,
        "citationCount": 12,
        "influentialCitationCount": 1,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "433-450"
        },
        "citationStyles": {
            "bibtex": "@Article{Ghose2017HELPHI,\n author = {Nirnimesh Ghose and Loukas Lazos and Ming Li},\n booktitle = {USENIX Security Symposium},\n pages = {433-450},\n title = {HELP: Helper-Enabled In-Band Device Pairing Resistant Against Signal Cancellation},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "47573577",
                "name": "Nirnimesh Ghose"
            },
            {
                "authorId": "2408902",
                "name": "Loukas Lazos"
            },
            {
                "authorId": "35834541",
                "name": "Ming Li"
            }
        ]
    },
    {
        "paperId": "0e938ba10ed50dc2e18b90e6401fdb1920be97ec",
        "externalIds": {
            "MAG": "2753556470",
            "DBLP": "conf/uss/NeyKOCK17",
            "CorpusId": 26294251
        },
        "corpusId": 26294251,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/0e938ba10ed50dc2e18b90e6401fdb1920be97ec",
        "title": "Computer Security, Privacy, and DNA Sequencing: Compromising Computers with Synthesized DNA, Privacy Leaks, and More",
        "abstract": "The rapid improvement in DNA sequencing has sparked a big data revolution in genomic sciences, which has in turn led to a proliferation of bioinformatics tools. To date, these tools have encountered little adversarial pressure. This paper evaluates the robustness of such tools if (or when) adversarial attacks manifest. We demonstrate, for the \ufb01rst time, the synthesis of DNA which\u2014when sequenced and processed\u2014gives an attacker arbitrary remote code execution. To study the feasibility of creating and synthesizing a DNA-based exploit, we performed our attack on a modi\ufb01ed downstream sequencing utility with a deliberately introduced vulnerability. After sequencing, we observed information leakage in our data due to sample bleeding. While this phenomena is known to the sequencing community, we provide the \ufb01rst discussion of how this leakage channel could be used adversarially to inject data or reveal sensitive information. We then evaluate the general security hygiene of common DNA processing programs, and unfortunately, \ufb01nd concrete evidence of poor security practices used throughout the \ufb01eld. Informed by our experiments and results, we develop a broad framework and guidelines to safeguard security and privacy in DNA synthesis, sequencing, and processing.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 23,
        "citationCount": 51,
        "influentialCitationCount": 9,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Biology",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-01",
        "journal": {
            "pages": "765-779"
        },
        "citationStyles": {
            "bibtex": "@Article{Ney2017ComputerSP,\n author = {Peter Ney and Karl Koscher and Lee Organick and L. Ceze and Tadayoshi Kohno},\n booktitle = {USENIX Security Symposium},\n pages = {765-779},\n title = {Computer Security, Privacy, and DNA Sequencing: Compromising Computers with Synthesized DNA, Privacy Leaks, and More},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "40351188",
                "name": "Peter Ney"
            },
            {
                "authorId": "3083870",
                "name": "Karl Koscher"
            },
            {
                "authorId": "23757022",
                "name": "Lee Organick"
            },
            {
                "authorId": "1717411",
                "name": "L. Ceze"
            },
            {
                "authorId": "1769675",
                "name": "Tadayoshi Kohno"
            }
        ]
    },
    {
        "paperId": "0e9b9e095fed2df3762ee5bf00ec4f15001a3a7c",
        "externalIds": {
            "MAG": "2753324901",
            "DBLP": "conf/uss/GarciaB17",
            "CorpusId": 9604675
        },
        "corpusId": 9604675,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/0e9b9e095fed2df3762ee5bf00ec4f15001a3a7c",
        "title": "Constant-Time Callees with Variable-Time Callers",
        "abstract": "Side-channel attacks are a serious threat to securitycritical software. To mitigate remote timing and cachetiming attacks, many ubiquitous cryptography software libraries feature constant-time implementations of cryptographic primitives. In this work, we disclose a vulnerability in OpenSSL 1.0.1u that recovers ECDSA private keys for the standardized elliptic curve P-256 despite the library featuring both constant-time curve operations and modular inversion with microarchitecture attack mitigations. Exploiting this defect, we target the errant modular inversion code path with a cache-timing and improved performance degradation attack, recovering the inversion state sequence. We propose a new approach of extracting a variable number of nonce bits from these sequences, and improve upon the best theoretical result to recover private keys in a lattice attack with as few as 50 signatures and corresponding traces. As far as we are aware, this is the first timing attack against OpenSSL ECDSA that does not target scalar multiplication, the first side-channel attack on cryptosystems leveraging P-256 constant-time scalar multiplication and furthermore, we extend our attack to TLS and SSH protocols, both linked to OpenSSL for P-256 ECDSA signing.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 30,
        "citationCount": 58,
        "influentialCitationCount": 3,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science",
            "Mathematics"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Mathematics",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "83-98"
        },
        "citationStyles": {
            "bibtex": "@Article{Garc\u00eda2017ConstantTimeCW,\n author = {Cesar Pereida Garc\u00eda and B. Brumley},\n booktitle = {USENIX Security Symposium},\n pages = {83-98},\n title = {Constant-Time Callees with Variable-Time Callers},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "3413188",
                "name": "Cesar Pereida Garc\u00eda"
            },
            {
                "authorId": "2863384",
                "name": "B. Brumley"
            }
        ]
    },
    {
        "paperId": "0fefca8f0bc0f81f61740ad62737bcea5904ccf2",
        "externalIds": {
            "DBLP": "conf/uss/PlaneRMT17",
            "MAG": "2752983833",
            "CorpusId": 6557845
        },
        "corpusId": 6557845,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/0fefca8f0bc0f81f61740ad62737bcea5904ccf2",
        "title": "Exploring User Perceptions of Discrimination in Online Targeted Advertising",
        "abstract": "Targeted online advertising now accounts for the largest share of the advertising market, beating out both TV and print ads. While targeted advertising can improve users\u2019 online shopping experiences, it can also have negative e \ufb00 ects. A plethora of recent work has found evidence that in some cases, ads may be discriminatory, leading certain groups of users to see better o \ufb00 ers (e.g., job ads) based on personal characteristics such as gender. To develop policies around advertising and guide advertisers in making ethical decisions, one thing we must better understand is what concerns users and why. In an e \ufb00 ort to answer this question, we conducted a pilot study and a multi-step main survey (n = 2,086 in total) presenting users with different discriminatory advertising scenarios. We \ufb01nd that overall, 44% of respondents were moderately or very concerned by the scenarios we presented. Respondents found the scenarios signi\ufb01cantly more problematic when discrimination took place as a result of explicit demographic targeting rather than in response to online behavior. However, our respondents\u2019 opinions did not vary based on whether a human or an algorithm was responsible for the discrimination. These \ufb01ndings suggest that future policy documents should explicitly address discrimination in targeted advertising, no matter its origin, as a signi\ufb01cant user concern, and that corporate responses that blame the algorithmic nature of the ad ecosystem may not be helpful for addressing public concerns.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 56,
        "citationCount": 58,
        "influentialCitationCount": 4,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Business",
                "source": "s2-fos-model"
            },
            {
                "category": "Sociology",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle",
            "Review"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "935-951"
        },
        "citationStyles": {
            "bibtex": "@Article{Plane2017ExploringUP,\n author = {Angelisa C. Plane and Elissa M. Redmiles and Michelle L. Mazurek and Michael Carl Tschantz},\n booktitle = {USENIX Security Symposium},\n pages = {935-951},\n title = {Exploring User Perceptions of Discrimination in Online Targeted Advertising},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "3440593",
                "name": "Angelisa C. Plane"
            },
            {
                "authorId": "2391370",
                "name": "Elissa M. Redmiles"
            },
            {
                "authorId": "37176218",
                "name": "Michelle L. Mazurek"
            },
            {
                "authorId": "2877185",
                "name": "Michael Carl Tschantz"
            }
        ]
    },
    {
        "paperId": "12f0a5268975d535761d99819856992f7021780b",
        "externalIds": {
            "DBLP": "conf/uss/JordaneySDWPNC17",
            "MAG": "2753594008",
            "CorpusId": 19437868
        },
        "corpusId": 19437868,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/12f0a5268975d535761d99819856992f7021780b",
        "title": "Transcend: Detecting Concept Drift in Malware Classification Models",
        "abstract": "Building machine learning models of malware behavior is widely accepted as a panacea towards effective malware classification. A crucial requirement for building sustainable learning models, though, is to train on a wide variety of malware samples. Unfortunately, malware evolves rapidly and it thus becomes hard\u2014if not impossible\u2014to generalize learning models to reflect future, previously-unseen behaviors. Consequently, most malware classifiers become unsustainable in the long run, becoming rapidly antiquated as malware continues to evolve. In this work, we propose Transcend, a framework to identify aging classification models in vivo during deployment, much before the machine learning model\u2019s performance starts to degrade. This is a significant departure from conventional approaches that retrain aging models retrospectively when poor performance is observed. Our approach uses a statistical comparison of samples seen during deployment with those used to train the model, thereby building metrics for prediction quality. We show how Transcend can be used to identify concept drift based on two separate case studies on Android andWindows malware, raising a red flag before the model starts making consistently poor decisions due to out-of-date training.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 22,
        "citationCount": 249,
        "influentialCitationCount": 18,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "625-642"
        },
        "citationStyles": {
            "bibtex": "@Article{Jordaney2017TranscendDC,\n author = {Roberto Jordaney and K. Sharad and Santanu Kumar Dash and Zhi Wang and D. Papini and I. Nouretdinov and L. Cavallaro},\n booktitle = {USENIX Security Symposium},\n pages = {625-642},\n title = {Transcend: Detecting Concept Drift in Malware Classification Models},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2329376",
                "name": "Roberto Jordaney"
            },
            {
                "authorId": "145619083",
                "name": "K. Sharad"
            },
            {
                "authorId": "2204534",
                "name": "Santanu Kumar Dash"
            },
            {
                "authorId": "47197423",
                "name": "Zhi Wang"
            },
            {
                "authorId": "40349808",
                "name": "D. Papini"
            },
            {
                "authorId": "1796115",
                "name": "I. Nouretdinov"
            },
            {
                "authorId": "2189170",
                "name": "L. Cavallaro"
            }
        ]
    },
    {
        "paperId": "13848ff84a88cb3c90ba907f466f6e5b09a0aeb1",
        "externalIds": {
            "MAG": "2751613360",
            "DBLP": "conf/uss/WangKL0D17",
            "CorpusId": 26374628
        },
        "corpusId": 26374628,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/13848ff84a88cb3c90ba907f466f6e5b09a0aeb1",
        "title": "How Double-Fetch Situations turn into Double-Fetch Vulnerabilities: A Study of Double Fetches in the Linux Kernel",
        "abstract": "We present the first static approach that systematically \ndetects potential double-fetch vulnerabilities in the Linux kernel. Using a pattern-based analysis, we identified 90 \ndouble fetches in the Linux kernel. 57 of these occur \nin drivers, which previous dynamic approaches were unable \nto detect without access to the corresponding hardware. \nWe manually investigated the 90 occurrences, and \ninferred three typical scenarios in which double fetches \noccur. We discuss each of them in detail. We further developed \na static analysis, based on the Coccinelle matching \nengine, that detects double-fetch situations which can \ncause kernel vulnerabilities. When applied to the Linux, \nFreeBSD, and Android kernels, our approach found six \npreviously unknown double-fetch bugs, four of them in \ndrivers, three of which are exploitable double-fetch vulnerabilities. \nAll of the identified bugs and vulnerabilities \nhave been confirmed and patched by maintainers. Our \napproach has been adopted by the Coccinelle team and \nis currently being integrated into the Linux kernel patch \nvetting. Based on our study, we also provide practical solutions \nfor anticipating double-fetch bugs and vulnerabilities. \nWe also provide a solution to automatically patch \ndetected double-fetch bugs.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 42,
        "citationCount": 63,
        "influentialCitationCount": 7,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "1-16"
        },
        "citationStyles": {
            "bibtex": "@Article{Wang2017HowDS,\n author = {Pengfei Wang and J. Krinke and Kai Lu and Gen Li and S. Dodier-Lazaro},\n booktitle = {USENIX Security Symposium},\n pages = {1-16},\n title = {How Double-Fetch Situations turn into Double-Fetch Vulnerabilities: A Study of Double Fetches in the Linux Kernel},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2108238048",
                "name": "Pengfei Wang"
            },
            {
                "authorId": "1824150",
                "name": "J. Krinke"
            },
            {
                "authorId": "144041317",
                "name": "Kai Lu"
            },
            {
                "authorId": "145678386",
                "name": "Gen Li"
            },
            {
                "authorId": "1404831296",
                "name": "S. Dodier-Lazaro"
            }
        ]
    },
    {
        "paperId": "13d2ab0755155c59d2fb041de174a8bbdd68d556",
        "externalIds": {
            "DBLP": "conf/uss/XuHHZG17",
            "MAG": "2751167560",
            "CorpusId": 12065825
        },
        "corpusId": 12065825,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/13d2ab0755155c59d2fb041de174a8bbdd68d556",
        "title": "Attacking the Brain: Races in the SDN Control Plane",
        "abstract": "Software-Defined Networking (SDN) has significantly enriched network functionalities by decoupling programmable network controllers from the network hardware. Because SDN controllers are serving as the brain of the entire network, their security and reliability are of extreme importance. For the first time in the literature, we introduce a novel attack against SDN networks that can cause serious security and reliability risks by exploiting harmful race conditions in the SDN controllers, similar in spirit to classic TOCTTOU (Time of Check to Time of Use) attacks against file systems. In this attack, even a weak adversary without controlling/compromising any SDN controller/switch/app/protocol but only having malware-infected regular hosts can generate external network events to crash the SDN controllers, disrupt core services, or steal privacy information. We develop a novel dynamic framework, CONGUARD, that can effectively detect and exploit harmful race conditions. We have evaluated CONGUARD on three mainstream SDN controllers (Floodlight, ONOS, and OpenDaylight) with 34 applications. CONGUARD detected totally 15 previously unknown vulnerabilities, all of which have been confirmed by developers and 12 of them are patched with our assistance.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 44,
        "citationCount": 71,
        "influentialCitationCount": 5,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "451-468"
        },
        "citationStyles": {
            "bibtex": "@Article{Xu2017AttackingTB,\n author = {Lei Xu and Jeff Huang and Sungmin Hong and Jialong Zhang and G. Gu},\n booktitle = {USENIX Security Symposium},\n pages = {451-468},\n title = {Attacking the Brain: Races in the SDN Control Plane},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2109329545",
                "name": "Lei Xu"
            },
            {
                "authorId": "32065383",
                "name": "Jeff Huang"
            },
            {
                "authorId": "34624630",
                "name": "Sungmin Hong"
            },
            {
                "authorId": "1853247461",
                "name": "Jialong Zhang"
            },
            {
                "authorId": "3969047",
                "name": "G. Gu"
            }
        ]
    },
    {
        "paperId": "19c07d7e5bbcb6a3894ad0f1c775994d1b323f0a",
        "externalIds": {
            "MAG": "2726246108",
            "DBLP": "conf/uss/BulckWKPS17",
            "CorpusId": 35969028
        },
        "corpusId": 35969028,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/19c07d7e5bbcb6a3894ad0f1c775994d1b323f0a",
        "title": "Telling Your Secrets without Page Faults: Stealthy Page Table-Based Attacks on Enclaved Execution",
        "abstract": "Protected module architectures, such as Intel SGX, enable strong trusted computing guarantees for hardware-enforced enclaves on top a potentially malicious operating system. However, such enclaved execution environments are known to be vulnerable to a powerful class of controlled-channel attacks. Recent research convincingly demonstrated that adversarial system software can extract sensitive data from enclaved applications by carefully revoking access rights on enclave pages, and recording the associated page faults. As a response, a number of state-of-the-art defense techniques has been proposed that suppress page faults during enclave execution. \n \nThis paper shows, however, that page table-based threats go beyond page faults. We demonstrate that an untrusted operating system can observe enclave page accesses without resorting to page faults, by exploiting other side-effects of the address translation process. We contribute two novel attack vectors that infer enclaved memory accesses from page table attributes, as well as from the caching behavior of unprotected page table memory. We demonstrate the effectiveness of our attacks by recovering EdDSA session keys with little to no noise from the popular Libgcrypt cryptographic software suite.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 51,
        "citationCount": 274,
        "influentialCitationCount": 30,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "1041-1056"
        },
        "citationStyles": {
            "bibtex": "@Article{Bulck2017TellingYS,\n author = {Jo Van Bulck and Nico Weichbrodt and R. Kapitza and Frank Piessens and Raoul Strackx},\n booktitle = {USENIX Security Symposium},\n pages = {1041-1056},\n title = {Telling Your Secrets without Page Faults: Stealthy Page Table-Based Attacks on Enclaved Execution},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2263682",
                "name": "Jo Van Bulck"
            },
            {
                "authorId": "3457323",
                "name": "Nico Weichbrodt"
            },
            {
                "authorId": "1740458",
                "name": "R. Kapitza"
            },
            {
                "authorId": "1739936",
                "name": "Frank Piessens"
            },
            {
                "authorId": "2413179",
                "name": "Raoul Strackx"
            }
        ]
    },
    {
        "paperId": "1aea7174b6e709d09570738cdfe4720b841e0398",
        "externalIds": {
            "DBLP": "conf/uss/KohlbrennerS17",
            "MAG": "2751962962",
            "CorpusId": 11837332
        },
        "corpusId": 11837332,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/1aea7174b6e709d09570738cdfe4720b841e0398",
        "title": "On the effectiveness of mitigations against floating-point timing channels",
        "abstract": "The duration of floating-point instructions is a known timing side channel that has been used to break Same-Origin Policy (SOP) privacy on Mozilla Firefox and the Fuzz differentially private database. Several defenses have been proposed to mitigate these attacks. We present detailed benchmarking of floating point performance for various operations based on operand values. We identify families of values that induce slow and fast paths beyond the classes (normal, subnormal, etc.) considered in previous work, and note that different processors exhibit different timing behavior. We evaluate the efficacy of the defenses deployed (or not) in Web browsers to floating point side channel attacks on SVG filters. We find that Google Chrome, Mozilla Firefox, and Apple\u2019s Safari have insufficiently addressed the floating-point side channel, and we present attacks for each that extract pixel data cross-origin on most platforms. We evaluate the vector-operation based defensive mechanism proposed at USENIX Security 2016 by Rane, Lin and Tiwari and find that it only reduces, not eliminates, the floating-point side channel signal. Together, these measurements and attacks cause us to conclude that floating point is simply too variable to use in a timing security sensitive context.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 23,
        "citationCount": 32,
        "influentialCitationCount": 1,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "69-81"
        },
        "citationStyles": {
            "bibtex": "@Article{Kohlbrenner2017OnTE,\n author = {David Kohlbrenner and H. Shacham},\n booktitle = {USENIX Security Symposium},\n pages = {69-81},\n title = {On the effectiveness of mitigations against floating-point timing channels},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2643813",
                "name": "David Kohlbrenner"
            },
            {
                "authorId": "1786752",
                "name": "H. Shacham"
            }
        ]
    },
    {
        "paperId": "213e02d8ca1207155fc3e4a3ae931fba360426cb",
        "externalIds": {
            "MAG": "2751981537",
            "DBLP": "conf/uss/JeroKSONB17",
            "CorpusId": 2167433
        },
        "corpusId": 2167433,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/213e02d8ca1207155fc3e4a3ae931fba360426cb",
        "title": "Identifier Binding Attacks and Defenses in Software-Defined Networks",
        "abstract": "In this work, we demonstrate a novel attack in SDN networks, Persona Hijacking, that breaks the bindings of all layers of the networking stack and fools the network infrastructure into believing that the attacker is the legitimate owner of the victim\u2019s identifiers, which significantly increases persistence. We then present a defense, SECUREBINDER, that prevents identifier binding attacks at all layers of the network by leveraging SDN\u2019s data and control plane separation, global network view, and programmatic control of the network, while building upon IEEE 802.1x as a root of trust. To evaluate its effectiveness we both implement it in a testbed and use model checking to verify the guarantees it provides.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 47,
        "citationCount": 50,
        "influentialCitationCount": 3,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "415-432"
        },
        "citationStyles": {
            "bibtex": "@Article{Jero2017IdentifierBA,\n author = {Samuel Jero and W. Koch and R. Skowyra and Hamed Okhravi and C. Nita-Rotaru and David Bigelow},\n booktitle = {USENIX Security Symposium},\n pages = {415-432},\n title = {Identifier Binding Attacks and Defenses in Software-Defined Networks},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2360210",
                "name": "Samuel Jero"
            },
            {
                "authorId": "145556407",
                "name": "W. Koch"
            },
            {
                "authorId": "143653974",
                "name": "R. Skowyra"
            },
            {
                "authorId": "1691029",
                "name": "Hamed Okhravi"
            },
            {
                "authorId": "1398550766",
                "name": "C. Nita-Rotaru"
            },
            {
                "authorId": "144912317",
                "name": "David Bigelow"
            }
        ]
    },
    {
        "paperId": "220a7eed5c859f596a0d9dbc194034d170a6af51",
        "externalIds": {
            "DBLP": "conf/uss/AntonakakisABBB17",
            "MAG": "2748868501",
            "CorpusId": 10552148
        },
        "corpusId": 10552148,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/220a7eed5c859f596a0d9dbc194034d170a6af51",
        "title": "Understanding the Mirai Botnet",
        "abstract": "The Mirai botnet, composed primarily of embedded and IoT devices, took the Internet by storm in late 2016 when it overwhelmed several high-profile targets with massive distributed denial-of-service (DDoS) attacks. In this paper, we provide a seven-month retrospective analysis of Mirai's growth to a peak of 600k infections and a history of its DDoS victims. By combining a variety of measurement perspectives, we analyze how the botnet emerged, what classes of devices were affected, and how Mirai variants evolved and competed for vulnerable hosts. Our measurements serve as a lens into the fragile ecosystem of IoT devices. We argue that Mirai may represent a sea change in the evolutionary development of botnets--the simplicity through which devices were infected and its precipitous growth, demonstrate that novice malicious techniques can compromise enough low-end devices to threaten even some of the best-defended targets. To address this risk, we recommend technical and nontechnical interventions, as well as propose future research directions.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 94,
        "citationCount": 1677,
        "influentialCitationCount": 166,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "1093-1110"
        },
        "citationStyles": {
            "bibtex": "@Article{Antonakakis2017UnderstandingTM,\n author = {M. Antonakakis and Tim April and Michael Bailey and Matthew Bernhard and Elie Bursztein and J. Cochran and Zakir Durumeric and J. A. Halderman and L. Invernizzi and Michalis Kallitsis and Deepak Kumar and Chaz Lever and Zane Ma and Joshua Mason and D. Menscher and C. Seaman and N. Sullivan and Kurt Thomas and Yi Zhou},\n booktitle = {USENIX Security Symposium},\n pages = {1093-1110},\n title = {Understanding the Mirai Botnet},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2805955",
                "name": "M. Antonakakis"
            },
            {
                "authorId": "46718137",
                "name": "Tim April"
            },
            {
                "authorId": "144831527",
                "name": "Michael Bailey"
            },
            {
                "authorId": "8281426",
                "name": "Matthew Bernhard"
            },
            {
                "authorId": "1687723",
                "name": "Elie Bursztein"
            },
            {
                "authorId": "34812369",
                "name": "J. Cochran"
            },
            {
                "authorId": "3137133",
                "name": "Zakir Durumeric"
            },
            {
                "authorId": "144883384",
                "name": "J. A. Halderman"
            },
            {
                "authorId": "47244926",
                "name": "L. Invernizzi"
            },
            {
                "authorId": "7633998",
                "name": "Michalis Kallitsis"
            },
            {
                "authorId": "2116414850",
                "name": "Deepak Kumar"
            },
            {
                "authorId": "38515566",
                "name": "Chaz Lever"
            },
            {
                "authorId": "10030115",
                "name": "Zane Ma"
            },
            {
                "authorId": "143799336",
                "name": "Joshua Mason"
            },
            {
                "authorId": "48481496",
                "name": "D. Menscher"
            },
            {
                "authorId": "29294816",
                "name": "C. Seaman"
            },
            {
                "authorId": "31612094",
                "name": "N. Sullivan"
            },
            {
                "authorId": "33411132",
                "name": "Kurt Thomas"
            },
            {
                "authorId": "2118765059",
                "name": "Yi Zhou"
            }
        ]
    },
    {
        "paperId": "224af6a9329adbdff76f835d730f52d89a24d66c",
        "externalIds": {
            "ArXiv": "1706.10220",
            "DBLP": "conf/uss/SikderAU17",
            "MAG": "2949779241",
            "CorpusId": 9975242
        },
        "corpusId": 9975242,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/224af6a9329adbdff76f835d730f52d89a24d66c",
        "title": "6thSense: A Context-aware Sensor-based Attack Detector for Smart Devices",
        "abstract": "Sensors (e.g., light, gyroscope, accelerotmeter) and sensing enabled applications on a smart device make the applications more user-friendly and efficient. However, the current permission-based sensor management systems of smart devices only focus on certain sensors and any App can get access to other sensors by just accessing the generic sensor API. In this way, attackers can exploit these sensors in numerous ways: they can extract or leak users' sensitive information, transfer malware, or record or steal sensitive information from other nearby devices. In this paper, we propose 6thSense, a context-aware intrusion detection system which enhances the security of smart devices by observing changes in sensor data for different tasks of users and creating a contextual model to distinguish benign and malicious behavior of sensors. 6thSense utilizes three different Machine Learning-based detection mechanisms (i.e., Markov Chain, Naive Bayes, and LMT) to detect malicious behavior associated with sensors. We implemented 6thSense on a sensor-rich Android smart device (i.e., smartphone) and collected data from typical daily activities of 50 real users. Furthermore, we evaluated the performance of 6thSense against three sensor-based threats: (1) a malicious App that can be triggered via a sensor (e.g., light), (2) a malicious App that can leak information via a sensor, and (3) a malicious App that can steal data using sensors. Our extensive evaluations show that the 6thSense framework is an effective and practical approach to defeat growing sensor-based threats with an accuracy above 96% without compromising the normal functionality of the device. Moreover, our framework costs minimal overhead.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 91,
        "citationCount": 116,
        "influentialCitationCount": 5,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-06-01",
        "journal": {
            "name": "ArXiv",
            "volume": "abs/1706.10220"
        },
        "citationStyles": {
            "bibtex": "@Article{Sikder20176thSenseAC,\n author = {A. Sikder and Hidayet Aksu and A. Uluagac},\n booktitle = {USENIX Security Symposium},\n journal = {ArXiv},\n title = {6thSense: A Context-aware Sensor-based Attack Detector for Smart Devices},\n volume = {abs/1706.10220},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "9097193",
                "name": "A. Sikder"
            },
            {
                "authorId": "2250333",
                "name": "Hidayet Aksu"
            },
            {
                "authorId": "47888295",
                "name": "A. Uluagac"
            }
        ]
    },
    {
        "paperId": "24eaa6529636044126ee866b60e5e29a983003b6",
        "externalIds": {
            "MAG": "2751580871",
            "DBLP": "conf/uss/Lai0SC17",
            "CorpusId": 40500109
        },
        "corpusId": 40500109,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/24eaa6529636044126ee866b60e5e29a983003b6",
        "title": "Phoenix: Rebirth of a Cryptographic Password-Hardening Service",
        "abstract": "Password remains the most widespread means of authentication, especially on the Internet. As such, it is the Achilles heel of many modern systems. Facebook pioneered using external cryptographic services to harden password-based authentication in a large scale. Everspaugh et al. (Usenix Security \u201915) provided the first comprehensive treatment of such a service and proposed the Pythia PRF-Service as a cryptographically secure solution. Recently, Schneider et al. (ACM CCS \u201916) proposed a more efficient solution which is secure in a weaker security model. In this work, we show that the scheme of Schneider et al. is vulnerable to offline attacks just after a single validation query. Therefore, it defeats the purpose of using an external crypto service in the first place and it should not be used in practice. Our attacks do not contradict their security claims, but instead show that their definitions are simply too weak. We thus suggest stronger security definitions that cover these kinds of real-world attacks, and an even more efficient construction, Phoenix, to achieve them. Our comprehensive evaluation confirms the practicability of Phoenix: It can handle up to 50% more requests than the scheme of Schneider et al. and up to three times more than Pythia.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 20,
        "citationCount": 39,
        "influentialCitationCount": 5,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "899-916"
        },
        "citationStyles": {
            "bibtex": "@Article{Lai2017PhoenixRO,\n author = {Russell W. F. Lai and Christoph Egger and Dominique Schr\u00f6der and Sherman S. M. Chow},\n booktitle = {USENIX Security Symposium},\n pages = {899-916},\n title = {Phoenix: Rebirth of a Cryptographic Password-Hardening Service},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "3064250",
                "name": "Russell W. F. Lai"
            },
            {
                "authorId": "46859511",
                "name": "Christoph Egger"
            },
            {
                "authorId": "40200839",
                "name": "Dominique Schr\u00f6der"
            },
            {
                "authorId": "145876490",
                "name": "Sherman S. M. Chow"
            }
        ]
    },
    {
        "paperId": "29aa4e03d46dd46d278e62f0e6d1af9c56368c31",
        "externalIds": {
            "MAG": "2752681103",
            "DBLP": "conf/uss/BayensLGBJZ17",
            "CorpusId": 27431135
        },
        "corpusId": 27431135,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/29aa4e03d46dd46d278e62f0e6d1af9c56368c31",
        "title": "See No Evil, Hear No Evil, Feel No Evil, Print No Evil? Malicious Fill Patterns Detection in Additive Manufacturing",
        "abstract": "Additive Manufacturing is an increasingly integral part of industrial manufacturing. Safety-critical products, such as medical prostheses and parts for aerospace and automotive industries are being printed by additive manufacturing methods with no standard means of verification. In this paper, we develop a scheme of verification and intrusion detection that is independent of the printer firmware and controller PC. The scheme incorporates analyses of the acoustic signature of a manufacturing process, real-time tracking of machine components, and post production materials analysis. Not only will these methods allow the end user to verify the accuracy of printed models, but they will also save material costs by verifying the prints in real time and stopping the process in the event of a discrepancy. We evaluate our methods using three different types of 3D printers and one CNC machine and find them to be 100% accurate when detecting erroneous prints in real time. We also present a use case in which an erroneous print of a tibial knee prosthesis is identified.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 41,
        "citationCount": 45,
        "influentialCitationCount": 6,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            },
            {
                "category": "Materials Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1181-1198"
        },
        "citationStyles": {
            "bibtex": "@Article{Bayens2017SeeNE,\n author = {C. Bayens and Tuan Le and Luis Garcia and R. Beyah and M. Javanmard and S. Zonouz},\n booktitle = {USENIX Security Symposium},\n pages = {1181-1198},\n title = {See No Evil, Hear No Evil, Feel No Evil, Print No Evil? Malicious Fill Patterns Detection in Additive Manufacturing},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "23692982",
                "name": "C. Bayens"
            },
            {
                "authorId": "2067950166",
                "name": "Tuan Le"
            },
            {
                "authorId": "144276195",
                "name": "Luis Garcia"
            },
            {
                "authorId": "35976991",
                "name": "R. Beyah"
            },
            {
                "authorId": "143774759",
                "name": "M. Javanmard"
            },
            {
                "authorId": "1800447",
                "name": "S. Zonouz"
            }
        ]
    },
    {
        "paperId": "2c02c0162722b8d93d41ec03bc39d0dc99fc7e26",
        "externalIds": {
            "DBLP": "conf/uss/McGregorWACR17",
            "MAG": "2752073028",
            "CorpusId": 20249959
        },
        "corpusId": 20249959,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/2c02c0162722b8d93d41ec03bc39d0dc99fc7e26",
        "title": "When the Weakest Link is Strong: Secure Collaboration in the Case of the Panama Papers",
        "abstract": "Success stories in usable security are rare. In this paper, however, we examine one notable security success: the year-long collaborative investigation of more than two terabytes of leaked documents during the \"Panama Papers\" project. During this effort, a large, diverse group of globally-distributed journalists met and maintained critical security goals-including protecting the source of the leaked documents and preserving the secrecy of the project until the desired launch date-all while hundreds of journalists collaborated remotely on a near-daily basis. \n \nThrough survey data from 118 participating journalists, as well as in-depth, semi-structured interviews with the designers and implementers of the systems underpinning the collaboration, we investigate the factors that supported this effort. We find that the tools developed for the project were both highly useful and highly usable, motivating journalists to use the secure communication platforms provided instead of seeking workarounds. We also found that, despite having little prior computer security experience, journalists adopted--and even appreciated--the strict security requirements imposed by the project leads. We also find that a shared sense of community and responsibility contributed to participants' motivation to meet and maintain security requirements. From these and other findings, we distill lessons for socio-technical systems with strong security requirements and identify opportunities for future work.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 50,
        "citationCount": 46,
        "influentialCitationCount": 3,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Political Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle",
            "Review"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "505-522"
        },
        "citationStyles": {
            "bibtex": "@Article{Mcgregor2017WhenTW,\n author = {Susan E Mcgregor and E. A. Watkins and M. N. Al-Ameen and Kelly E. Caine and Franziska Roesner},\n booktitle = {USENIX Security Symposium},\n pages = {505-522},\n title = {When the Weakest Link is Strong: Secure Collaboration in the Case of the Panama Papers},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2067197804",
                "name": "Susan E Mcgregor"
            },
            {
                "authorId": "29830026",
                "name": "E. A. Watkins"
            },
            {
                "authorId": "1397142019",
                "name": "M. N. Al-Ameen"
            },
            {
                "authorId": "1786759",
                "name": "Kelly E. Caine"
            },
            {
                "authorId": "3268360",
                "name": "Franziska Roesner"
            }
        ]
    },
    {
        "paperId": "2c0476d0825964abcc1ccd710bb176932847a5fc",
        "externalIds": {
            "DBLP": "conf/uss/FeltBKPBT17",
            "MAG": "2733681384",
            "CorpusId": 33312514
        },
        "corpusId": 33312514,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/2c0476d0825964abcc1ccd710bb176932847a5fc",
        "title": "Measuring HTTPS Adoption on the Web",
        "abstract": "HTTPS ensures that the Web has a base level of privacy and integrity. Security engineers, researchers, and browser vendors have long worked to spread HTTPS to as much of the Web as possible via outreach efforts, developer tools, and browser changes. How much progress have we made toward this goal of widespread HTTPS adoption? We gather metrics to benchmark the status and progress of HTTPS adoption on the Web in 2017. To evaluate HTTPS adoption from a user perspective, we collect large-scale, aggregate user metrics from two major browsers (Google Chrome and Mozilla Firefox). To measure HTTPS adoption from a Web developer perspective, we survey server support for HTTPS among top and long-tail websites. We draw on these metrics to gain insight into the current state of the HTTPS ecosystem.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 24,
        "citationCount": 160,
        "influentialCitationCount": 16,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle",
            "Review"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1323-1338"
        },
        "citationStyles": {
            "bibtex": "@Article{Felt2017MeasuringHA,\n author = {A. Felt and Richard Barnes and April King and Chris Palmer and Chris Bentzel and Parisa Tabriz},\n booktitle = {USENIX Security Symposium},\n pages = {1323-1338},\n title = {Measuring HTTPS Adoption on the Web},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2838694",
                "name": "A. Felt"
            },
            {
                "authorId": "2056119110",
                "name": "Richard Barnes"
            },
            {
                "authorId": "2093375899",
                "name": "April King"
            },
            {
                "authorId": "2056216939",
                "name": "Chris Palmer"
            },
            {
                "authorId": "40298816",
                "name": "Chris Bentzel"
            },
            {
                "authorId": "2230201",
                "name": "Parisa Tabriz"
            }
        ]
    },
    {
        "paperId": "2e570b7afc09acb2f32ae388db8b1c983e191ca0",
        "externalIds": {
            "MAG": "2751085911",
            "DBLP": "conf/uss/LauingerCBO017",
            "CorpusId": 10193286
        },
        "corpusId": 10193286,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/2e570b7afc09acb2f32ae388db8b1c983e191ca0",
        "title": "Game of Registrars: An Empirical Analysis of Post-Expiration Domain Name Takeovers",
        "abstract": "Every day, hundreds of thousands of Internet domain names are abandoned by their owners and become available for re-registration. Yet, there appears to be enough residual value and demand from domain speculators to give rise to a highly competitive ecosystem of drop-catch services that race to be the first to re-register potentially desirable domain names in the very instant the old registration is deleted. To pre-empt the competitive (and uncertain) race to re-registration, some registrars sell their own customers\u2019 expired domains pre-release, that is, even before the names are returned to general availability. These practices are not without controversy, and can have serious security consequences. In this paper, we present an empirical analysis of these two kinds of postexpiration domain ownership changes.We find that 10 % of all com domains are re-registered on the same day as their old registration is deleted. In the case of org, over 50 % of re-registrations on the deletion day occur during only 30 s. Furthermore, drop-catch services control over 75 % of accredited domain registrars and cause more than 80 % of domain creation attempts, but represent at most 9.5 % of successful domain creations. These findings highlight a significant demand for expired domains, and hint at highly competitive re-registrations. Our work sheds light on various questionable practices in an opaque ecosystem. The implications go beyond the annoyance of websites turned into \u201cInternet graffiti\u201d [26], as domain ownership changes have the potential to circumvent established security mechanisms.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 28,
        "citationCount": 32,
        "influentialCitationCount": 4,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Business",
                "source": "s2-fos-model"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Economics",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "865-880"
        },
        "citationStyles": {
            "bibtex": "@Article{Lauinger2017GameOR,\n author = {Tobias Lauinger and Abdelberi Chaabane and A. S. Buyukkayhan and Kaan Onarlioglu and William K. Robertson},\n booktitle = {USENIX Security Symposium},\n pages = {865-880},\n title = {Game of Registrars: An Empirical Analysis of Post-Expiration Domain Name Takeovers},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "1760272",
                "name": "Tobias Lauinger"
            },
            {
                "authorId": "34982211",
                "name": "Abdelberi Chaabane"
            },
            {
                "authorId": "2245554",
                "name": "A. S. Buyukkayhan"
            },
            {
                "authorId": "2948856",
                "name": "Kaan Onarlioglu"
            },
            {
                "authorId": "145368442",
                "name": "William K. Robertson"
            }
        ]
    },
    {
        "paperId": "30023acba3ac198a7d260228dc51fda8414b8860",
        "externalIds": {
            "DBLP": "conf/uss/SchumiloAGSH17",
            "MAG": "2751862727",
            "CorpusId": 12778185
        },
        "corpusId": 12778185,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/30023acba3ac198a7d260228dc51fda8414b8860",
        "title": "kAFL: Hardware-Assisted Feedback Fuzzing for OS Kernels",
        "abstract": "Many kinds of memory safety vulnerabilities have been endangering software systems for decades. Amongst other approaches, fuzzing is a promising technique to unveil various software faults. Recently, feedback-guided fuzzing demonstrated its power, producing a steady stream of security-critical software bugs. Most fuzzing efforts\u2014especially feedback fuzzing\u2014are limited to user space components of an operating system (OS), although bugs in kernel components are more severe, because they allow an attacker to gain access to a system with full privileges. Unfortunately, kernel components are difficult to fuzz as feedback mechanisms (i.e., guided code coverage) cannot be easily applied. Additionally, non-determinism due to interrupts, kernel threads, statefulness, and similar mechanisms poses problems. Furthermore, if a process fuzzes its own kernel, a kernel crash highly impacts the performance of the fuzzer as the OS needs to reboot. In this paper, we approach the problem of coverageguided kernel fuzzing in an OS-independent and hardware-assisted way: We utilize a hypervisor and Intel\u2019s Processor Trace (PT) technology. This allows us to remain independent of the target OS as we just require a small user space component that interacts with the targeted OS. As a result, our approach introduces almost no performance overhead, even in cases where the OS crashes, and performs up to 17,000 executions per second on an off-the-shelf laptop. We developed a framework called kernel-AFL (kAFL) to assess the security of Linux, macOS, and Windows kernel components. Among many crashes, we uncovered several flaws in the ext4 driver for Linux, the HFS and APFS file system of macOS, and the NTFS driver of Windows.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 24,
        "citationCount": 268,
        "influentialCitationCount": 26,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "167-182"
        },
        "citationStyles": {
            "bibtex": "@Article{Schumilo2017kAFLHF,\n author = {Sergej Schumilo and Cornelius Aschermann and R. Gawlik and Sebastian Schinzel and Thorsten Holz},\n booktitle = {USENIX Security Symposium},\n pages = {167-182},\n title = {kAFL: Hardware-Assisted Feedback Fuzzing for OS Kernels},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "23730111",
                "name": "Sergej Schumilo"
            },
            {
                "authorId": "2369928",
                "name": "Cornelius Aschermann"
            },
            {
                "authorId": "3141676",
                "name": "R. Gawlik"
            },
            {
                "authorId": "34935236",
                "name": "Sebastian Schinzel"
            },
            {
                "authorId": "144227650",
                "name": "Thorsten Holz"
            }
        ]
    },
    {
        "paperId": "329307382d223c34805a99c7c1dd447a79cf314f",
        "externalIds": {
            "MAG": "2753478887",
            "DBLP": "conf/uss/MachirySCSKV17",
            "CorpusId": 20652271
        },
        "corpusId": 20652271,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/329307382d223c34805a99c7c1dd447a79cf314f",
        "title": "DR. CHECKER: A Soundy Analysis for Linux Kernel Drivers",
        "abstract": "While kernel drivers have long been know to poses huge security risks, due to their privileged access and lower code quality, bug-finding tools for drivers are still greatly lacking both in quantity and effectiveness. This is because the pointer-heavy code in these drivers present some of the hardest challenges to static analysis, and their tight coupling with the hardware make dynamic analysis infeasible in most cases. In this work, we present DR. CHECKER, a soundy (i.e., mostly sound) bug-finding tool for Linux kernel drivers that is based on well-known program analysis techniques. We are able to overcome many of the inherent limitations of static analysis by scoping our analysis to only the most bug-prone parts of the kernel (i.e., the drivers), and by only sacrificing soundness in very few cases to ensure that our technique is both scalable and precise. DR. CHECKER is a fully-automated static analysis tool capable of performing general bug finding using both pointer and taint analyses that are flow-sensitive, context-sensitive, and fieldsensitive on kernel drivers. To demonstrate the scalability and efficacy of DR. CHECKER, we analyzed the drivers of nine production Linux kernels (3.1 million LOC), where it correctly identified 158 critical zero-day bugs with an overall precision of 78%.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 51,
        "citationCount": 104,
        "influentialCitationCount": 8,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1007-1024"
        },
        "citationStyles": {
            "bibtex": "@Article{Machiry2017DRCA,\n author = {Aravind Machiry and Chad Spensky and Jake Corina and Nick Stephens and Christopher Kr\u00fcgel and Giovanni Vigna},\n booktitle = {USENIX Security Symposium},\n pages = {1007-1024},\n title = {DR. CHECKER: A Soundy Analysis for Linux Kernel Drivers},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2275943",
                "name": "Aravind Machiry"
            },
            {
                "authorId": "2128455",
                "name": "Chad Spensky"
            },
            {
                "authorId": "15737370",
                "name": "Jake Corina"
            },
            {
                "authorId": "2054762708",
                "name": "Nick Stephens"
            },
            {
                "authorId": "1715189",
                "name": "Christopher Kr\u00fcgel"
            },
            {
                "authorId": "1711242",
                "name": "Giovanni Vigna"
            }
        ]
    },
    {
        "paperId": "354a89cada16c0b968f454ca6d20a20ab5a27e39",
        "externalIds": {
            "MAG": "2751531621",
            "DBLP": "conf/uss/TianZLWUGT17",
            "CorpusId": 33664900
        },
        "corpusId": 33664900,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/354a89cada16c0b968f454ca6d20a20ab5a27e39",
        "title": "SmartAuth: User-Centered Authorization for the Internet of Things",
        "abstract": "Internet of Things (IoT) platforms often require users to grant permissions to third-party apps, such as the ability to control a lock. Unfortunately, because few users act based upon, or even comprehend, permission screens, malicious or careless apps can become overprivileged by requesting unneeded permissions. To meet the IoT\u2019s unique security demands, such as cross-device, context-based, and automatic operations, we present a new design that supports user-centric, semantic-based \u201csmart\u201d authorization. Our technique, called SmartAuth , automatically collects security-relevant information from an IoT app\u2019s description, code and annotations, and generates an authorization user interface to bridge the gap between the functionalities explained to the user and the operations the app actually performs. Through the interface, security policies can be generated and enforced by enhancing existing platforms. To address the unique challenges in IoT app authorization, where states of multiple devices are used to determine the operations that can happen on other devices, we devise new technologies that link a device\u2019s context (e.g., a humidity sensor in a bath room) to an activity\u2019s semantics (e.g., taking a bath) using natural language processing and program analysis. We evaluate SmartAuth through user studies, \ufb01nding participants who use SmartAuth are signi\ufb01cantly more likely to avoid overprivileged apps.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 57,
        "citationCount": 216,
        "influentialCitationCount": 20,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "361-378"
        },
        "citationStyles": {
            "bibtex": "@Article{Tian2017SmartAuthUA,\n author = {Yuan Tian and N. Zhang and Yue-Hsun Lin and Xiaofeng Wang and Blase Ur and Xianzheng Guo and P. Tague},\n booktitle = {USENIX Security Symposium},\n pages = {361-378},\n title = {SmartAuth: User-Centered Authorization for the Internet of Things},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2152947658",
                "name": "Yuan Tian"
            },
            {
                "authorId": "71211474",
                "name": "N. Zhang"
            },
            {
                "authorId": "2603124",
                "name": "Yue-Hsun Lin"
            },
            {
                "authorId": "50141047",
                "name": "Xiaofeng Wang"
            },
            {
                "authorId": "2222651",
                "name": "Blase Ur"
            },
            {
                "authorId": "46909878",
                "name": "Xianzheng Guo"
            },
            {
                "authorId": "2331637",
                "name": "P. Tague"
            }
        ]
    },
    {
        "paperId": "3d31a206db59f698fea05ada5e23e881aeb07f9c",
        "externalIds": {
            "DBLP": "journals/corr/GreenLZIHE17",
            "ArXiv": "1703.09763",
            "MAG": "2963336267",
            "CorpusId": 17260866
        },
        "corpusId": 17260866,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/3d31a206db59f698fea05ada5e23e881aeb07f9c",
        "title": "AutoLock: Why Cache Attacks on ARM Are Harder Than You Think",
        "abstract": "Attacks on the microarchitecture of modern processors have become a practical threat to security and privacy in desktop and cloud computing. Recently, cache attacks have successfully been demonstrated on ARM based mobile devices, suggesting they are as vulnerable as their desktop or server counterparts. In this work, we show that previous literature might have left an overly pessimistic conclusion of ARM's security as we unveil AutoLock: an internal performance enhancement found in inclusive cache levels of ARM processors that adversely affects Evict+Time, Prime+Probe, and Evict+Reload attacks. AutoLock's presence on system-on-chips (SoCs) is not publicly documented, yet knowing that it is implemented is vital to correctly assess the risk of cache attacks. We therefore provide a detailed description of the feature and propose three ways to detect its presence on actual SoCs. We illustrate how AutoLock impedes cross-core cache evictions, but show that its effect can also be compensated in a practical attack. Our findings highlight the intricacies of cache attacks on ARM and suggest that a fair and comprehensive vulnerability assessment requires an in-depth understanding of ARM's cache architectures and rigorous testing across a broad range of ARM based devices.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 61,
        "citationCount": 44,
        "influentialCitationCount": 2,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-03-01",
        "journal": {
            "name": "ArXiv",
            "volume": "abs/1703.09763"
        },
        "citationStyles": {
            "bibtex": "@Article{Green2017AutoLockWC,\n author = {Marc Green and Leandro Rodrigues Lima and A. Zankl and Gorka Irazoqui Apecechea and Johann Heyszl and T. Eisenbarth},\n booktitle = {USENIX Security Symposium},\n journal = {ArXiv},\n title = {AutoLock: Why Cache Attacks on ARM Are Harder Than You Think},\n volume = {abs/1703.09763},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2111019653",
                "name": "Marc Green"
            },
            {
                "authorId": "2066015633",
                "name": "Leandro Rodrigues Lima"
            },
            {
                "authorId": "2563139",
                "name": "A. Zankl"
            },
            {
                "authorId": "2835874",
                "name": "Gorka Irazoqui Apecechea"
            },
            {
                "authorId": "3195830",
                "name": "Johann Heyszl"
            },
            {
                "authorId": "143719440",
                "name": "T. Eisenbarth"
            }
        ]
    },
    {
        "paperId": "3d45591c638a28aec92571a3916aae42a29ede47",
        "externalIds": {
            "DBLP": "conf/uss/XuMX0CM17",
            "MAG": "2752802732",
            "CorpusId": 41717940
        },
        "corpusId": 41717940,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/3d45591c638a28aec92571a3916aae42a29ede47",
        "title": "Postmortem Program Analysis with Hardware-Enhanced Post-Crash Artifacts",
        "abstract": "While a core dump carries a large amount of information, it barely serves as informative debugging aids in locating software faults because it carries information that indicates only a partial chronology of how program reached a crash site. Recently, this situation has been signi\ufb01cantly improved. With the emergence of hardware-assisted processor tracing, software developers and security analysts can trace program execution and integrate them into a core dump. In comparison with an ordinary core dump, the new post-crash artifact provides software developers and security analysts with more clues as to a program crash. To use it for failure diagnosis, however, it still requires strenuous manual efforts. In this work, we propose POMP , an automated tool to facilitate the analysis of post-crash artifacts. More specifically, POMP introduces a new reverse execution mechanism to construct the data \ufb02ow that a program followed prior to its crash. By using the data \ufb02ow, POMP then performs backward taint analysis and highlights those program statements that actually contribute to the crash. To demonstrate its effectiveness in pinpointing program statements truly pertaining to a program crash, we have implemented POMP for Linux system on x86-32 platform, and tested it against various program crashes resulting from 31 distinct real-world security vulnerabilities. We show that, POMP can accurately and ef\ufb01ciently pinpoint program statements that truly pertain to the crashes, making failure diagnosis signi\ufb01cantly convenient.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 39,
        "citationCount": 47,
        "influentialCitationCount": 9,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "17-32"
        },
        "citationStyles": {
            "bibtex": "@Article{Xu2017PostmortemPA,\n author = {Jun Xu and Dongliang Mu and Xinyu Xing and Peng Liu and Ping Chen and Bing Mao},\n booktitle = {USENIX Security Symposium},\n pages = {17-32},\n title = {Postmortem Program Analysis with Hardware-Enhanced Post-Crash Artifacts},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2150635567",
                "name": "Jun Xu"
            },
            {
                "authorId": "3491260",
                "name": "Dongliang Mu"
            },
            {
                "authorId": "143989287",
                "name": "Xinyu Xing"
            },
            {
                "authorId": "39336958",
                "name": "Peng Liu"
            },
            {
                "authorId": "2119039795",
                "name": "Ping Chen"
            },
            {
                "authorId": "2245004",
                "name": "Bing Mao"
            }
        ]
    },
    {
        "paperId": "40b438a3c824c396dd1cb50a3dbad9df5ce2d8d5",
        "externalIds": {
            "DBLP": "conf/uss/LeeJJKCCKPK17",
            "MAG": "2727025244",
            "CorpusId": 33364453
        },
        "corpusId": 33364453,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/40b438a3c824c396dd1cb50a3dbad9df5ce2d8d5",
        "title": "Hacking in Darkness: Return-oriented Programming against Secure Enclaves",
        "abstract": "Intel Software Guard Extensions (SGX) is a hardware-based Trusted Execution Environment (TEE) that is widely seen as a promising solution to traditional security threats. While SGX promises strong protections to bug-free software, decades of experience show that we have to expect vulnerabilities in any non-trivial application. In a traditional environment, such vulnerabilities often allow attackers to take complete control over the vulnerable systems. Efforts to evaluate the security of SGX have been focusing on side-channels. So far, neither a practical attack against a vulnerability in enclave code nor a proof-of-concept attack scenario has been demonstrated. Thus, a fundamental question remains: What are the consequences and dangers of having a memory corruption vulnerability in enclave code? To answer this question, we comprehensively analyze the exploitation technique against vulnerabilities inside enclaves. We demonstrate practical exploitation techniques, called Dark-ROP, which can completely disarm the security guarantees of SGX. Dark-ROP exploits a memory corruption vulnerability in the enclave software through return-oriented programming (ROP), but it differs significantly in a sense that the target enclave runs under a solid hardware protection. We overcome this problem by exploiting SGX-specific properties and obstacles by formulating a novel ROP attack scheme against SGX under practical assumptions. Specifically, we have built several oracles that tell the status of enclave execution to the attacker in order to enable launching of ROP attack while both code and data are hidden. Additionally, we exfiltrate the enclave\u2019s code and data into a shadow application to fully control the execution environment while satisfying all security requirements of SGX. This shadow application emulates the enclave under the complete control of the attacker, using the enclave (through ROP calls) only to perform SGX operations such as reading the enclave\u2019s SGX crypto keys. The consequences of Dark-ROP are alarming; the attacker can completely breach the enclave\u2019s memory protections and trick the SGX hardware into disclosing the enclave\u2019s encryption keys and producing measurement reports that defeat remote attestation. This result strongly suggests that traditional security mitigation should be taken more seriously than common directions that communities are actively taking for convince (e.g., Haven or Graphene), which essentially increase the trust computing base and the attack surface.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 31,
        "citationCount": 175,
        "influentialCitationCount": 17,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "523-539"
        },
        "citationStyles": {
            "bibtex": "@Article{Lee2017HackingID,\n author = {Jae-Hyuk Lee and Jinsoo Jang and Yeongjin Jang and Nohyun Kwak and Yeseul Choi and Changho Choi and Taesoo Kim and Marcus Peinado and Brent Byunghoon Kang},\n booktitle = {USENIX Security Symposium},\n pages = {523-539},\n title = {Hacking in Darkness: Return-oriented Programming against Secure Enclaves},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2108805390",
                "name": "Jae-Hyuk Lee"
            },
            {
                "authorId": "51247301",
                "name": "Jinsoo Jang"
            },
            {
                "authorId": "2859830",
                "name": "Yeongjin Jang"
            },
            {
                "authorId": "23645624",
                "name": "Nohyun Kwak"
            },
            {
                "authorId": "2111165711",
                "name": "Yeseul Choi"
            },
            {
                "authorId": "144821447",
                "name": "Changho Choi"
            },
            {
                "authorId": "3254849",
                "name": "Taesoo Kim"
            },
            {
                "authorId": "143697538",
                "name": "Marcus Peinado"
            },
            {
                "authorId": "1826555",
                "name": "Brent Byunghoon Kang"
            }
        ]
    },
    {
        "paperId": "418bbb4361b91579e98f4912131d866be3bbf9b8",
        "externalIds": {
            "DBLP": "conf/uss/2017",
            "CorpusId": 26891065
        },
        "corpusId": 26891065,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/418bbb4361b91579e98f4912131d866be3bbf9b8",
        "title": "26th USENIX Security Symposium, USENIX Security 2017, Vancouver, BC, Canada, August 16-18, 2017",
        "abstract": null,
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 0,
        "citationCount": 2,
        "influentialCitationCount": 0,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": null,
        "publicationDate": null,
        "journal": null,
        "citationStyles": {
            "bibtex": "@Inproceedings{None,\n booktitle = {USENIX Security Symposium},\n title = {26th USENIX Security Symposium, USENIX Security 2017, Vancouver, BC, Canada, August 16-18, 2017},\n year = {2017}\n}\n"
        },
        "authors": []
    },
    {
        "paperId": "4754cf3c0e779e76579a117d2cf9e86c926cda2e",
        "externalIds": {
            "DBLP": "conf/uss/GasparisQSK17",
            "MAG": "2750917225",
            "CorpusId": 35917401
        },
        "corpusId": 35917401,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/4754cf3c0e779e76579a117d2cf9e86c926cda2e",
        "title": "Detecting Android Root Exploits by Learning from Root Providers",
        "abstract": "Malware that are capable of rooting Android phones are arguably, the most dangerous ones. Unfortunately, detecting the presence of root exploits in malware is a very challenging problem. This is because such malware typically target specific Android devices and/or OS versions and simply abort upon detecting that an expected runtime environment (e.g., specific vulnerable device driver or preconditions) is not present; thus, emulators such as Google Bouncer fail in triggering and revealing such root exploits. In this paper, we build a system RootExplorer, to tackle this problem. The key observation that drives the design of RootExplorer is that, in addition to malware, there are legitimate commercial grade Android apps backed by large companies that facilitate the rooting of phones, referred to as root providers or one-click root apps. By conducting extensive analysis on oneclick root apps, RootExplorer learns the precise preconditions and environmental requirements of root exploits. It then uses this information to construct proper analysis environments either in an emulator or on a smartphone testbed to effectively detect embedded root exploits in malware. Our extensive experimental evaluations with RootExplorer show that it is able to detect all malware samples known to perform root exploits and incurs no false positives. We have also found an app that is currently available on the markets, that has an embedded",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 59,
        "citationCount": 24,
        "influentialCitationCount": 1,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1129-1144"
        },
        "citationStyles": {
            "bibtex": "@Article{Gasparis2017DetectingAR,\n author = {I. Gasparis and Zhiyun Qian and Chengyu Song and S. Krishnamurthy},\n booktitle = {USENIX Security Symposium},\n pages = {1129-1144},\n title = {Detecting Android Root Exploits by Learning from Root Providers},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "101595313",
                "name": "I. Gasparis"
            },
            {
                "authorId": "1794927",
                "name": "Zhiyun Qian"
            },
            {
                "authorId": "51222066",
                "name": "Chengyu Song"
            },
            {
                "authorId": "38774813",
                "name": "S. Krishnamurthy"
            }
        ]
    },
    {
        "paperId": "4d6ae745a94cb425fa817b9442cfbd13d1c88411",
        "externalIds": {
            "DBLP": "conf/uss/SuGRY17",
            "MAG": "2747102227",
            "CorpusId": 29334443
        },
        "corpusId": 29334443,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/4d6ae745a94cb425fa817b9442cfbd13d1c88411",
        "title": "USB Snooping Made Easy: Crosstalk Leakage Attacks on USB Hubs",
        "abstract": "The Universal Serial Bus (USB) is the most prominent interface for connecting peripheral devices to computers. USB-connected input devices, such as keyboards, cardswipers and fingerprint readers, often send sensitive information to the computer. As such information is only sent along the communication path from the device to the computer, it was hitherto thought to be protected from potentially compromised devices outside this path. We have tested over 50 different computers and external hubs and found that over 90% of them suffer from a crosstalk leakage effect that allows malicious peripheral devices located off the communication path to capture and observe sensitive USB traffic. We also show that in many cases this crosstalk leakage can be observed on the USB power lines, thus defeating a common USB isolation countermeasure of using a charge-only USB cable which physically disconnects the USB data lines. Demonstrating the attack\u2019s low costs and ease of concealment, we modify a novelty USB lamp to implement an off-path attack which captures and exfiltrates USB traffic when connected to a vulnerable internal or a external USB hub.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 38,
        "citationCount": 30,
        "influentialCitationCount": 2,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1145-1161"
        },
        "citationStyles": {
            "bibtex": "@Article{Su2017USBSM,\n author = {Yang Su and Daniel Genkin and D. Ranasinghe and Y. Yarom},\n booktitle = {USENIX Security Symposium},\n pages = {1145-1161},\n title = {USB Snooping Made Easy: Crosstalk Leakage Attacks on USB Hubs},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2117999755",
                "name": "Yang Su"
            },
            {
                "authorId": "2062558",
                "name": "Daniel Genkin"
            },
            {
                "authorId": "2206586",
                "name": "D. Ranasinghe"
            },
            {
                "authorId": "49968838",
                "name": "Y. Yarom"
            }
        ]
    },
    {
        "paperId": "520176be03fae892b0265c820c7512d16cecb6d8",
        "externalIds": {
            "DBLP": "conf/uss/ChuaSSL17",
            "MAG": "2753395445",
            "CorpusId": 5843641
        },
        "corpusId": 5843641,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/520176be03fae892b0265c820c7512d16cecb6d8",
        "title": "Neural Nets Can Learn Function Type Signatures From Binaries",
        "abstract": "Function type signatures are important for binary analysis, but they are not available in COTS binaries. In this paper, we present a new system called E KLAVYA which trains a recurrent neural network to recover function type signatures from disassembled binary code. E KLAVYA assumes no knowledge of the target instruction set semantics to make such inference. More importantly, E KLAVYA results are \u201cexplicable\u201d: we \ufb01nd by analyzing its model that it auto-learns relationships between instructions, compiler conventions, stack frame setup instructions, use-before-write patterns, and operations relevant to identifying types directly from binaries. In our evaluation on Linux binaries compiled with clang and gcc , for two different architectures (x86 and x64), E KLAVYA exhibits accuracy of around 84% and 81% for function argument count and type recovery tasks respectively. E KLAVYA generalizes well across the compilers tested on two different instruction sets with various optimization levels, without any specialized prior knowledge of the instruction set, compiler or optimization level.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 65,
        "citationCount": 146,
        "influentialCitationCount": 22,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "99-116"
        },
        "citationStyles": {
            "bibtex": "@Article{Chua2017NeuralNC,\n author = {Zheng Leong Chua and Shiqi Shen and P. Saxena and Zhenkai Liang},\n booktitle = {USENIX Security Symposium},\n pages = {99-116},\n title = {Neural Nets Can Learn Function Type Signatures From Binaries},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2775791",
                "name": "Zheng Leong Chua"
            },
            {
                "authorId": "2072819932",
                "name": "Shiqi Shen"
            },
            {
                "authorId": "1750032",
                "name": "P. Saxena"
            },
            {
                "authorId": "2728022",
                "name": "Zhenkai Liang"
            }
        ]
    },
    {
        "paperId": "58ef321ef31e5385c3fc73a688ac539cebdc1ca4",
        "externalIds": {
            "MAG": "2753573171",
            "DBLP": "conf/uss/WangWLZW17",
            "CorpusId": 13248261
        },
        "corpusId": 13248261,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/58ef321ef31e5385c3fc73a688ac539cebdc1ca4",
        "title": "CacheD: Identifying Cache-Based Timing Channels in Production Software",
        "abstract": "Side-channel attacks recover secret information by analyzing the physical implementation of cryptosystems based on non-functional computational characteristics, e.g. time, power, and memory usage. Among all wellknown side channels, cache-based timing channels are notoriously severe, leading to practical attacks against certain implementations of theoretically secure crypto algorithms, such as RSA, ElGamal and AES. Such attacks target the hierarchical design of the modern computer memory system, where different memory access patterns of a program can bring observable timing difference. In this work, we propose a novel technique to help software developers identify potential vulnerabilities that can lead to cache-based timing attacks. Our technique leverages symbolic execution and constraint solving to detect potential cache differences at each program point. We adopt a cache model that is general enough to capture various threat models that are employed in practical timing attacks. Our modeling and analysis are based on the formulation of cache access at different program locations along execution traces. We have implemented the proposed technique as a practical tool named CacheD (Cache Difference), and evaluated CacheD towards multiple real-world cryptosystems. CacheD takes less than 17 CPU hours to analyze 9 widely used cryptographic algorithm implementations with over 120 million instructions in total. The evaluation results show that our technique can accurately identify vulnerabilities reported by previous research. Moreover, we have successfully discovered previously unknown issues in two widely used cryptosystems, OpenSSL and Botan.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 58,
        "citationCount": 118,
        "influentialCitationCount": 12,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "235-252"
        },
        "citationStyles": {
            "bibtex": "@Article{Wang2017CacheDIC,\n author = {Shuai Wang and Pei Wang and Xiao Liu and Danfeng Zhang and Dinghao Wu},\n booktitle = {USENIX Security Symposium},\n pages = {235-252},\n title = {CacheD: Identifying Cache-Based Timing Channels in Production Software},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2118511020",
                "name": "Shuai Wang"
            },
            {
                "authorId": "2118950738",
                "name": "Pei Wang"
            },
            {
                "authorId": "2111310198",
                "name": "Xiao Liu"
            },
            {
                "authorId": "2968310",
                "name": "Danfeng Zhang"
            },
            {
                "authorId": "9180687",
                "name": "Dinghao Wu"
            }
        ]
    },
    {
        "paperId": "5903977e9b2f54f5c709e3148bd684cbd87c303f",
        "externalIds": {
            "DBLP": "conf/uss/PanYF17",
            "CorpusId": 11738092
        },
        "corpusId": 11738092,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/5903977e9b2f54f5c709e3148bd684cbd87c303f",
        "title": "Digtool: A Virtualization-Based Framework for Detecting Kernel Vulnerabilities",
        "abstract": "Discovering vulnerabilities in operating system (OS) kernels and patching them is crucial for OS security. However, there is a lack of effective kernel vulnerability detection tools, especially for closed-source OSes such as Microsoft Windows. In this paper, we present Digtool, an effective, binary-code-only, kernel vulnerability detection framework. Built atop a virtualization monitor we designed, Digtool successfully captures various dynamic behaviors of kernel execution, such as kernel object allocation, kernel memory access, thread scheduling, and function invoking. With these behaviors, Digtool has identified 45 zero-day vulnerabilities such as outof-bounds access, use-after-free, and time-of-check-totime-of-use among both kernel code and device drivers of recent versions of Microsoft Windows, including Windows 7 and Windows 10.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 28,
        "citationCount": 38,
        "influentialCitationCount": 2,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "149-165"
        },
        "citationStyles": {
            "bibtex": "@Article{Pan2017DigtoolAV,\n author = {Jianfeng Pan and Guanglu Yan and Xiaocao Fan},\n booktitle = {USENIX Security Symposium},\n pages = {149-165},\n title = {Digtool: A Virtualization-Based Framework for Detecting Kernel Vulnerabilities},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "49106839",
                "name": "Jianfeng Pan"
            },
            {
                "authorId": "1750269",
                "name": "Guanglu Yan"
            },
            {
                "authorId": "23644653",
                "name": "Xiaocao Fan"
            }
        ]
    },
    {
        "paperId": "5a65b02a458c40fcdca0402798ec3a9e4d8ea304",
        "externalIds": {
            "MAG": "2752078705",
            "DBLP": "conf/uss/YangJOLL17",
            "CorpusId": 33376316
        },
        "corpusId": 33376316,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/5a65b02a458c40fcdca0402798ec3a9e4d8ea304",
        "title": "Dead Store Elimination (Still) Considered Harmful",
        "abstract": "Dead store elimination is a widely used compiler optimization that reduces code size and improves performance. However, it can also remove seemingly useless memory writes that the programmer intended to clear sensitive data after its last use. Security-savvy developers have long been aware of this phenomenon and have devised ways to prevent the compiler from eliminating these data scrubbing operations. In this paper, we survey the set of techniques found in the wild that are intended to prevent data-scrubbing operations from being removed during dead store elimination. We evaluated the effectiveness and availability of each technique and found that some fail to protect data-scrubbing writes. We also examined eleven open source security projects to determine whether their specific memory scrubbing function was effective and whether it was used consistently. We found four of the eleven projects using flawed scrubbing techniques that may fail to scrub sensitive data and an additional four projects not using their scrubbing function consistently. We address the problem of dead store elimination removing scrubbing operations with a compiler-based approach by adding a new option to an LLVM-based compiler that retains scrubbing operations. We also synthesized existing techniques to develop a best-of-breed scrubbing function and are making it available to developers.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 13,
        "citationCount": 32,
        "influentialCitationCount": 4,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle",
            "Review"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1025-1040"
        },
        "citationStyles": {
            "bibtex": "@Article{Yang2017DeadSE,\n author = {Zhaomo Yang and Brian Johannesmeyer and Anders Trier Olesen and Sorin Lerner and Kirill Levchenko},\n booktitle = {USENIX Security Symposium},\n pages = {1025-1040},\n title = {Dead Store Elimination (Still) Considered Harmful},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "19193048",
                "name": "Zhaomo Yang"
            },
            {
                "authorId": "2137162",
                "name": "Brian Johannesmeyer"
            },
            {
                "authorId": "23739278",
                "name": "Anders Trier Olesen"
            },
            {
                "authorId": "145655689",
                "name": "Sorin Lerner"
            },
            {
                "authorId": "1763395",
                "name": "Kirill Levchenko"
            }
        ]
    },
    {
        "paperId": "5db14b549618a98e31e2847d859495dd49863d96",
        "externalIds": {
            "MAG": "2750990141",
            "DBLP": "conf/uss/TangSS17",
            "DOI": "10.7916/d8-0ytv-3a53",
            "CorpusId": 20410147
        },
        "corpusId": 20410147,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/5db14b549618a98e31e2847d859495dd49863d96",
        "title": "CLKSCREW: Exposing the Perils of Security-Oblivious Energy Management",
        "abstract": "The need for power- and energy-ef\ufb01cient computing has resulted in aggressive cooperative hardware-software energy management mechanisms on modern commodity devices. Most systems today, for example, allow software to control the frequency and voltage of the underlying hardware at a very \ufb01ne granularity to extend battery life. Despite their bene\ufb01ts, these software-exposed energy management mechanisms pose grave security implications that have not been studied before. In this work, we present the CLK SCREW attack, a new class of fault attacks that exploit the security-obliviousness of energy management mechanisms to break security. A novel bene\ufb01t for the attackers is that these fault attacks become more accessible since they can now be conducted without the need for physical access to the devices or fault injection equipment. We demonstrate CLK SCREW on commodity ARM/Android devices. We show that a malicious kernel driver (1) can extract secret cryptographic keys from Trustzone, and (2) can escalate its privileges by loading self-signed code into Trustzone. As the \ufb01rst work to show the security rami\ufb01cations of energy management mechanisms, we urge the community to re-examine these security-oblivious designs.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 50,
        "citationCount": 263,
        "influentialCitationCount": 25,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            },
            {
                "category": "Environmental Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1057-1074"
        },
        "citationStyles": {
            "bibtex": "@Article{Tang2017CLKSCREWET,\n author = {Adrian Tang and S. Sethumadhavan and S. Stolfo},\n booktitle = {USENIX Security Symposium},\n pages = {1057-1074},\n title = {CLKSCREW: Exposing the Perils of Security-Oblivious Energy Management},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2080173155",
                "name": "Adrian Tang"
            },
            {
                "authorId": "1738240",
                "name": "S. Sethumadhavan"
            },
            {
                "authorId": "1807433",
                "name": "S. Stolfo"
            }
        ]
    },
    {
        "paperId": "5e0a6e47feba6fcba4cc64334e56e5107aa5eea5",
        "externalIds": {
            "DBLP": "conf/uss/BanescuCP17",
            "MAG": "2751013686",
            "CorpusId": 10987937
        },
        "corpusId": 10987937,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/5e0a6e47feba6fcba4cc64334e56e5107aa5eea5",
        "title": "Predicting the Resilience of Obfuscated Code Against Symbolic Execution Attacks via Machine Learning",
        "abstract": "Software obfuscation transforms code such that it is more \ndifficult to reverse engineer. However, it is known that \ngiven enough resources, an attacker will successfully reverse \nengineer an obfuscated program. Therefore, an \nopen challenge for software obfuscation is estimating the \ntime an obfuscated program is able to withstand a given \nreverse engineering attack. This paper proposes a general \nframework for choosing the most relevant software \nfeatures to estimate the effort of automated attacks. Our \nframework uses these software features to build regression \nmodels that can predict the resilience of different \nsoftware protection transformations against automated \nattacks. To evaluate the effectiveness of our approach, \nwe instantiate it in a case-study about predicting the time \nneeded to deobfuscate a set of C programs, using an attack \nbased on symbolic execution. To train regression \nmodels our system requires a large set of programs as \ninput. We have therefore implemented a code generator \nthat can generate large numbers of arbitrarily complex \nrandom C functions. Our results show that features \nsuch as the number of community structures in the graphrepresentation \nof symbolic path-constraints, are far more \nrelevant for predicting deobfuscation time than other features \ngenerally used to measure the potency of controlflow \nobfuscation (e.g. cyclomatic complexity). Our best \nmodel is able to predict the number of seconds of symbolic \nexecution-based deobfuscation attacks with over \n90% accuracy for 80% of the programs in our dataset, \nwhich also includes several realistic hash functions.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 55,
        "citationCount": 43,
        "influentialCitationCount": 1,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "661-678"
        },
        "citationStyles": {
            "bibtex": "@Article{Banescu2017PredictingTR,\n author = {Sebastian Banescu and C. Collberg and A. Pretschner},\n booktitle = {USENIX Security Symposium},\n pages = {661-678},\n title = {Predicting the Resilience of Obfuscated Code Against Symbolic Execution Attacks via Machine Learning},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2963338",
                "name": "Sebastian Banescu"
            },
            {
                "authorId": "1679150",
                "name": "C. Collberg"
            },
            {
                "authorId": "144658639",
                "name": "A. Pretschner"
            }
        ]
    },
    {
        "paperId": "633e28ae5adebf7f6ec5ad40755388a3937c0be6",
        "externalIds": {
            "DBLP": "conf/uss/MateticAKDSGJC17",
            "MAG": "2751696670",
            "CorpusId": 7507652
        },
        "corpusId": 7507652,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/633e28ae5adebf7f6ec5ad40755388a3937c0be6",
        "title": "ROTE: Rollback Protection for Trusted Execution",
        "abstract": "Security architectures such as Intel SGX need protection against rollback attacks, where the adversary violates the integrity of a protected application state by replaying old persistently stored data or by starting multiple application instances. Successful rollback attacks have serious consequences on applications such as financial services. In this paper, we propose a new approach for rollback protection on SGX. The intuition behind our approach is simple. A single platform cannot efficiently prevent rollback, but in many practical scenarios, multiple processors can be enrolled to assist each other. We design and implement a rollback protection system called ROTE that realizes integrity protection as a distributed system. We construct a model that captures adversarial ability to schedule enclave execution and show that our solution achieves a strong security property: the only way to violate integrity is to reset all participating platforms to their initial state. We implement ROTE and demonstrate that distributed rollback protection can provide significantly better performance than previously known solutions based on local non-volatile memory.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 50,
        "citationCount": 219,
        "influentialCitationCount": 22,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1289-1306"
        },
        "citationStyles": {
            "bibtex": "@Article{Matetic2017ROTERP,\n author = {Sinisa Matetic and Mansoor Ahmed and Kari Kostiainen and Aritra Dhar and David M. Sommer and Arthur Gervais and A. Juels and Srdjan Capkun},\n booktitle = {USENIX Security Symposium},\n pages = {1289-1306},\n title = {ROTE: Rollback Protection for Trusted Execution},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2323005",
                "name": "Sinisa Matetic"
            },
            {
                "authorId": "50307408",
                "name": "Mansoor Ahmed"
            },
            {
                "authorId": "145243802",
                "name": "Kari Kostiainen"
            },
            {
                "authorId": "34693927",
                "name": "Aritra Dhar"
            },
            {
                "authorId": "145039427",
                "name": "David M. Sommer"
            },
            {
                "authorId": "39000631",
                "name": "Arthur Gervais"
            },
            {
                "authorId": "1687161",
                "name": "A. Juels"
            },
            {
                "authorId": "1791522",
                "name": "Srdjan Capkun"
            }
        ]
    },
    {
        "paperId": "659996fa1d5c8eb8d5d92e94318156248cf33176",
        "externalIds": {
            "MAG": "2742225091",
            "DBLP": "conf/uss/WangBLJ17",
            "CorpusId": 10051640
        },
        "corpusId": 10051640,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/659996fa1d5c8eb8d5d92e94318156248cf33176",
        "title": "Locally Differentially Private Protocols for Frequency Estimation",
        "abstract": "Protocols satisfying Local Differential Privacy (LDP) enable parties to collect aggregate information about a population while protecting each user\u2019s privacy, without relying on a trusted third party. LDP protocols (such as Google\u2019s RAPPOR) have been deployed in real-world scenarios. In these protocols, a user encodes his private information and perturbs the encoded value locally before sending it to an aggregator, who combines values that users contribute to infer statistics about the population. In this paper, we introduce a framework that generalizes several LDP protocols proposed in the literature. Our framework yields a simple and fast aggregation algorithm, whose accuracy can be precisely analyzed. Our in-depth analysis enables us to choose optimal parameters, resulting in two new protocols (i.e., Optimized Unary Encoding and Optimized Local Hashing) that provide better utility than protocols previously proposed. We present precise conditions for when each proposed protocol should be used, and perform experiments that demonstrate the advantage of our proposed protocols.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 17,
        "citationCount": 487,
        "influentialCitationCount": 139,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-01",
        "journal": {
            "pages": "729-745"
        },
        "citationStyles": {
            "bibtex": "@Article{Wang2017LocallyDP,\n author = {Tianhao Wang and Jeremiah Blocki and Ninghui Li and S. Jha},\n booktitle = {USENIX Security Symposium},\n pages = {729-745},\n title = {Locally Differentially Private Protocols for Frequency Estimation},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "49980880",
                "name": "Tianhao Wang"
            },
            {
                "authorId": "35785880",
                "name": "Jeremiah Blocki"
            },
            {
                "authorId": "1740882",
                "name": "Ninghui Li"
            },
            {
                "authorId": "1680133",
                "name": "S. Jha"
            }
        ]
    },
    {
        "paperId": "65ea39f3cb19e446d708b639060460c580a328e4",
        "externalIds": {
            "DBLP": "conf/uss/DingQSHKL17",
            "MAG": "2752985907",
            "CorpusId": 2049710
        },
        "corpusId": 2049710,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/65ea39f3cb19e446d708b639060460c580a328e4",
        "title": "Efficient Protection of Path-Sensitive Control Security",
        "abstract": "Control-Flow Integrity (CFI), as a means to prevent control-flow hijacking attacks, enforces that each instruction transfers control to an address in a set of valid targets. The security guarantee of CFI thus depends on the definition of valid targets, which conventionally are defined as the result of a static analysis. Unfortunately, previous research has demonstrated that such a definition, and thus any implementation that enforces it, still allows practical control-flow attacks. In this work, we present a path-sensitive variation of CFI that utilizes runtime path-sensitive point-to analysis to compute the legitimate control transfer targets. We have designed and implemented a runtime environment, PITTYPAT, that enforces path-sensitive CFI efficiently by combining commodity, low-overhead hardware monitoring and a novel runtime points-to analysis. Our formal analysis and empirical evaluation demonstrate that, compared to CFI based on static analysis, PITTYPAT ensures that applications satisfy stronger security guarantees, with acceptable overhead for security-critical contexts.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 43,
        "citationCount": 107,
        "influentialCitationCount": 25,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "131-148"
        },
        "citationStyles": {
            "bibtex": "@Article{Ding2017EfficientPO,\n author = {Ren Ding and Chenxiong Qian and Chengyu Song and William R. Harris and Taesoo Kim and Wenke Lee},\n booktitle = {USENIX Security Symposium},\n pages = {131-148},\n title = {Efficient Protection of Path-Sensitive Control Security},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2058085275",
                "name": "Ren Ding"
            },
            {
                "authorId": "3103967",
                "name": "Chenxiong Qian"
            },
            {
                "authorId": "51222066",
                "name": "Chengyu Song"
            },
            {
                "authorId": "144740804",
                "name": "William R. Harris"
            },
            {
                "authorId": "3254849",
                "name": "Taesoo Kim"
            },
            {
                "authorId": "1738428",
                "name": "Wenke Lee"
            }
        ]
    },
    {
        "paperId": "6606bb872ec146da70b28e46ded4d5fdb9fa6d54",
        "externalIds": {
            "DBLP": "conf/uss/EykholtPM17",
            "MAG": "2751576534",
            "CorpusId": 11593157
        },
        "corpusId": 11593157,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/6606bb872ec146da70b28e46ded4d5fdb9fa6d54",
        "title": "Ensuring Authorized Updates in Multi-user Database-Backed Applications",
        "abstract": "Database-backed applications rely on access control policies based on views to protect sensitive data from unauthorized parties. Current techniques assume that the application\u2019s database tables contain a column that enables mapping a user to rows in the table. This assumption allows database views or similar mechanisms to enforce per-user access controls. However, not all database tables contain sufficient information to map a user to rows in the table, as a result of database normalization, and thus, require the joining of multiple tables. In a survey of 10 popular open-source web applications, on average, 21% of the database tables require a join. This means that current techniques cannot enforce security policies on all update queries for these applications, due to a well-known view update problem. In this paper, we propose phantom extraction, a technique, which enforces per user access control policies on all database update queries. Phantom extraction does not make the same assumptions as previous work, and, more importantly, does not use database views as a core enforcement mechanism. Therefore, it does not fall victim to the view update problem. We have created SafeD as a practical access control solution, which uses our phantom extraction technique. SafeD uses a declarative language for defining security policies, while retaining the simplicity of database views. We evaluated our system on two popular databases for open source web applications, MySQL and Postgres. On MySQL, which has no built-in access control, we observe a 6% increase in transaction latency. On Postgres, SafeD outperforms the built-in access control by an order of magnitude when security policies involved joins.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 21,
        "citationCount": 3,
        "influentialCitationCount": 0,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle",
            "Review"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1445-1462"
        },
        "citationStyles": {
            "bibtex": "@Article{Eykholt2017EnsuringAU,\n author = {Kevin Eykholt and A. Prakash and Barzan Mozafari},\n booktitle = {USENIX Security Symposium},\n pages = {1445-1462},\n title = {Ensuring Authorized Updates in Multi-user Database-Backed Applications},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "1825256",
                "name": "Kevin Eykholt"
            },
            {
                "authorId": "49428189",
                "name": "A. Prakash"
            },
            {
                "authorId": "2198667",
                "name": "Barzan Mozafari"
            }
        ]
    },
    {
        "paperId": "68cf05b4efb856411549ad9802b66ec7d1cd239b",
        "externalIds": {
            "DBLP": "conf/uss/AventKZHL17",
            "MAG": "2952630206",
            "ArXiv": "1705.00831",
            "DOI": "10.29012/jpc.680",
            "CorpusId": 21533209
        },
        "corpusId": 21533209,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/68cf05b4efb856411549ad9802b66ec7d1cd239b",
        "title": "BLENDER: Enabling Local Search with a Hybrid Differential Privacy Model",
        "abstract": "We propose a hybrid model of differential privacy that considers a combination of regular and opt-in users who desire the differential privacy guarantees of the local privacy model and the trusted curator model, respectively. We demonstrate that within this model, it is possible to design a new type of blended algorithm that improves the utility of obtained data, while providing users with their desired privacy guarantees. \nWe apply this algorithm to the task of privately computing the head of the search log and show that the blended approach provides significant improvements in the utility of the data compared to related work. \nSpecifically, on two large search click data sets, comprising 1.75 and 16 GB, respectively, our approach attains NDCG values exceeding 95% across a range of privacy budget values.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 50,
        "citationCount": 98,
        "influentialCitationCount": 4,
        "isOpenAccess": true,
        "openAccessPdf": {
            "url": "https://journalprivacyconfidentiality.org/index.php/jpc/article/download/680/680",
            "status": "GOLD"
        },
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-05-02",
        "journal": {
            "pages": "747-764"
        },
        "citationStyles": {
            "bibtex": "@Article{Avent2017BLENDEREL,\n author = {Brendan Avent and A. Korolova and David Zeber and Torgeir Hovden and B. Livshits},\n booktitle = {USENIX Security Symposium},\n pages = {747-764},\n title = {BLENDER: Enabling Local Search with a Hybrid Differential Privacy Model},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "15519668",
                "name": "Brendan Avent"
            },
            {
                "authorId": "2823893",
                "name": "A. Korolova"
            },
            {
                "authorId": "2787667",
                "name": "David Zeber"
            },
            {
                "authorId": "2864879",
                "name": "Torgeir Hovden"
            },
            {
                "authorId": "145269784",
                "name": "B. Livshits"
            }
        ]
    },
    {
        "paperId": "693ccc78341d12e1ce5c957c0890789c34cb204c",
        "externalIds": {
            "MAG": "2591242488",
            "DBLP": "journals/corr/VilaK17",
            "ArXiv": "1702.06764",
            "CorpusId": 16178565
        },
        "corpusId": 16178565,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/693ccc78341d12e1ce5c957c0890789c34cb204c",
        "title": "Loophole: Timing Attacks on Shared Event Loops in Chrome",
        "abstract": "Event-driven programming (EDP) is the prevalent paradigm for graphical user interfaces, web clients, and it is rapidly gaining importance for server-side and network programming. Central components of EDP are event loops, which act as FIFO queues that are used by processes to store and dispatch messages received from other processes. In this paper we demonstrate that shared event loops are vulnerable to side-channel attacks, where a spy process monitors the loop usage pattern of other processes by enqueueing events and measuring the time it takes for them to be dispatched. Specifically, we exhibit attacks against the two central event loops in Google\u2019s Chrome web browser: that of the I/O thread of the host process, which multiplexes all network events and user actions, and that of the main thread of the renderer processes, which handles rendering and Javascript tasks. For each of these loops, we show how the usage pattern can be monitored with high resolution and low overhead, and how this can be abused for malicious purposes, such as web page identification, user behavior detection, and covert communication.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 44,
        "citationCount": 67,
        "influentialCitationCount": 9,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-02-22",
        "journal": {
            "name": "ArXiv",
            "volume": "abs/1702.06764"
        },
        "citationStyles": {
            "bibtex": "@Article{Vila2017LoopholeTA,\n author = {Pepe Vila and Boris K\u00f6pf},\n booktitle = {USENIX Security Symposium},\n journal = {ArXiv},\n title = {Loophole: Timing Attacks on Shared Event Loops in Chrome},\n volume = {abs/1702.06764},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "32392547",
                "name": "Pepe Vila"
            },
            {
                "authorId": "3147299",
                "name": "Boris K\u00f6pf"
            }
        ]
    },
    {
        "paperId": "6b497e3c8f936630af2b486aed965450d5d7f2b0",
        "externalIds": {
            "MAG": "2752565799",
            "DBLP": "conf/uss/SchwenkNM17",
            "CorpusId": 9641053
        },
        "corpusId": 9641053,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/6b497e3c8f936630af2b486aed965450d5d7f2b0",
        "title": "Same-Origin Policy: Evaluation in Modern Browsers",
        "abstract": "The term Same-Origin Policy (SOP) is used to denote a complex set of rules which governs the interaction of different Web Origins within a web application. A subset of these SOP rules controls the interaction between the host document and an embedded document, and this subset is the target of our research (SOP-DOM). In contrast to other important concepts like Web Origins (RFC 6454) or the Document Object Model (DOM), there is no formal specification of the SOP-DOM. In an empirical study, we ran 544 different test cases on each of the 10 major web browsers. We show that in addition to Web Origins, access rights granted by SOPDOM depend on at least three attributes: the type of the embedding element (EE), the sandbox, and CORS attributes. We also show that due to the lack of a formal specification, different browser behaviors could be detected in approximately 23% of our test cases. The issues discovered in Internet Explorer and Edge are also acknowledged by Microsoft (MSRC Case 32703). We discuss our findings in terms of read, write, and execute rights in different access control models.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 44,
        "citationCount": 49,
        "influentialCitationCount": 4,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "713-727"
        },
        "citationStyles": {
            "bibtex": "@Article{Schwenk2017SameOriginPE,\n author = {J\u00f6rg Schwenk and Marcus Niemietz and Christian Mainka},\n booktitle = {USENIX Security Symposium},\n pages = {713-727},\n title = {Same-Origin Policy: Evaluation in Modern Browsers},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "143816668",
                "name": "J\u00f6rg Schwenk"
            },
            {
                "authorId": "2497246",
                "name": "Marcus Niemietz"
            },
            {
                "authorId": "2276603",
                "name": "Christian Mainka"
            }
        ]
    },
    {
        "paperId": "6c5c190c57fd8264fea5e0b731c0eae5b5fc1676",
        "externalIds": {
            "DBLP": "conf/uss/PearceJLEFWP17",
            "MAG": "2753333424",
            "CorpusId": 34550945
        },
        "corpusId": 34550945,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/6c5c190c57fd8264fea5e0b731c0eae5b5fc1676",
        "title": "Global Measurement of DNS Manipulation",
        "abstract": "Despite the pervasive nature of Internet censorship and the continuous evolution of how and where censorship is applied, measurements of censorship remain comparatively sparse. Understanding the scope, scale, and evolution of Internet censorship requires global measurements, performed at regular intervals. Unfortunately, the state of the art relies on techniques that, by and large, require users to directly participate in gathering these measurements, drastically limiting their coverage and inhibiting regular data collection. To facilitate large-scale measurements that can fill this gap in understanding, we develop Iris, a scalable, accurate, and ethical method to measure global manipulation of DNS resolutions. Iris reveals widespread DNS manipulation of many domain names; our findings both confirm anecdotal or limited results from previous work and reveal new patterns in DNS manipulation.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 35,
        "citationCount": 137,
        "influentialCitationCount": 14,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "307-323"
        },
        "citationStyles": {
            "bibtex": "@Article{Pearce2017GlobalMO,\n author = {P. Pearce and Ben Jones and Frank H. Li and Roya Ensafi and N. Feamster and N. Weaver and V. Paxson},\n booktitle = {USENIX Security Symposium},\n pages = {307-323},\n title = {Global Measurement of DNS Manipulation},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "144422048",
                "name": "P. Pearce"
            },
            {
                "authorId": "2113333685",
                "name": "Ben Jones"
            },
            {
                "authorId": "13154862",
                "name": "Frank H. Li"
            },
            {
                "authorId": "2534561",
                "name": "Roya Ensafi"
            },
            {
                "authorId": "1800154",
                "name": "N. Feamster"
            },
            {
                "authorId": "1685066",
                "name": "N. Weaver"
            },
            {
                "authorId": "1744800",
                "name": "V. Paxson"
            }
        ]
    },
    {
        "paperId": "72e1e8172b1fdd24c17127a9bac0e7577875f613",
        "externalIds": {
            "MAG": "2751042294",
            "DBLP": "conf/uss/JiaZSYHF17",
            "CorpusId": 27357375
        },
        "corpusId": 27357375,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/72e1e8172b1fdd24c17127a9bac0e7577875f613",
        "title": "Towards Efficient Heap Overflow Discovery",
        "abstract": "Heap overflow is a prevalent memory corruption vulnerability, playing an important role in recent attacks. Finding such vulnerabilities in applications is thus critical for security. Many state-of-art solutions focus on runtime detection, requiring abundant inputs to explore program paths in order to reach a high code coverage and luckily trigger security violations. It is likely that the inputs being tested could exercise vulnerable program paths, but fail to trigger (and thus miss) vulnerabilities in these paths. Moreover, these solutions may also miss heap vulnerabilities due to incomplete vulnerability models. In this paper, we propose a new solution HOTracer to discover potential heap vulnerabilities. We model heap overflows as spatial inconsistencies between heap allocation and heap access operations, and perform an indepth offline analysis on representative program execution traces to identify heap overflows. Combining with several optimizations, it could efficiently find heap overflows that are hard to trigger in binary programs. We implemented a prototype of HOTracer, evaluated it on 17 real world applications, and found 47 previously unknown heap vulnerabilities, showing its effectiveness.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 49,
        "citationCount": 30,
        "influentialCitationCount": 0,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "989-1006"
        },
        "citationStyles": {
            "bibtex": "@Article{Jia2017TowardsEH,\n author = {Xiangkun Jia and Chao Zhang and Purui Su and Yi Yang and Huafeng Huang and D. Feng},\n booktitle = {USENIX Security Symposium},\n pages = {989-1006},\n title = {Towards Efficient Heap Overflow Discovery},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "47534887",
                "name": "Xiangkun Jia"
            },
            {
                "authorId": "145657499",
                "name": "Chao Zhang"
            },
            {
                "authorId": "3113509",
                "name": "Purui Su"
            },
            {
                "authorId": "2143685663",
                "name": "Yi Yang"
            },
            {
                "authorId": "2479781",
                "name": "Huafeng Huang"
            },
            {
                "authorId": "143677929",
                "name": "D. Feng"
            }
        ]
    },
    {
        "paperId": "73753f69c1dc16fe19c8e07661fc55898427ca6a",
        "externalIds": {
            "DBLP": "conf/uss/ChenZWXBW17",
            "MAG": "2752365765",
            "CorpusId": 2026473
        },
        "corpusId": 2026473,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/73753f69c1dc16fe19c8e07661fc55898427ca6a",
        "title": "Adaptive Android Kernel Live Patching",
        "abstract": "Android kernel vulnerabilities pose a serious threat to user security and privacy. They allow attackers to take full control over victim devices, install malicious and unwanted apps, and maintain persistent control. Unfortunately, most Android devices are never timely updated to protect their users from kernel exploits. Recent Android malware even has built-in kernel exploits to take advantage of this large window of vulnerability. An effective solution to this problem must be adaptable to lots of (out-of-date) devices, quickly deployable, and secure from misuse. However, the fragmented Android ecosystem makes this a complex and challenging task. To address that, we systematically studied 1,139 Android kernels and all the recent critical Android kernel vulnerabilities. We accordingly propose KARMA, an adaptive live patching system for Android kernels. KARMA features a multi-level adaptive patching model to protect kernel vulnerabilities from exploits. Specifically, patches in KARMA can be placed at multiple levels in the kernel to filter malicious inputs, and they can be automatically adapted to thousands of Android devices. In addition, KARMA\u2019s patches are written in a high-level memory-safe language, making them secure and easy to vet, and their run-time behaviors are strictly confined to prevent them from being misused. Our evaluation demonstrates that KARMA can protect most critical kernel vulnerabilities on many Android devices (520 devices in our evaluation) with only minor performance overhead (< 1%).",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 19,
        "citationCount": 49,
        "influentialCitationCount": 6,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1253-1270"
        },
        "citationStyles": {
            "bibtex": "@Article{Chen2017AdaptiveAK,\n author = {Yueh-Ting Chen and Yulong Zhang and Zhi Wang and Liangzhao Xia and Chenfu Bao and Tao Wei},\n booktitle = {USENIX Security Symposium},\n pages = {1253-1270},\n title = {Adaptive Android Kernel Live Patching},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "101612289",
                "name": "Yueh-Ting Chen"
            },
            {
                "authorId": "145635335",
                "name": "Yulong Zhang"
            },
            {
                "authorId": "144145752",
                "name": "Zhi Wang"
            },
            {
                "authorId": "23682575",
                "name": "Liangzhao Xia"
            },
            {
                "authorId": "23689329",
                "name": "Chenfu Bao"
            },
            {
                "authorId": "2068205274",
                "name": "Tao Wei"
            }
        ]
    },
    {
        "paperId": "79a6ee9140b95a35ce1e6a9a143a988e51ce1565",
        "externalIds": {
            "MAG": "2752859356",
            "DBLP": "conf/uss/BlazytkoCAH17",
            "CorpusId": 28815331
        },
        "corpusId": 28815331,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/79a6ee9140b95a35ce1e6a9a143a988e51ce1565",
        "title": "Syntia: Synthesizing the Semantics of Obfuscated Code",
        "abstract": "Current state-of-the-art deobfuscation approaches operate on instruction traces and use a mixed approach of symbolic execution and taint analysis; two techniques that require precise analysis of the underlying code. However, recent research has shown that both techniques can easily be thwarted by specific transformations. As program synthesis can synthesize code of arbitrary code complexity, it is only limited by the complexity of the underlying code\u2019s semantic. In our work, we propose a generic approach for automated code deobfuscation using program synthesis guided by Monte Carlo Tree Search (MCTS). Specifically, our prototype implementation, Syntia, simplifies execution traces by dividing them into distinct trace windows whose semantics are then \u201clearned\u201d by the synthesis. To demonstrate the practical feasibility of our approach, we automatically learn the semantics of 489 out of 500 random expressions obfuscated via Mixed Boolean-Arithmetic. Furthermore, we synthesize the semantics of arithmetic instruction handlers in two state-of-the art commercial virtualization-based obfuscators (VMProtect and Themida) with a success rate of more than 94%. Finally, to substantiate our claim that the approach is generic and applicable to different use cases, we show that Syntia can also automatically learn the semantics of ROP gadgets.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 51,
        "citationCount": 75,
        "influentialCitationCount": 12,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "643-659"
        },
        "citationStyles": {
            "bibtex": "@Article{Blazytko2017SyntiaST,\n author = {Tim Blazytko and Moritz Contag and Cornelius Aschermann and Thorsten Holz},\n booktitle = {USENIX Security Symposium},\n pages = {643-659},\n title = {Syntia: Synthesizing the Semantics of Obfuscated Code},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "23657626",
                "name": "Tim Blazytko"
            },
            {
                "authorId": "3222192",
                "name": "Moritz Contag"
            },
            {
                "authorId": "2369928",
                "name": "Cornelius Aschermann"
            },
            {
                "authorId": "144227650",
                "name": "Thorsten Holz"
            }
        ]
    },
    {
        "paperId": "7f3c3b4556795161de8e704c886ab8eab5c6ff74",
        "externalIds": {
            "DBLP": "conf/uss/SchusterST17",
            "MAG": "2750601856",
            "CorpusId": 38206432
        },
        "corpusId": 38206432,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/7f3c3b4556795161de8e704c886ab8eab5c6ff74",
        "title": "Beauty and the Burst: Remote Identification of Encrypted Video Streams",
        "abstract": "The MPEG-DASH streaming video standard contains an information leak: even if the stream is encrypted, the segmentation prescribed by the standard causes content-dependent packet bursts. We show that many video streams are uniquely characterized by their burst patterns, and classifiers based on convolutional neural networks can accurately identify these patterns given very coarse network measurements. We demonstrate that this attack can be performed even by a Web attacker who does not directly observe the stream, e.g., a JavaScript ad confined in a Web browser on a nearby machine.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 55,
        "citationCount": 169,
        "influentialCitationCount": 30,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "1357-1374"
        },
        "citationStyles": {
            "bibtex": "@Article{Schuster2017BeautyAT,\n author = {R. Schuster and Vitaly Shmatikov and Eran Tromer},\n booktitle = {USENIX Security Symposium},\n pages = {1357-1374},\n title = {Beauty and the Burst: Remote Identification of Encrypted Video Streams},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "39347554",
                "name": "R. Schuster"
            },
            {
                "authorId": "1723945",
                "name": "Vitaly Shmatikov"
            },
            {
                "authorId": "2337345",
                "name": "Eran Tromer"
            }
        ]
    },
    {
        "paperId": "8135961453ec517a5576336c8e4e9ccca1a5d889",
        "externalIds": {
            "MAG": "2952774345",
            "DBLP": "conf/uss/StevensS17",
            "CorpusId": 452502
        },
        "corpusId": 452502,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/8135961453ec517a5576336c8e4e9ccca1a5d889",
        "title": "Speeding up detection of SHA-1 collision attacks using unavoidable attack conditions",
        "abstract": "textabstractCounter-cryptanalysis, the concept of using cryptanalytic techniques to detect cryptanalytic attacks, was introduced by Stevens at CRYPTO 2013 [22] with a hash collision detection algorithm. That is, an algorithm that detects whether a given single message is part of a colliding message pair constructed using a cryptanalytic collision attack on MD5 or SHA-1. The concept's utility was proven when it was used to expose the then-unknown cryptanalytic collision attack exploited by the Flame espionage supermalware. So far there is a significant cost: to detect collision attacks against SHA-1 (respectively MD5) costs the equivalent of hashing the message 15 (respectively 224) times. In this paper we present a significant performance improvement for collision detection based on the new concept of unavoidable conditions. Unavoidable conditions are conditions that are necessary for all feasible attacks in a certain attack class. As such they can be used to quickly dismiss particular attack classes that may have been used in the construction of the message. To determine an unavoidable condition one must rule out any feasible variant attack where this condition might not be necessary, otherwise adversaries aware of counter-cryptanalysis could easily bypass this improved collision detection with a carefully chosen variant attack. We provide a formal model for unavoidable conditions for collision attacks on MD5-like compression functions. Furthermore, based on a conjecture solidly supported by the current state of the art, we show how we can determine such unavoidable conditions for SHA-1. We have implemented the improved SHA-1 collision detection using such unavoidable conditions and which is about 16 times faster than without our unavoidable condition improvements. We have measured that overall our implemented SHA-1 with collision detection is only a factor 1.96 slower, on average, than SHA-1. Our work is very timely given the recently announced SHA-1 collision proving that SHA-1 is now practically broken",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 25,
        "citationCount": 14,
        "influentialCitationCount": 0,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "name": "IACR Cryptol. ePrint Arch.",
            "pages": "173",
            "volume": "2017"
        },
        "citationStyles": {
            "bibtex": "@Article{Stevens2017SpeedingUD,\n author = {M.M.J. Stevens and D. Shumow},\n booktitle = {USENIX Security Symposium},\n journal = {IACR Cryptol. ePrint Arch.},\n pages = {173},\n title = {Speeding up detection of SHA-1 collision attacks using unavoidable attack conditions},\n volume = {2017},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "95980381",
                "name": "M.M.J. Stevens"
            },
            {
                "authorId": "3277661",
                "name": "D. Shumow"
            }
        ]
    },
    {
        "paperId": "856292c58844daeb64c1ae28814c6719d2625d67",
        "externalIds": {
            "DBLP": "conf/uss/NingZ17",
            "MAG": "2752858240",
            "CorpusId": 27881461
        },
        "corpusId": 27881461,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/856292c58844daeb64c1ae28814c6719d2625d67",
        "title": "Ninja: Towards Transparent Tracing and Debugging on ARM",
        "abstract": "Existing malware analysis platforms leave detectable \ufb01n-gerprints like uncommon string properties in QEMU, signatures in Android Java virtual machine, and artifacts in Linux kernel pro\ufb01les. Since these \ufb01ngerprints provide the malware a chance to split its behavior depending on whether the analysis system is present or not, existing analysis systems are not suf\ufb01cient to analyze the sophisticated malware. In this paper, we pro-pose N INJA , a transparent malware analysis framework on ARM platform with low artifacts. N INJA leverages a hardware-assisted isolated execution environment Trust-Zone to transparently trace and debug a target application with the help of Performance Monitor Unit and Embedded Trace Macrocell. N INJA does not modify system software and is OS-agnostic on ARM platform. We implement a prototype of N INJA (i.e., tracing and debugging subsystems), and the experiment results show that N INJA is ef\ufb01cient and transparent for malware analysis.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 52,
        "citationCount": 51,
        "influentialCitationCount": 2,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "33-49"
        },
        "citationStyles": {
            "bibtex": "@Article{Ning2017NinjaTT,\n author = {Zhenyu Ning and Fengwei Zhang},\n booktitle = {USENIX Security Symposium},\n pages = {33-49},\n title = {Ninja: Towards Transparent Tracing and Debugging on ARM},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2310173",
                "name": "Zhenyu Ning"
            },
            {
                "authorId": "50213024",
                "name": "Fengwei Zhang"
            }
        ]
    },
    {
        "paperId": "86a121b4eeca562de19ebc13dbf50f2a8a1b4d2f",
        "externalIds": {
            "MAG": "2751069300",
            "DBLP": "conf/uss/MarkwoodSLL17",
            "CorpusId": 19627640
        },
        "corpusId": 19627640,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/86a121b4eeca562de19ebc13dbf50f2a8a1b4d2f",
        "title": "PDF Mirage: Content Masking Attack Against Information-Based Online Services",
        "abstract": "We present a new class of content masking attacks against the Adobe PDF standard, causing documents to appear to humans dissimilar to the underlying content extracted by information-based services. We show three attack variants with notable impact on real-world systems. Our \ufb01rst attack allows academic paper writers and re-viewers to collude via subverting the automatic reviewer assignment systems in current use by academic conferences including INFOCOM, which we reproduced. Our second attack renders ineffective plagiarism detection software, particularly Turnitin, targeting speci\ufb01c small plagiarism similarity scores to appear natural and evade detection. In our \ufb01nal attack, we place masked content into the indexes for Bing, Yahoo!, and DuckDuckGo which renders as information entirely different from the keywords used to locate it, enabling spam, profane, or possibly illegal content to go unnoticed by these search engines but still returned in unrelated search results. Lastly, as these systems eschew optical character recognition (OCR) for its overhead, we offer a comprehensive and lightweight alternative mitigation method.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 37,
        "citationCount": 25,
        "influentialCitationCount": 1,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle",
            "Review"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "833-847"
        },
        "citationStyles": {
            "bibtex": "@Article{Markwood2017PDFMC,\n author = {Ian D. Markwood and Dakun Shen and Yao Liu and Zhuo Lu},\n booktitle = {USENIX Security Symposium},\n pages = {833-847},\n title = {PDF Mirage: Content Masking Attack Against Information-Based Online Services},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "3409686",
                "name": "Ian D. Markwood"
            },
            {
                "authorId": "9542603",
                "name": "Dakun Shen"
            },
            {
                "authorId": "2108923486",
                "name": "Yao Liu"
            },
            {
                "authorId": "2140095415",
                "name": "Zhuo Lu"
            }
        ]
    },
    {
        "paperId": "86a4a83a5d404c6116e76573e4fe3ec08054fc63",
        "externalIds": {
            "MAG": "2752610700",
            "DBLP": "conf/uss/ChungR0CLMMW17",
            "CorpusId": 2883851
        },
        "corpusId": 2883851,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/86a4a83a5d404c6116e76573e4fe3ec08054fc63",
        "title": "A Longitudinal, End-to-End View of the DNSSEC Ecosystem",
        "abstract": "The Domain Name System's Security Extensions (DNSSEC) allow clients and resolvers to verify that DNS responses have not been forged or modified inflight. DNSSEC uses a public key infrastructure (PKI) to achieve this integrity, without which users can be subject to a wide range of attacks. However, DNSSEC can operate only if each of the principals in its PKI properly performs its management tasks: authoritative name servers must generate and publish their keys and signatures correctly, child zones that support DNSSEC must be correctly signed with their parent's keys, and resolvers must actually validate the chain of signatures. \n \nThis paper performs the first large-scale, longitudinal measurement study into how well DNSSEC's PKI is managed. We use data from all DNSSEC-enabled subdomains under the .com, .org, and .net TLDs over a period of 21 months to analyze DNSSEC deployment and management by domains; we supplement this with active measurements of more than 59K DNS resolvers worldwide to evaluate resolver-side validation. \n \nOur investigation reveals pervasive mismanagement of the DNSSEC infrastructure. For example, we found that 31% of domains that support DNSSEC fail to publish all relevant records required for validation; 39% of the domains use insufficiently strong key-signing keys; and although 82% of resolvers in our study request DNSSEC records, only 12% of them actually attempt to validate them. These results highlight systemic problems, which motivate improved automation and auditing of DNSSEC management.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 51,
        "citationCount": 106,
        "influentialCitationCount": 13,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "1307-1322"
        },
        "citationStyles": {
            "bibtex": "@Article{Chung2017ALE,\n author = {Taejoong Chung and R. V. Rijswijk-Deij and B. Chandrasekaran and D. Choffnes and Dave Levin and B. Maggs and A. Mislove and Christo Wilson},\n booktitle = {USENIX Security Symposium},\n pages = {1307-1322},\n title = {A Longitudinal, End-to-End View of the DNSSEC Ecosystem},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2222498",
                "name": "Taejoong Chung"
            },
            {
                "authorId": "1401656947",
                "name": "R. V. Rijswijk-Deij"
            },
            {
                "authorId": "2102739",
                "name": "B. Chandrasekaran"
            },
            {
                "authorId": "144793542",
                "name": "D. Choffnes"
            },
            {
                "authorId": "50213943",
                "name": "Dave Levin"
            },
            {
                "authorId": "1711252",
                "name": "B. Maggs"
            },
            {
                "authorId": "1729928",
                "name": "A. Mislove"
            },
            {
                "authorId": "35497150",
                "name": "Christo Wilson"
            }
        ]
    },
    {
        "paperId": "8a3fa56ae7563fd04c935f705fe0410f2ca4ab04",
        "externalIds": {
            "DBLP": "conf/uss/BondHKLLPRST17",
            "MAG": "2751455878",
            "CorpusId": 20976460
        },
        "corpusId": 20976460,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/8a3fa56ae7563fd04c935f705fe0410f2ca4ab04",
        "title": "Vale: Verifying High-Performance Cryptographic Assembly Code",
        "abstract": "High-performance cryptographic code often relies on complex hand-tuned assembly language that is customized for individual hardware platforms. Such code is difficult to understand or analyze. We introduce a new programming language and tool called Vale that supports flexible, automated verification of high-performance assembly code. The Vale tool transforms annotated assembly language into an abstract syntax tree (AST), while also generating proofs about the AST that are verified via an SMT solver. Since the AST is a first-class proof term, it can be further analyzed and manipulated by proven-correct code before being extracted into standard assembly. For example, we have developed a novel, proven-correct taint-analysis engine that verifies the code\u2019s freedom from digital side channels. Using these tools, we verify the correctness, safety, and security of implementations of SHA-256 on x86 and ARM, Poly1305 on x64, and hardware-accelerated AES-CBC on x86. Several implementations meet or beat the performance of unverified, state-of-the-art cryptographic libraries.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 59,
        "citationCount": 131,
        "influentialCitationCount": 14,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-27",
        "journal": {
            "pages": "917-934"
        },
        "citationStyles": {
            "bibtex": "@Article{Bond2017ValeVH,\n author = {Barry Bond and C. Hawblitzel and Manos Kapritsos and K. Leino and Jacob R. Lorch and Bryan Parno and A. Rane and Srinath T. V. Setty and Laure Thompson},\n booktitle = {USENIX Security Symposium},\n pages = {917-934},\n title = {Vale: Verifying High-Performance Cryptographic Assembly Code},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "50761627",
                "name": "Barry Bond"
            },
            {
                "authorId": "3095589",
                "name": "C. Hawblitzel"
            },
            {
                "authorId": "3023141",
                "name": "Manos Kapritsos"
            },
            {
                "authorId": "145189240",
                "name": "K. Leino"
            },
            {
                "authorId": "1855395",
                "name": "Jacob R. Lorch"
            },
            {
                "authorId": "2291514",
                "name": "Bryan Parno"
            },
            {
                "authorId": "48770327",
                "name": "A. Rane"
            },
            {
                "authorId": "1965352",
                "name": "Srinath T. V. Setty"
            },
            {
                "authorId": "38561456",
                "name": "Laure Thompson"
            }
        ]
    },
    {
        "paperId": "8ded49b2c999db2ac00fe0d4f1600060a2b629c6",
        "externalIds": {
            "MAG": "2753192078",
            "DBLP": "conf/uss/LiHL17",
            "CorpusId": 7305691
        },
        "corpusId": 7305691,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/8ded49b2c999db2ac00fe0d4f1600060a2b629c6",
        "title": "DeTor: Provably Avoiding Geographic Regions in Tor",
        "abstract": "Large, routing-capable adversaries such as nationstates have the ability to censor and launch powerful deanonymization attacks against Tor circuits that traverse their borders. Tor allows users to specify a set of countries to exclude from circuit selection, but this provides merely the illusion of control, as it does not preclude those countries from being on the path between nodes in a circuit. For instance, we find that circuits excluding US Tor nodes definitively avoid the US 12% of the time. This paper presents DeTor, a set of techniques for proving when a Tor circuit has avoided user-specified geographic regions. DeTor extends recent work on using speed-of-light constraints to prove that a round-trip of communication physically could not have traversed certain geographic regions. As such, DeTor does not require modifications to the Tor protocol, nor does it require a map of the Internet\u2019s topology. We show how DeTor can be used to avoid censors (by never transiting the censor once) and to avoid timing-based deanonymization attacks (by never transiting a geographic region twice). We analyze DeTor\u2019s success at finding avoidance circuits through simulation using real latencies from Tor.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 36,
        "citationCount": 16,
        "influentialCitationCount": 1,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "343-359"
        },
        "citationStyles": {
            "bibtex": "@Article{Li2017DeTorPA,\n author = {Zhihao Li and Stephen Herwig and Dave Levin},\n booktitle = {USENIX Security Symposium},\n pages = {343-359},\n title = {DeTor: Provably Avoiding Geographic Regions in Tor},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2116263796",
                "name": "Zhihao Li"
            },
            {
                "authorId": "37533706",
                "name": "Stephen Herwig"
            },
            {
                "authorId": "50213943",
                "name": "Dave Levin"
            }
        ]
    },
    {
        "paperId": "9173dfbc04d78959cae41add10d3cf25e06cabbc",
        "externalIds": {
            "MAG": "2753515421",
            "DBLP": "conf/uss/ZimmeckLKBJ17",
            "CorpusId": 23378463
        },
        "corpusId": 23378463,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/9173dfbc04d78959cae41add10d3cf25e06cabbc",
        "title": "A Privacy Analysis of Cross-device Tracking",
        "abstract": "Online tracking is evolving from browserand devicetracking to people-tracking. As users are increasingly accessing the Internet from multiple devices this new paradigm of tracking\u2014in most cases for purposes of advertising\u2014is aimed at crossing the boundary between a user\u2019s individual devices and browsers. It establishes a person-centric view of a user across devices and seeks to combine the input from various data sources into an individual and comprehensive user profile. By its very nature such cross-device tracking can principally reveal a complete picture of a person and, thus, become more privacy-invasive than the siloed tracking via HTTP cookies or other traditional and more limited tracking mechanisms. In this study we are exploring cross-device tracking techniques as well as their privacy implications. Particularly, we demonstrate a method to detect the occurrence of cross-device tracking, and, based on a cross-device tracking dataset that we collected from 126 Internet users, we explore the prevalence of cross-device trackers on mobile and desktop devices. We show that the similarity of IP addresses and Internet history for a user\u2019s devices gives rise to a matching rate of F-1 = 0.91 for connecting a mobile to a desktop device in our dataset. This finding is especially noteworthy in light of the increase in learning power that cross-device companies may achieve by leveraging user data from more than one device. Given these privacy implications of cross-device tracking we also examine compliance with applicable self-regulation for 40 cross-device companies and find that some are not transparent about their practices.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 62,
        "citationCount": 63,
        "influentialCitationCount": 4,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Law",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1391-1408"
        },
        "citationStyles": {
            "bibtex": "@Article{Zimmeck2017APA,\n author = {Sebastian Zimmeck and Jie S. Li and Hyungtae Kim and S. Bellovin and Tony Jebara},\n booktitle = {USENIX Security Symposium},\n pages = {1391-1408},\n title = {A Privacy Analysis of Cross-device Tracking},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2992779",
                "name": "Sebastian Zimmeck"
            },
            {
                "authorId": "2149869417",
                "name": "Jie S. Li"
            },
            {
                "authorId": "2144351008",
                "name": "Hyungtae Kim"
            },
            {
                "authorId": "1751667",
                "name": "S. Bellovin"
            },
            {
                "authorId": "1768120",
                "name": "Tony Jebara"
            }
        ]
    },
    {
        "paperId": "9943f6eed968b89059c392aa6f9b7c7feea7b382",
        "externalIds": {
            "MAG": "2751130135",
            "DBLP": "journals/iacr/LuuVTS17",
            "CorpusId": 2510137
        },
        "corpusId": 2510137,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/9943f6eed968b89059c392aa6f9b7c7feea7b382",
        "title": "SmartPool: Practical Decentralized Pooled Mining",
        "abstract": "Cryptocurrencies such as Bitcoin and Ethereum are operated by a handful of mining pools. Nearly 95% of Bitcoin's and 80% of Ethereum's mining power resides with less than ten and six mining pools respectively. Although miners benefit from low payout variance in pooled mining, centralized mining pools require members to trust that pool operators will remunerate them fairly. Furthermore, centralized pools pose the risk of transaction censorship from pool operators, and open up possibilities for collusion between pools for perpetrating severe attacks. \n \nIn this work, we propose SMARTPOOL, a novel protocol design for a decentralized mining pool. Our protocol shows how one can leverage smart contracts, autonomous blockchain programs, to decentralize cryptocurrency mining. SMARTPOOL gives transaction selection control back to miners while yielding low-variance payouts. SMARTPOOL incurs mining fees lower than centralized mining pools and is designed to scale to a large number of miners. We implemented and deployed a robust SMARTPOOL implementation on the Ethereum and Ethereum Classic networks. To date, our deployed pools have handled a peak hashrate of 30 GHs from Ethereum miners, resulting in 105 blocks, costing miners a mere 0:6% of block rewards in transaction fees.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 20,
        "citationCount": 136,
        "influentialCitationCount": 8,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "1409-1426"
        },
        "citationStyles": {
            "bibtex": "@Article{Luu2017SmartPoolPD,\n author = {Loi Luu and Yaron Velner and Jason Teutsch and P. Saxena},\n booktitle = {USENIX Security Symposium},\n pages = {1409-1426},\n title = {SmartPool: Practical Decentralized Pooled Mining},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "34317521",
                "name": "Loi Luu"
            },
            {
                "authorId": "1976907",
                "name": "Yaron Velner"
            },
            {
                "authorId": "1791724",
                "name": "Jason Teutsch"
            },
            {
                "authorId": "1750032",
                "name": "P. Saxena"
            }
        ]
    },
    {
        "paperId": "995742e26a8b8a5e77e236bb1bc885be45de2b5a",
        "externalIds": {
            "MAG": "2614378039",
            "DBLP": "conf/uss/AlexopoulosKT017",
            "CorpusId": 215827058
        },
        "corpusId": 215827058,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/995742e26a8b8a5e77e236bb1bc885be45de2b5a",
        "title": "MCMix: Anonymous Messaging via Secure Multiparty Computation",
        "abstract": "We present MCMix, an anonymous messaging system that completely hides communication metadata and can scale in the order of hundreds of thousands of users. Our approach is to isolate two suitable functionalities, called dialing and conversation, that when used in succession, realize anonymous messaging. With this as a starting point, we apply secure multiparty computation (\u201cMC\u201d or MPC) and proceed to realize them. We then present an implementation using Sharemind, a prevalent MPC system. Our implementation is competitive in terms of latency with previous messaging systems that only offer weaker privacy guarantees. Our solution can be instantiated in a variety of different ways with different MPC implementations, overall illustrating how MPC is a viable and competitive alternative to mix-nets and DC-nets for anonymous communication.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 53,
        "citationCount": 66,
        "influentialCitationCount": 13,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-18",
        "journal": {
            "pages": "1217-1234"
        },
        "citationStyles": {
            "bibtex": "@Article{Alexopoulos2017MCMixAM,\n author = {Nikolaos Alexopoulos and A. Kiayias and Riivo Talviste and T. Zacharias},\n booktitle = {USENIX Security Symposium},\n pages = {1217-1234},\n title = {MCMix: Anonymous Messaging via Secure Multiparty Computation},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "1869417",
                "name": "Nikolaos Alexopoulos"
            },
            {
                "authorId": "1695604",
                "name": "A. Kiayias"
            },
            {
                "authorId": "2816614",
                "name": "Riivo Talviste"
            },
            {
                "authorId": "144183234",
                "name": "T. Zacharias"
            }
        ]
    },
    {
        "paperId": "9964797f0d3912912cace8a5ffe95c0db4efbd0b",
        "externalIds": {
            "MAG": "2965657710",
            "DBLP": "conf/uss/Tong0HXZV19",
            "ArXiv": "1708.08327",
            "CorpusId": 152282456
        },
        "corpusId": 152282456,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/9964797f0d3912912cace8a5ffe95c0db4efbd0b",
        "title": "Improving Robustness of ML Classifiers against Realizable Evasion Attacks Using Conserved Features",
        "abstract": "Machine learning (ML) techniques are increasingly common in security applications, such as malware and intrusion detection. However, ML models are often susceptible to evasion attacks, in which an adversary makes changes to the input (such as malware) in order to avoid being detected. A conventional approach to evaluate ML robustness to such attacks, as well as to design robust ML, is by considering simplified feature-space models of attacks, where the attacker changes ML features directly to effect evasion, while minimizing or constraining the magnitude of this change. We investigate the effectiveness of this approach to designing robust ML in the face of attacks that can be realized in actual malware (realizable attacks). We demonstrate that in the context of structure-based PDF malware detection, such techniques appear to have limited effectiveness, but they are effective with content-based detectors. In either case, we show that augmenting the feature space models with conserved features (those that cannot be unilaterally modified without compromising malicious functionality) significantly improves performance. Finally, we show that feature space models enable generalized robustness when faced with a variety of realizable attacks, as compared to classifiers which are tuned to be robust to a specific realizable attack.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 44,
        "citationCount": 80,
        "influentialCitationCount": 3,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-28",
        "journal": {
            "pages": "285-302"
        },
        "citationStyles": {
            "bibtex": "@Article{Tong2017ImprovingRO,\n author = {Liang Tong and Bo Li and Chen Hajaj and Chaowei Xiao and Ning Zhang and Yevgeniy Vorobeychik},\n booktitle = {USENIX Security Symposium},\n pages = {285-302},\n title = {Improving Robustness of ML Classifiers against Realizable Evasion Attacks Using Conserved Features},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2069440591",
                "name": "Liang Tong"
            },
            {
                "authorId": "1490934734",
                "name": "Bo Li"
            },
            {
                "authorId": "3313085",
                "name": "Chen Hajaj"
            },
            {
                "authorId": "2723309",
                "name": "Chaowei Xiao"
            },
            {
                "authorId": "2152329711",
                "name": "Ning Zhang"
            },
            {
                "authorId": "1699600",
                "name": "Yevgeniy Vorobeychik"
            }
        ]
    },
    {
        "paperId": "a69d94eaca7436a1bbc3a84ce09b0793e0b24e8b",
        "externalIds": {
            "MAG": "2753884237",
            "DBLP": "conf/uss/StockJS017",
            "CorpusId": 12914308
        },
        "corpusId": 12914308,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/a69d94eaca7436a1bbc3a84ce09b0793e0b24e8b",
        "title": "How the Web Tangled Itself: Uncovering the History of Client-Side Web (In)Security",
        "abstract": "While in its early days, the Web was mostly static, it has organically grown into a full-fledged technology stack. This evolution has not followed a security blueprint, resulting in many classes of vulnerabilities specific to the Web. Even though the server-side code of the past has long since vanished, the Internet Archive gives us a unique view on the historical development of the Web\u2019s client side and its (in)security. Uncovering the insights which fueled this development bears the potential to not only gain a historical perspective on client-side Web security, but also to outline better practices going forward. To that end, we examined the code and header information of the most important Web sites for each year between 1997 and 2016, amounting to 659,710 different analyzed Web documents. From the archived data, we first identify key trends in the technology deployed on the client, such as the increasing complexity of clientside Web code and the constant rise of multi-origin application scenarios. Based on these findings, we then assess the advent of corresponding vulnerability classes, investigate their prevalence over time, and analyze the security mechanisms developed and deployed to mitigate them. Correlating these results allows us to draw a set of overarching conclusions: Along with the dawn of JavaScript-driven applications in the early years of the millennium, the likelihood of client-side injection vulnerabilities has risen. Furthermore, there is a noticeable gap in adoption speed between easy-to-deploy security headers and more involved measures such as CSP. But there is also no evidence that the usage of the easy-todeploy techniques reflects on other security areas. On the contrary, our data shows for instance that sites that use HTTPonly cookies are actually more likely to have a Cross-Site Scripting problem. Finally, we observe that the rising security awareness and introduction of dedicated security technologies had no immediate impact on the overall security of the client-side Web. 1 A Historic Perspective on Web Security The Web platform is arguably one of the biggest technological successes in the area of popular computing. What modestly started in 1991 as a mere transportation mechanism for hypertext documents is now the driving force behind the majority of today\u2019s dominating technologies. However, from a security point of view, the Web\u2019s track record is less than flattering, to a point in which a common joke under security professionals was to claim that the term Web security is actually an oxymoron. Over the years, Web technologies have given birth to a multitude of novel, Web-specific vulnerability classes, such as Cross-Site Scripting (XSS) or Clickjacking, which simply did not exist before, many of them manifesting themselves on the Web\u2019s client side. These ongoing developments are due to the fact that the Web\u2019s client side is under constant change and expansion. While early Web pages were mostly styled hypertext documents with limited interaction, modern Web sites push thousands of lines of code to the browser and implement non-trivial application logic. This ongoing development shows no signs of stopping or even slowing down. The trend is also underlined by the increase in client-side APIs in the browser: while in 2006 Firefox featured only 12 APIs, it now has support for 93 different APIs ranging from accurate timing information to an API to interact with Virtual Reality devices1. This unrestricted growth led to what Zalewski [41] dubbed The Tangled Web. Now, more than 25 years into the life of the Web, it is worthwhile to take a step back and revisit the development of Web security over the years. This allows us to gain a historical perspective on the security aspects of an emerging and constantly evolving computing platform and also foreshadows future trends. Unfortunately, the majority of Web code is commercial and, thus, not open to the public. Historic server1A list of all available features in current browsers is available at http://caniuse.com/ side code that has been replaced or taken offline cannot be studied anymore. However, the Web\u2019s client side, i.e., all Web code that is pushed in the form of HTML or JavaScript to the browser is public. And thankfully, the Internet Archive has recognized the historical significance of the Web\u2019s public face early on and attempts to preserve it since 1996. Thus, while the server-side portion of old Web applications is probably gone forever, the client-side counterpart is readily available via the Internet Archive\u2019s Wayback Machine. This enables a novel approach to historical security studies: A multitude of Web security problems, such as Client-Side XSS or Clickjacking, manifest themselves on the client side exclusively. Hence, evidence of these vulnerabilities is contained in the Internet Archive and thus available for examination. Many of the current state-of-the-art security testing methods can be adapted to work on the archived version of the sites, enabling an automated and scalable security evaluation of the historic code. Thus, we find that the archived client-side Web code offers the unique opportunity to study the security evolution of one of the most important technology platforms during (almost) its entire existence, allowing us to conduct historical analyses of a plethora of properties of the Web. This way, we are not only able to investigate past Web trends, but also draw conclusions on current and future Web development trends and (in)security. In the following, we give a brief overview of our conducted study and outline our research approach. Technological Evolution of the Web\u2019s Client Side We first examine the evolution of client-side technologies, i.e., which technologies prevailed in the history of the Web. We then systematically analyze the archived code on a syntactical level. The focus of this analysis step is on observable indicators that provide evidence on how diversity, complexity, and volume of this code has developed over the years, as all these three factors have a direct impact on the likelihood of vulnerabilities. Section 3 reports on our findings in this area. The overall goal of this activity is to enable the correlation of trends in the security area with ongoing technological shifts. Resulting Security Problems With the ever-growing complexity of the deployed Web code and the constant addition of new powerful capabilities in the Web browser in the form of novel JavaScript APIs the overall amount of potential vulnerability classes has risen as well. As motivated above, several of the vulnerabilities which exclusively affect the client side have been properly archived and, thus, can be reliably detected in the historical data. We leverage this capability to assess a lower bound of vulnerable Web sites over the years. Section 4 documents our security testing methodology and highlights our key findings in the realm of preserved security vulnerabilites. Introduction of Dedicated Security Mechanisms To meet the new challenges of the steadily increasing security surface on the Web\u2019s client side, several dedicated mechanisms, such as security-centric HTTP headers or JavaScript APIs, have been introduced. We examine if and how these mechanisms have been adopted during their lifespan. This provides valuable evidence with respect how the awareness of security issues has changed over time and if this awareness manifests itself in overall improvements of the site\u2019s security characteristics. We discuss the selected mechanisms and the results of our analysis in Section 5. Overarching Implications of our Analysis Based on the findings of our 20-year-long study, we analyze the implications of our collected data in Section 6. By looking at historical trends and correlating the individual data items, we can draw a number of conclusions regarding the interdependencies of client-side technology and client-side security. Moreover, we investigate correlations between actual vulnerabilities discovered in historical Web applications and the existence of security awareness indicators at the time, and finish with a discussion of important next steps for Client-Side Web security.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 38,
        "citationCount": 52,
        "influentialCitationCount": 5,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "History",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle",
            "Review"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "971-987"
        },
        "citationStyles": {
            "bibtex": "@Article{Stock2017HowTW,\n author = {Ben Stock and Martin Johns and Marius Steffens and M. Backes},\n booktitle = {USENIX Security Symposium},\n pages = {971-987},\n title = {How the Web Tangled Itself: Uncovering the History of Client-Side Web (In)Security},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2991065",
                "name": "Ben Stock"
            },
            {
                "authorId": "1935526",
                "name": "Martin Johns"
            },
            {
                "authorId": "34670261",
                "name": "Marius Steffens"
            },
            {
                "authorId": "144588806",
                "name": "M. Backes"
            }
        ]
    },
    {
        "paperId": "ac65baead69131e279b5ceebc0ed9a28568acaf5",
        "externalIds": {
            "MAG": "2753332081",
            "DBLP": "conf/uss/RediniMDFBGSKV17",
            "CorpusId": 19176944
        },
        "corpusId": 19176944,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/ac65baead69131e279b5ceebc0ed9a28568acaf5",
        "title": "BootStomp: On the Security of Bootloaders in Mobile Devices",
        "abstract": ",",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 36,
        "citationCount": 52,
        "influentialCitationCount": 2,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "781-798"
        },
        "citationStyles": {
            "bibtex": "@Article{Redini2017BootStompOT,\n author = {Nilo Redini and Aravind Machiry and Dipanjan Das and Y. Fratantonio and Antonio Bianchi and Eric Gustafson and Yan Shoshitaishvili and Christopher Kr\u00fcgel and Giovanni Vigna},\n booktitle = {USENIX Security Symposium},\n pages = {781-798},\n title = {BootStomp: On the Security of Bootloaders in Mobile Devices},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2286123",
                "name": "Nilo Redini"
            },
            {
                "authorId": "2275943",
                "name": "Aravind Machiry"
            },
            {
                "authorId": "38636902",
                "name": "Dipanjan Das"
            },
            {
                "authorId": "2416629",
                "name": "Y. Fratantonio"
            },
            {
                "authorId": "145978812",
                "name": "Antonio Bianchi"
            },
            {
                "authorId": "143679948",
                "name": "Eric Gustafson"
            },
            {
                "authorId": "3260361",
                "name": "Yan Shoshitaishvili"
            },
            {
                "authorId": "1715189",
                "name": "Christopher Kr\u00fcgel"
            },
            {
                "authorId": "1711242",
                "name": "Giovanni Vigna"
            }
        ]
    },
    {
        "paperId": "ae7bc5ad8dd0a861fe0df7bab07d5b4c75376bb4",
        "externalIds": {
            "DBLP": "conf/uss/DisselkoenKPT17",
            "MAG": "2751989915",
            "CorpusId": 6880884
        },
        "corpusId": 6880884,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/ae7bc5ad8dd0a861fe0df7bab07d5b4c75376bb4",
        "title": "Prime+Abort: A Timer-Free High-Precision L3 Cache Attack using Intel TSX",
        "abstract": "Last-Level Cache (LLC) attacks typically exploit timing side channels in hardware, and thus rely heavily on timers for their operation. Many proposed defenses against such side-channel attacks capitalize on this reliance. This paper presents PRIME+ABORT, a new cache attack which bypasses these defenses by not depending on timers for its function. Instead of a timing side channel, PRIME+ABORT leverages the Intel TSX hardware widely available in both server- and consumer-grade processors. This work shows that PRIME+ABORT is not only invulnerable to important classes of defenses, it also outperforms state-of-the-art LLC PRIME+PROBE attacks in both accuracy and efficiency, having a maximum detection speed (in events per second) 3\u00d7 higher than LLC PRIME+PROBE on Intel's Skylake architecture while producing fewer false positives.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 50,
        "citationCount": 160,
        "influentialCitationCount": 18,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "51-67"
        },
        "citationStyles": {
            "bibtex": "@Article{Disselkoen2017PrimeAbortAT,\n author = {Craig Disselkoen and David Kohlbrenner and Leo Porter and D. Tullsen},\n booktitle = {USENIX Security Symposium},\n pages = {51-67},\n title = {Prime+Abort: A Timer-Free High-Precision L3 Cache Attack using Intel TSX},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "6286332",
                "name": "Craig Disselkoen"
            },
            {
                "authorId": "2643813",
                "name": "David Kohlbrenner"
            },
            {
                "authorId": "4106632",
                "name": "Leo Porter"
            },
            {
                "authorId": "1740142",
                "name": "D. Tullsen"
            }
        ]
    },
    {
        "paperId": "aea5e016836f685f65f48ec6a82d4382fa46ee96",
        "externalIds": {
            "MAG": "3049673660",
            "ArXiv": "1709.02489",
            "DBLP": "journals/corr/abs-1709-02489",
            "CorpusId": 41502911
        },
        "corpusId": 41502911,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/aea5e016836f685f65f48ec6a82d4382fa46ee96",
        "title": "BlockSci: Design and applications of a blockchain analysis platform",
        "abstract": "Analysis of blockchain data is useful for both scientific research and commercial applications. We present BlockSci, an open-source software platform for blockchain analysis. BlockSci is versatile in its support for different blockchains and analysis tasks. It incorporates an in-memory, analytical (rather than transactional) database, making it several hundred times faster than existing tools. We describe BlockSci's design and present four analyses that illustrate its capabilities. \nThis is a working paper that accompanies the first public release of BlockSci, available at this https URL We seek input from the community to further develop the software and explore other potential applications.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 41,
        "citationCount": 185,
        "influentialCitationCount": 29,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Business",
                "source": "s2-fos-model"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-09-01",
        "journal": {
            "pages": "2721-2738"
        },
        "citationStyles": {
            "bibtex": "@Article{Kalodner2017BlockSciDA,\n author = {Harry A. Kalodner and Steven Goldfeder and Alishah Chator and Malte M\u00f6ser and Arvind Narayanan},\n booktitle = {USENIX Security Symposium},\n pages = {2721-2738},\n title = {BlockSci: Design and applications of a blockchain analysis platform},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "1817667",
                "name": "Harry A. Kalodner"
            },
            {
                "authorId": "2642595",
                "name": "Steven Goldfeder"
            },
            {
                "authorId": "26345484",
                "name": "Alishah Chator"
            },
            {
                "authorId": "2678347",
                "name": "Malte M\u00f6ser"
            },
            {
                "authorId": "47735253",
                "name": "Arvind Narayanan"
            }
        ]
    },
    {
        "paperId": "b505d6036f7c12fbf9dc958c07f78df538e7b83a",
        "externalIds": {
            "MAG": "2752373508",
            "DBLP": "conf/uss/HoSJP017",
            "CorpusId": 38169998
        },
        "corpusId": 38169998,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/b505d6036f7c12fbf9dc958c07f78df538e7b83a",
        "title": "Detecting Credential Spearphishing in Enterprise Settings",
        "abstract": null,
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 0,
        "citationCount": 82,
        "influentialCitationCount": 8,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "469-485"
        },
        "citationStyles": {
            "bibtex": "@Article{Ho2017DetectingCS,\n author = {Grant Ho and Aashis Sharma and M. Javed and V. Paxson and D. Wagner},\n booktitle = {USENIX Security Symposium},\n pages = {469-485},\n title = {Detecting Credential Spearphishing in Enterprise Settings},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "119958711",
                "name": "Grant Ho"
            },
            {
                "authorId": "101508949",
                "name": "Aashis Sharma"
            },
            {
                "authorId": "26574548",
                "name": "M. Javed"
            },
            {
                "authorId": "1744800",
                "name": "V. Paxson"
            },
            {
                "authorId": "145394689",
                "name": "D. Wagner"
            }
        ]
    },
    {
        "paperId": "b514fc52647f579b4d65bac685f4fff9557754b0",
        "externalIds": {
            "DBLP": "conf/uss/ShettySF18",
            "MAG": "2951240549",
            "ArXiv": "1711.01921",
            "CorpusId": 39764280
        },
        "corpusId": 39764280,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/b514fc52647f579b4d65bac685f4fff9557754b0",
        "title": "A4NT: Author Attribute Anonymity by Adversarial Training of Neural Machine Translation",
        "abstract": "Text-based analysis methods allow to reveal privacy relevant author attributes such as gender, age and identify of the text's author. Such methods can compromise the privacy of an anonymous author even when the author tries to remove privacy sensitive content. In this paper, we propose an automatic method, called Adversarial Author Attribute Anonymity Neural Translation ($A^4NT$), to combat such text-based adversaries. We combine sequence-to-sequence language models used in machine translation and generative adversarial networks to obfuscate author attributes. Unlike machine translation techniques which need paired data, our method can be trained on unpaired corpora of text containing different authors. Importantly, we propose and evaluate techniques to impose constraints on our $A^4NT$ to preserve the semantics of the input text. $A^4NT$ learns to make minimal changes to the input text to successfully fool author attribute classifiers, while aiming to maintain the meaning of the input. We show through experiments on two different datasets and three settings that our proposed method is effective in fooling the author attribute classifiers and thereby improving the anonymity of authors.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 68,
        "citationCount": 93,
        "influentialCitationCount": 17,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science",
            "Mathematics"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Mathematics",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-11-01",
        "journal": {
            "pages": "1633-1650"
        },
        "citationStyles": {
            "bibtex": "@Article{Shetty2017A4NTAA,\n author = {Rakshith Shetty and B. Schiele and Mario Fritz},\n booktitle = {USENIX Security Symposium},\n pages = {1633-1650},\n title = {A4NT: Author Attribute Anonymity by Adversarial Training of Neural Machine Translation},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "38314306",
                "name": "Rakshith Shetty"
            },
            {
                "authorId": "48920094",
                "name": "B. Schiele"
            },
            {
                "authorId": "1739548",
                "name": "Mario Fritz"
            }
        ]
    },
    {
        "paperId": "b8ce674c135e1379ec42149289699ad28a0a64fe",
        "externalIds": {
            "MAG": "2750954988",
            "DBLP": "conf/uss/KrombholzMSW17",
            "CorpusId": 10839625
        },
        "corpusId": 10839625,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/b8ce674c135e1379ec42149289699ad28a0a64fe",
        "title": "\"I Have No Idea What I'm Doing\" - On the Usability of Deploying HTTPS",
        "abstract": "Protecting communication content at scale is a difficult task, and TLS is the protocol most commonly used to do so. However, it has been shown that deploying it in a truly secure fashion is challenging for a large fraction of online service operators. While Let\u2019s Encrypt was specifically built and launched to promote the adoption of HTTPS, this paper aims to understand the reasons for why it has been so hard to deploy TLS correctly and studies the usability of the deployment process for HTTPS. We performed a series of experiments with 28 knowledgable participants and revealed significant usability challenges that result in weak TLS configurations. Additionally, we conducted expert interviews with 7 experienced security auditors. Our results suggest that the deployment process is far too complex even for people with proficient knowledge in the field, and that server configurations should have stronger security by default. While the results from our expert interviews confirm the ecological validity of the lab study results, they additionally highlight that even educated users prefer solutions that are easy to use. An improved and less vulnerable workflow would be very beneficial to finding stronger configurations in the wild.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 43,
        "citationCount": 101,
        "influentialCitationCount": 5,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-01",
        "journal": {
            "pages": "1339-1356"
        },
        "citationStyles": {
            "bibtex": "@Article{Krombholz2017IHN,\n author = {Katharina Krombholz and Wilfried Mayer and Martin Schmiedecker and E. Weippl},\n booktitle = {USENIX Security Symposium},\n pages = {1339-1356},\n title = {\"I Have No Idea What I'm Doing\" - On the Usability of Deploying HTTPS},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "1911371",
                "name": "Katharina Krombholz"
            },
            {
                "authorId": "14480978",
                "name": "Wilfried Mayer"
            },
            {
                "authorId": "1734038",
                "name": "Martin Schmiedecker"
            },
            {
                "authorId": "1797267",
                "name": "E. Weippl"
            }
        ]
    },
    {
        "paperId": "ba0935cb5d8424b8662e1869eb71fb19579073d2",
        "externalIds": {
            "DBLP": "conf/uss/BrasserDGLS17",
            "MAG": "2751092112",
            "CorpusId": 21837786
        },
        "corpusId": 21837786,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/ba0935cb5d8424b8662e1869eb71fb19579073d2",
        "title": "CAn't Touch This: Software-only Mitigation against Rowhammer Attacks targeting Kernel Memory",
        "abstract": "Rowhammer is a hardware bug that can be exploited to implement privilege escalation and remote code execution attacks. Previous proposals on rowhammer mitigations either require hardware changes or follow heuristicbased approaches (based on CPU performance counters). To date, there exists no instant protection against rowhammer attacks on legacy systems. In this paper, we present the design and implementation of a practical and efficient software-only defense against rowhammer attacks. Our defense, called CATT, prevents the attacker from leveraging rowhammer to corrupt kernel memory from user mode. To do so, we extend the physical memory allocator of the OS to physically isolate the memory of the kernel and user space. We implemented CATT on x86 and ARM to mitigate rowhammer-based kernel exploits. Our extensive evaluation shows that our mitigation (i) can stop available realworld rowhammer attacks, (ii) imposes virtually no runtime overhead for common user and kernel benchmarks as well as commonly used applications, and (iii) does not affect the stability of the overall system.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 22,
        "citationCount": 109,
        "influentialCitationCount": 19,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-01",
        "journal": {
            "pages": "117-130"
        },
        "citationStyles": {
            "bibtex": "@Article{Brasser2017CAntTT,\n author = {Ferdinand Brasser and Lucas Davi and David Gens and C. Liebchen and A. Sadeghi},\n booktitle = {USENIX Security Symposium},\n pages = {117-130},\n title = {CAn't Touch This: Software-only Mitigation against Rowhammer Attacks targeting Kernel Memory},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "6639898",
                "name": "Ferdinand Brasser"
            },
            {
                "authorId": "2597368",
                "name": "Lucas Davi"
            },
            {
                "authorId": "48167485",
                "name": "David Gens"
            },
            {
                "authorId": "2279415",
                "name": "C. Liebchen"
            },
            {
                "authorId": "145897166",
                "name": "A. Sadeghi"
            }
        ]
    },
    {
        "paperId": "bad6552f0b3e533194c9c1d8a26a5fd470b1b24d",
        "externalIds": {
            "MAG": "2751274652",
            "DBLP": "conf/uss/HuaGXCZG17",
            "CorpusId": 96764
        },
        "corpusId": 96764,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/bad6552f0b3e533194c9c1d8a26a5fd470b1b24d",
        "title": "vTZ: Virtualizing ARM TrustZone",
        "abstract": "ARM TrustZone, a security extension that provides a secure world, a trusted execution environment (TEE), to run security-sensitive code, has been widely adopted in mobile platforms. With the increasing momentum of ARM64 being adopted in server markets like cloud, it is likely to see TrustZone being adopted as a key pillar for cloud security. Unfortunately, TrustZone is not designed to be virtualizable as there is only one TEE provided by the hardware, which prevents it from being securely shared by multiple virtual machines (VMs). This paper conducts a study on variable approaches to virtualizing TrustZone in virtualized environments and then presents vTZ, a solution that securely provides each guest VM with a virtualized guest TEE using existing hardware. vTZ leverages the idea of separating functionality from protection by maintaining a secure co-running VM to serve as a guest TEE, while using the hardware TrustZone to enforce strong isolation among guest TEEs and the untrusted hypervisor. Specifically, vTZ uses a tiny monitor running within the physical TrustZone that securely interposes and virtualizes memory mapping and world switching. vTZ further leverages a few pieces of protected, self-contained code running in a Constrained Isolated Execution Environment (CIEE) to provide secure virtualization and isolation among multiple guest TEEs. We have implemented vTZ on Xen 4.8 on both ARMv7 and ARMv8 development boards. Evaluation using two common TEE-kernels (secure kernel running in TEE) such as seL4 1 and OP-TEE shows that vTZ provides strong security with small performance overhead.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 43,
        "citationCount": 119,
        "influentialCitationCount": 6,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "541-556"
        },
        "citationStyles": {
            "bibtex": "@Article{Hua2017vTZVA,\n author = {Zhichao Hua and Jinyu Gu and Yubin Xia and Haibo Chen and B. Zang and Haibing Guan},\n booktitle = {USENIX Security Symposium},\n pages = {541-556},\n title = {vTZ: Virtualizing ARM TrustZone},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "40275624",
                "name": "Zhichao Hua"
            },
            {
                "authorId": "47748458",
                "name": "Jinyu Gu"
            },
            {
                "authorId": "1708437",
                "name": "Yubin Xia"
            },
            {
                "authorId": "2118438836",
                "name": "Haibo Chen"
            },
            {
                "authorId": "7274044",
                "name": "B. Zang"
            },
            {
                "authorId": "145676478",
                "name": "Haibing Guan"
            }
        ]
    },
    {
        "paperId": "be8ae75ee7051ffd79ce6349f68dabfa8db9ec69",
        "externalIds": {
            "MAG": "2752052041",
            "DBLP": "conf/uss/XueZCLG17",
            "CorpusId": 10150390
        },
        "corpusId": 10150390,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/be8ae75ee7051ffd79ce6349f68dabfa8db9ec69",
        "title": "Malton: Towards On-Device Non-Invasive Mobile Malware Analysis for ART",
        "abstract": "It\u2019s an essential step to understand malware\u2019s behaviors for developing effective solutions. Though a number of systems have been proposed to analyze Android malware, they have been limited by incomplete view of inspection on a single layer. What\u2019s worse, various new techniques (e.g., packing, anti-emulator, etc.) employed by the latest malware samples further make these systems ineffective. In this paper, we propose Malton, a novel on-device non-invasive analysis platform for the new Android runtime (i.e., the ART runtime). As a dynamic analysis tool, Malton runs on real mobile devices and provides a comprehensive view of malware\u2019s behaviors by conducting multi-layer monitoring and information flow tracking, as well as efficient path exploration. We have carefully evaluated Malton using real-world malware samples. The experimental results showed that Malton is more effective than existing tools, with the capability to analyze sophisticated malware samples and provide a comprehensive view of malicious behaviors of these samples.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 81,
        "citationCount": 70,
        "influentialCitationCount": 3,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-01",
        "journal": {
            "pages": "289-306"
        },
        "citationStyles": {
            "bibtex": "@Article{Xue2017MaltonTO,\n author = {Lei Xue and Yajin Zhou and Ting Chen and Xiapu Luo and G. Gu},\n booktitle = {USENIX Security Symposium},\n pages = {289-306},\n title = {Malton: Towards On-Device Non-Invasive Mobile Malware Analysis for ART},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "49449002",
                "name": "Lei Xue"
            },
            {
                "authorId": "152641282",
                "name": "Yajin Zhou"
            },
            {
                "authorId": "145358510",
                "name": "Ting Chen"
            },
            {
                "authorId": "1708419",
                "name": "Xiapu Luo"
            },
            {
                "authorId": "3969047",
                "name": "G. Gu"
            }
        ]
    },
    {
        "paperId": "c17d5f10dc4693e397edf2b0cc9a9658fd0d9d71",
        "externalIds": {
            "DBLP": "conf/uss/XuK17",
            "MAG": "2752907035",
            "CorpusId": 8757736
        },
        "corpusId": 8757736,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/c17d5f10dc4693e397edf2b0cc9a9658fd0d9d71",
        "title": "PlatPal: Detecting Malicious Documents with Platform Diversity",
        "abstract": "Due to the continued exploitation of Adobe Reader, malicious document (maldoc) detection has become a pressing problem. Although many solutions have been proposed, recent works have highlighted some common drawbacks, such as parser-confusion and classifier-evasion attacks. In response to this, we propose a new perspective for maldoc detection: platform diversity. In particular, we identify eight factors in OS design and implementation that could cause behavioral divergences under attack, ranging from syscall semantics (more obvious) to heap object metadata structure (more subtle) and further show how they can thwart attackers from finding bugs, exploiting bugs, or performing malicious activities. We further prototype PLATPAL to systematically harvest platform diversity. PLATPAL hooks into Adobe Reader to trace internal PDF processing and also uses sandboxed execution to capture a maldoc\u2019s impact on the host system. Execution traces on different platforms are compared, and maldoc detection is based on the observation that a benign document behaves the same across platforms, while a maldoc behaves differently during exploitation. Evaluations show that PLATPAL raises no false alarms in benign samples, detects a variety of behavioral discrepancies in malicious samples, and is a scalable and practical solution.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 54,
        "citationCount": 30,
        "influentialCitationCount": 0,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "271-287"
        },
        "citationStyles": {
            "bibtex": "@Article{Xu2017PlatPalDM,\n author = {Meng Xu and Taesoo Kim},\n booktitle = {USENIX Security Symposium},\n pages = {271-287},\n title = {PlatPal: Detecting Malicious Documents with Platform Diversity},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2110682254",
                "name": "Meng Xu"
            },
            {
                "authorId": "3254849",
                "name": "Taesoo Kim"
            }
        ]
    },
    {
        "paperId": "cd2f62b6218613b7e3f13b70b1410db610ca3c6a",
        "externalIds": {
            "DBLP": "conf/uss/GrussLSOHC17",
            "MAG": "2744175342",
            "CorpusId": 13659404
        },
        "corpusId": 13659404,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/cd2f62b6218613b7e3f13b70b1410db610ca3c6a",
        "title": "Strong and Efficient Cache Side-Channel Protection using Hardware Transactional Memory",
        "abstract": "Cache-based side-channel attacks are a serious problem in multi-tenant environments, for example, modern cloud data centers. We address this problem with Cloak, a new technique that uses hardware transactional memory to prevent adversarial observation of cache misses on sensitive code and data. We show that Cloak provides strong protection against all known cache-based side-channel attacks with low performance overhead. We demonstrate the efficacy of our approach by retrofitting vulnerable code with Cloak and experimentally confirming immunity against state-of-the-art attacks. We also show that by applying Cloak to code running inside Intel SGX enclaves we can effectively block information leakage through cache side channels from enclaves, thus addressing one of the main weaknesses of SGX.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 73,
        "citationCount": 233,
        "influentialCitationCount": 22,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "217-233"
        },
        "citationStyles": {
            "bibtex": "@Article{Gruss2017StrongAE,\n author = {D. Gruss and Julian Lettner and Felix Schuster and O. Ohrimenko and Istv\u00e1n Haller and Manuel Costa},\n booktitle = {USENIX Security Symposium},\n pages = {217-233},\n title = {Strong and Efficient Cache Side-Channel Protection using Hardware Transactional Memory},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2015792",
                "name": "D. Gruss"
            },
            {
                "authorId": "3427131",
                "name": "Julian Lettner"
            },
            {
                "authorId": "145124099",
                "name": "Felix Schuster"
            },
            {
                "authorId": "144849964",
                "name": "O. Ohrimenko"
            },
            {
                "authorId": "48758494",
                "name": "Istv\u00e1n Haller"
            },
            {
                "authorId": "144638568",
                "name": "Manuel Costa"
            }
        ]
    },
    {
        "paperId": "d5498ce58f577bec2ec5097ea10cd6dd4360c097",
        "externalIds": {
            "DBLP": "conf/uss/WangG17",
            "MAG": "2752949934",
            "CorpusId": 12311676
        },
        "corpusId": 12311676,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/d5498ce58f577bec2ec5097ea10cd6dd4360c097",
        "title": "Walkie-Talkie: An Efficient Defense Against Passive Website Fingerprinting Attacks",
        "abstract": "Website fingerprinting (WF) is a traffic analysis attack that allows an eavesdropper to determine the web activity of a client, even if the client is using privacy technologies such as proxies, VPNs, or Tor. Recent work has highlighted the threat of website fingerprinting to privacy-sensitive web users. Many previously designed defenses against website fingerprinting have been broken by newer attacks that use better classifiers. The remaining effective defenses are inefficient: they hamper user experience and burden the server with large overheads. \n \nIn this work we propose Walkie-Talkie, an effective and efficient WF defense. Walkie-Talkie modifies the browser to communicate in half-duplex mode rather than the usual full-duplex mode; half-duplex mode produces easily moldable burst sequences to leak less information to the adversary, at little additional overhead. Designed for the open-world scenario, Walkie-Talkie molds burst sequences so that sensitive and non-sensitive pages look the same. Experimentally, we show that Walkie-Talkie can defeat all known WF attacks with a bandwidth overhead of 31% and a time overhead of 34%, which is far more efficient than all effective WF defenses (often exceeding 100% for both types of overhead). In fact, we show that Walkie-Talkie cannot be defeated by any website fingerprinting attack, even hypothetical advanced attacks that use site link information, page visit rates, and intercell timing.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 31,
        "citationCount": 196,
        "influentialCitationCount": 58,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "1375-1390"
        },
        "citationStyles": {
            "bibtex": "@Article{Wang2017WalkieTalkieAE,\n author = {Tao Wang and I. Goldberg},\n booktitle = {USENIX Security Symposium},\n pages = {1375-1390},\n title = {Walkie-Talkie: An Efficient Defense Against Passive Website Fingerprinting Attacks},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2156018320",
                "name": "Tao Wang"
            },
            {
                "authorId": "34614659",
                "name": "I. Goldberg"
            }
        ]
    },
    {
        "paperId": "d666f8eb537d93580fb2a372d967263ba10ee580",
        "externalIds": {
            "DBLP": "conf/uss/LiuWPYW17",
            "MAG": "2752019414",
            "CorpusId": 19810277
        },
        "corpusId": 19810277,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/d666f8eb537d93580fb2a372d967263ba10ee580",
        "title": "Measuring the Insecurity of Mobile Deep Links of Android",
        "abstract": "Mobile deep links are URIs that point to specific locations within apps, which are instrumental to web-to-app communications. Existing \u201cscheme URLs\u201d are known to have hijacking vulnerabilities where one app can freely register another app\u2019s schemes to hijack the communication. Recently, Android introduced two new methods \u201cApp links\u201d and \u201cIntent URLs\u201d which were designed with security features, to replace scheme URLs. While the new mechanisms are secure in theory, little is known about how effective they are in practice. In this paper, we conduct the first empirical measurement on various mobile deep links across apps and websites. Our analysis is based on the deep links extracted from two snapshots of 160,000+ top Android apps from Google Play (2014 and 2016), and 1 million webpages from Alexa top domains. We find that the new linking methods (particularly App links) not only failed to deliver the security benefits as designed, but significantly worsen the situation. First, App links apply link verification to prevent hijacking. However, only 194 apps (2.2% out of 8,878 apps with App links) can pass the verification due to incorrect (or no) implementations. Second, we identify a new vulnerability in App link\u2019s preference setting, which allows a malicious app to intercept arbitrary HTTPS URLs in the browser without raising any alerts. Third, we identify more hijacking cases on App links than existing scheme URLs among both apps and websites. Many of them are targeting popular sites such as online social networks. Finally, Intent URLs have little impact in mitigating hijacking risks due to a low adoption rate on the web.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 48,
        "citationCount": 27,
        "influentialCitationCount": 0,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "953-969"
        },
        "citationStyles": {
            "bibtex": "@Article{Liu2017MeasuringTI,\n author = {Fang Liu and C. Wang and Andres Pico and D. Yao and G. Wang},\n booktitle = {USENIX Security Symposium},\n pages = {953-969},\n title = {Measuring the Insecurity of Mobile Deep Links of Android},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2170733436",
                "name": "Fang Liu"
            },
            {
                "authorId": "47074042",
                "name": "C. Wang"
            },
            {
                "authorId": "40551297",
                "name": "Andres Pico"
            },
            {
                "authorId": "144805631",
                "name": "D. Yao"
            },
            {
                "authorId": "2096527",
                "name": "G. Wang"
            }
        ]
    },
    {
        "paperId": "d6935832a0a7c4e1bf2376e9b61d595f3914b59f",
        "externalIds": {
            "MAG": "2752511791",
            "DBLP": "conf/uss/ReavesBAVTS17",
            "CorpusId": 31869800
        },
        "corpusId": 31869800,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/d6935832a0a7c4e1bf2376e9b61d595f3914b59f",
        "title": "AuthentiCall: Efficient Identity and Content Authentication for Phone Calls",
        "abstract": "Phones are used to confirm some of our most sensitive transactions. From coordination between energy providers in the power grid to corroboration of high-value transfers with a financial institution, we rely on telephony to serve as a trustworthy communications path. However, such trust is not well placed given the widespread understanding of telephony's inability to provide end-to-end authentication between callers. In this paper, we address this problem through the AuthentiCall system. AuthentiCall not only cryptographically authenticates both parties on the call, but also provides strong guarantees of the integrity of conversations made over traditional phone networks. We achieve these ends through the use of formally verified protocols that bind low-bitrate data channels to heterogeneous audio channels. Unlike previous efforts, we demonstrate that AuthentiCall can be used to provide strong authentication before calls are answered, allowing users to ignore calls claiming a particular Caller ID that are unable or unwilling to provide proof of that assertion. Moreover, we detect 99% of tampered call audio with negligible false positives and only a worst-case 1.4 second call establishment overhead. In so doing, we argue that strong and efficient end-to-end authentication for phone networks is approaching a practical reality.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 63,
        "citationCount": 34,
        "influentialCitationCount": 1,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "575-592"
        },
        "citationStyles": {
            "bibtex": "@Article{Reaves2017AuthentiCallEI,\n author = {Bradley Reaves and Logan Blue and H. Abdullah and Luis Vargas and Patrick Traynor and Thomas Shrimpton},\n booktitle = {USENIX Security Symposium},\n pages = {575-592},\n title = {AuthentiCall: Efficient Identity and Content Authentication for Phone Calls},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "48514229",
                "name": "Bradley Reaves"
            },
            {
                "authorId": "47453102",
                "name": "Logan Blue"
            },
            {
                "authorId": "47994360",
                "name": "H. Abdullah"
            },
            {
                "authorId": "2060596302",
                "name": "Luis Vargas"
            },
            {
                "authorId": "145744451",
                "name": "Patrick Traynor"
            },
            {
                "authorId": "8644086",
                "name": "Thomas Shrimpton"
            }
        ]
    },
    {
        "paperId": "dba12b6296f9b81bdbc7696a228b0ec0b25ef23c",
        "externalIds": {
            "DBLP": "conf/uss/DangM017",
            "MAG": "2735704859",
            "CorpusId": 6795493
        },
        "corpusId": 6795493,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/dba12b6296f9b81bdbc7696a228b0ec0b25ef23c",
        "title": "Oscar: A Practical Page-Permissions-Based Scheme for Thwarting Dangling Pointers",
        "abstract": "Using memory after it has been freed opens programs up to both data and control-flow exploits. Recent work on temporal memory safety has focused on using explicit lock-and-key mechanisms (objects are assigned a new lock upon allocation, and pointers must have the correct key to be dereferenced) or corrupting the pointer values upon free(). Placing objects on separate pages and using page permissions to enforce safety is an older, wellknown technique that has been maligned as too slow, without comprehensive analysis. We show that both old and new techniques are conceptually instances of lockand-key, and argue that, in principle, page permissions should be the most desirable approach. We then validate this insight experimentally by designing, implementing, and evaluating Oscar, a new protection scheme based on page permissions. Unlike prior attempts, Oscar does not require source code, is compatible with standard and custom memory allocators, and works correctly with programs that fork. Also, Oscar performs favorably \u2013 often by more than an order of magnitude \u2013 compared to recent proposals: overall, it has similar or lower runtime overhead, and lower memory overhead than competing systems.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 33,
        "citationCount": 65,
        "influentialCitationCount": 19,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "815-832"
        },
        "citationStyles": {
            "bibtex": "@Article{Dang2017OscarAP,\n author = {Thurston H. Y. Dang and Petros Maniatis and D. Wagner},\n booktitle = {USENIX Security Symposium},\n pages = {815-832},\n title = {Oscar: A Practical Page-Permissions-Based Scheme for Thwarting Dangling Pointers},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2907714",
                "name": "Thurston H. Y. Dang"
            },
            {
                "authorId": "2286904",
                "name": "Petros Maniatis"
            },
            {
                "authorId": "145394689",
                "name": "D. Wagner"
            }
        ]
    },
    {
        "paperId": "dd32037186342c16001e95715bd28eefc09cf288",
        "externalIds": {
            "MAG": "2752559890",
            "DBLP": "conf/uss/MingXJW17",
            "CorpusId": 6833169
        },
        "corpusId": 6833169,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/dd32037186342c16001e95715bd28eefc09cf288",
        "title": "BinSim: Trace-based Semantic Binary Diffing via System Call Sliced Segment Equivalence Checking",
        "abstract": "Detecting differences between two binary executables (binary diffing), first derived from patch analysis, have been widely employed in various software security analysis tasks, such as software plagiarism detection and malware lineage inference. Especially when analyzing malware variants, pervasive code obfuscation techniques have driven recent work towards determining semantic similarity in spite of ostensible difference in syntax. Existing ways rely on either comparing runtime behaviors or modeling code snippet semantics with symbolic execution. However, neither approach delivers the expected precision. In this paper, we propose system call sliced segment equivalence checking, a hybrid method to identify fine-grained semantic similarities or differences between two execution traces. We perform enhanced dynamic slicing and symbolic execution to compare the logic of instructions that impact on the observable behaviors. Our approach improves existing semantics-based binary diffing by 1) inferring whether two executable binaries\u2019 behaviors are conditionally equivalent; 2) detecting the similarities or differences, whose effects spread across multiple basic blocks. We have developed a prototype, called BinSim, and performed empirical evaluations against sophisticated obfuscation combinations and more than 1,000 recent malware samples, including now-infamous crypto ransomware. Our experimental results show that BinSim can successfully identify finegrained relations between obfuscated binaries, and outperform existing binary diffing tools in terms of better resilience and accuracy.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 79,
        "citationCount": 95,
        "influentialCitationCount": 4,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "253-270"
        },
        "citationStyles": {
            "bibtex": "@Article{Ming2017BinSimTS,\n author = {Jiang Ming and Dongpeng Xu and Yufei Jiang and Dinghao Wu},\n booktitle = {USENIX Security Symposium},\n pages = {253-270},\n title = {BinSim: Trace-based Semantic Binary Diffing via System Call Sliced Segment Equivalence Checking},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "47526067",
                "name": "Jiang Ming"
            },
            {
                "authorId": "2886479",
                "name": "Dongpeng Xu"
            },
            {
                "authorId": "1557361962",
                "name": "Yufei Jiang"
            },
            {
                "authorId": "9180687",
                "name": "Dinghao Wu"
            }
        ]
    },
    {
        "paperId": "ddedcc47d8326c4dc4dad226fa432b1b91389796",
        "externalIds": {
            "MAG": "2751844787",
            "DBLP": "conf/uss/MaZ0LZX17",
            "CorpusId": 31303772
        },
        "corpusId": 31303772,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/ddedcc47d8326c4dc4dad226fa432b1b91389796",
        "title": "MPI: Multiple Perspective Attack Investigation with Semantic Aware Execution Partitioning",
        "abstract": "Traditional auditing techniques generate large and inaccurate causal graphs. To overcome such limitations, researchers proposed to leverage execution partitioning to improve analysis granularity and hence precision. However, these techniques rely on a low level programming paradigm (i.e., event handling loops) to partition execution, which often results in low level graphs with a lot of redundancy. This not only leads to space inefficiency and noises in causal graphs, but also makes it difficult to understand attack provenance. Moreover, these techniques require training to detect low level memory dependencies across partitions. Achieving correctness and completeness in the training is highly challenging. In this paper, we propose a semantics aware program annotation and instrumentation technique to partition execution based on the application specific high level task structures. It avoids training, generates execution partitions with rich semantic information and provides multiple perspectives of an attack. We develop a prototype and integrate it with three different provenance systems: the Linux Audit system, ProTracer and the LPM-HiFi system. The evaluation results show that our technique generates cleaner attack graphs with rich high-level semantics and has much lower space and time overheads, when compared with the event loop based partitioning techniques BEEP and ProTracer.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 48,
        "citationCount": 112,
        "influentialCitationCount": 13,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "1111-1128"
        },
        "citationStyles": {
            "bibtex": "@Article{Ma2017MPIMP,\n author = {Shiqing Ma and Juan Zhai and Fei Wang and K. H. Lee and X. Zhang and Dongyan Xu},\n booktitle = {USENIX Security Symposium},\n pages = {1111-1128},\n title = {MPI: Multiple Perspective Attack Investigation with Semantic Aware Execution Partitioning},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2026855",
                "name": "Shiqing Ma"
            },
            {
                "authorId": "3293342",
                "name": "Juan Zhai"
            },
            {
                "authorId": "1682816",
                "name": "Fei Wang"
            },
            {
                "authorId": "1766676",
                "name": "K. H. Lee"
            },
            {
                "authorId": "1771551",
                "name": "X. Zhang"
            },
            {
                "authorId": "2696404",
                "name": "Dongyan Xu"
            }
        ]
    },
    {
        "paperId": "dede48198a33606457ae583c52e774159d24c74d",
        "externalIds": {
            "MAG": "2752531342",
            "DBLP": "conf/uss/BaiZWLMZLHZ17",
            "CorpusId": 27665471
        },
        "corpusId": 27665471,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/dede48198a33606457ae583c52e774159d24c74d",
        "title": "Picking Up My Tab: Understanding and Mitigating Synchronized Token Lifting and Spending in Mobile Payment",
        "abstract": "Mobile off-line payment enables purchase over the counter even in the absence of reliable network connections. Popular solutions proposed by leading payment service providers (e.g., Google, Amazon, Samsung, Apple) rely on direct communication between the payer's device and the POS system, through Near-Field Communication (NFC), Magnetic Secure Transaction (MST), audio and QR code. Although pre-cautions have been taken to protect the payment transactions through these channels, their security implications are less understood, particularly in the presence of unique threats to this new e-commerce service. \n \nIn the paper, we report a new type of over-the-counter payment frauds on mobile off-line payment, which exploit the designs of existing schemes that apparently fail to consider the adversary capable of actively affecting the payment process. Our attack, called Synchronized Token Lifting and Spending (STLS), demonstrates that an active attacker can sniff the payment token, halt the ongoing transaction through various means and transmit the token quickly to a colluder to spend it in a different transaction while the token is still valid. Our research shows that such STLS attacks pose a realistic threat to popular offline payment schemes, particularly those meant to be backwardly compatible, like Samsung Pay and AliPay. \n \nTo mitigate the newly discovered threats, we propose a new solution called POSAUTH. One fundamental cause of the STLS risk is the nature of the communication channels used by the vulnerable mobile off-line payment schemes, which are easy to sniff and jam, and more importantly, unable to support a secure mutual challenge-response protocols since information can only be transmitted in one-way. POSAUTH addresses this issue by incorporating one unique ID of the current POS terminal into the generation of payment tokens by requiring a quick scanning of QR code printed on the POS terminal. When combined with a short valid period, POSAUTH can ensure that tokens generated for one transaction can only be used in that transaction.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 42,
        "citationCount": 30,
        "influentialCitationCount": 7,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Business",
                "source": "s2-fos-model"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-16",
        "journal": {
            "pages": "593-608"
        },
        "citationStyles": {
            "bibtex": "@Article{Bai2017PickingUM,\n author = {Xiaolong Bai and Zhe Zhou and Xiaofeng Wang and Zhou Li and Xianghang Mi and N. Zhang and Tongxin Li and Shimin Hu and Kehuan Zhang},\n booktitle = {USENIX Security Symposium},\n pages = {593-608},\n title = {Picking Up My Tab: Understanding and Mitigating Synchronized Token Lifting and Spending in Mobile Payment},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2007558858",
                "name": "Xiaolong Bai"
            },
            {
                "authorId": "144924314",
                "name": "Zhe Zhou"
            },
            {
                "authorId": "50141047",
                "name": "Xiaofeng Wang"
            },
            {
                "authorId": "121544553",
                "name": "Zhou Li"
            },
            {
                "authorId": "33479991",
                "name": "Xianghang Mi"
            },
            {
                "authorId": "71211474",
                "name": "N. Zhang"
            },
            {
                "authorId": "2144024234",
                "name": "Tongxin Li"
            },
            {
                "authorId": "145140922",
                "name": "Shimin Hu"
            },
            {
                "authorId": "3297454",
                "name": "Kehuan Zhang"
            }
        ]
    },
    {
        "paperId": "e36ae4d80202c0ca02dec9fcda89715ffb6a42ad",
        "externalIds": {
            "MAG": "2751848028",
            "DBLP": "conf/uss/MehtaEH0D17",
            "CorpusId": 12637093
        },
        "corpusId": 12637093,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/e36ae4d80202c0ca02dec9fcda89715ffb6a42ad",
        "title": "Qapla: Policy compliance for database-backed systems",
        "abstract": "Many database-backed systems store confidential data that is accessed on behalf of users with different privileges. Policies governing access are often fine-grained, being specific to users, time, accessed columns and rows, values in the database (e.g., user roles), and operators used in queries (e.g., aggregators, group by, and join). Today, applications are often relied upon to issue policy compliant queries or filter the results of non-compliant queries, which is vulnerable to application errors. Qapla provides an alternate approach to policy enforcement that neither depends on application correctness, nor on specialized database support. In Qapla, policies are specific to rows and columns and may additionally refer to the querier\u2019s identity and time, are specified in SQL, and stored in the database itself. We prototype Qapla in a database adapter, and evaluate it by enforcing applicable policies in the HotCRP conference management system and a system for managing academic job applications.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 31,
        "citationCount": 42,
        "influentialCitationCount": 3,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "1463-1479"
        },
        "citationStyles": {
            "bibtex": "@Article{Mehta2017QaplaPC,\n author = {Aastha Mehta and Eslam Elnikety and Katura Harvey and D. Garg and P. Druschel},\n booktitle = {USENIX Security Symposium},\n pages = {1463-1479},\n title = {Qapla: Policy compliance for database-backed systems},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "37655483",
                "name": "Aastha Mehta"
            },
            {
                "authorId": "2290203",
                "name": "Eslam Elnikety"
            },
            {
                "authorId": "50697166",
                "name": "Katura Harvey"
            },
            {
                "authorId": "145915017",
                "name": "D. Garg"
            },
            {
                "authorId": "1736987",
                "name": "P. Druschel"
            }
        ]
    },
    {
        "paperId": "e6a798c87cdee8036aeb6dab4cfac4272f25515f",
        "externalIds": {
            "MAG": "2613647264",
            "DBLP": "conf/uss/PhamDETHH17",
            "CorpusId": 33798739
        },
        "corpusId": 33798739,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/e6a798c87cdee8036aeb6dab4cfac4272f25515f",
        "title": "ORide: A Privacy-Preserving yet Accountable Ride-Hailing Service",
        "abstract": "In recent years, ride-hailing services (RHSs) have be- come increasingly popular, serving millions of users per day. Such systems, however, raise significant privacy concerns, because service providers are able to track the precise mobility patterns of all riders and drivers. In this paper, we propose ORide (Oblivious Ride), a privacy- preserving RHS based on somewhat-homomorphic en- cryption with optimizations such as ciphertext packing and transformed processing. With ORide, a service provider can match riders and drivers without learning their identities or location information. ORide offers rid- ers with fairly large anonymity sets (e.g., several thou- sands), even in sparsely populated areas. In addition, ORide supports key RHS features such as easy payment, reputation scores, accountability, and retrieval of lost items. Using real data-sets that consist of millions of rides, we show that the computational and network over- head introduced by ORide is acceptable. For example, ORide adds only several milliseconds to ride-hailing op- erations, and the extra driving distance for a driver is less than 0.5 km in more than 75% of the cases evaluated. In short, we show that a RHS can offer strong privacy guar- antees to both riders and drivers while maintaining the convenience of its services.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 42,
        "citationCount": 74,
        "influentialCitationCount": 18,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-01",
        "journal": {
            "pages": "1235-1252"
        },
        "citationStyles": {
            "bibtex": "@Article{Pham2017ORideAP,\n author = {Anh Pham and Italo Dacosta and Guillaume Endignoux and J. Troncoso-Pastoriza and K\u00e9vin Huguenin and J. Hubaux},\n booktitle = {USENIX Security Symposium},\n pages = {1235-1252},\n title = {ORide: A Privacy-Preserving yet Accountable Ride-Hailing Service},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "48953547",
                "name": "Anh Pham"
            },
            {
                "authorId": "2461431",
                "name": "Italo Dacosta"
            },
            {
                "authorId": "3437606",
                "name": "Guillaume Endignoux"
            },
            {
                "authorId": "1398987134",
                "name": "J. Troncoso-Pastoriza"
            },
            {
                "authorId": "11128488",
                "name": "K\u00e9vin Huguenin"
            },
            {
                "authorId": "1757221",
                "name": "J. Hubaux"
            }
        ]
    },
    {
        "paperId": "e901a418704ab9376eaccaca821aa6bea146043c",
        "externalIds": {
            "MAG": "2729024603",
            "DBLP": "conf/uss/NikitinKJGGKCF17",
            "CorpusId": 3644935
        },
        "corpusId": 3644935,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/e901a418704ab9376eaccaca821aa6bea146043c",
        "title": "CHAINIAC: Proactive Software-Update Transparency via Collectively Signed Skipchains and Verified Builds",
        "abstract": "Software-update mechanisms are critical to the security of modern systems, but their typically centralized design presents a lucrative and frequently attacked target. In this work, we propose CHAINIAC, a decentralized software-update framework that eliminates single points of failure, enforces transparency, and provides efficient verifiability of integrity and authenticity for software-release processes. Independent witness servers collectively verify conformance of software updates to release policies, build verifiers validate the source-to-binary correspondence, and a tamper-proof release log stores collectively signed updates, thus ensuring that no release is accepted by clients before being widely disclosed and validated. The release log embodies a skipchain, a novel data structure, enabling arbitrarily out-of-date clients to efficiently validate updates and signing keys. Evaluation of our CHAINIAC prototype on reproducible Debian packages shows that the automated update process takes the average of 5 minutes per release for individual packages, and only 20 seconds for the aggregate timeline. We further evaluate the framework using real-world data from the PyPI package repository and show that it offers clients security comparable to verifying every single update themselves while consuming only one-fifth of the bandwidth and having a minimal computational overhead.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 53,
        "citationCount": 130,
        "influentialCitationCount": 12,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "name": "IACR Cryptol. ePrint Arch.",
            "pages": "648",
            "volume": "2017"
        },
        "citationStyles": {
            "bibtex": "@Article{Nikitin2017CHAINIACPS,\n author = {K. Nikitin and Eleftherios Kokoris-Kogias and Philipp Jovanovic and Nicolas Gailly and Linus Gasser and Ismail Khoffi and Justin Cappos and B. Ford},\n booktitle = {USENIX Security Symposium},\n journal = {IACR Cryptol. ePrint Arch.},\n pages = {648},\n title = {CHAINIAC: Proactive Software-Update Transparency via Collectively Signed Skipchains and Verified Builds},\n volume = {2017},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2089340344",
                "name": "K. Nikitin"
            },
            {
                "authorId": "1380250572",
                "name": "Eleftherios Kokoris-Kogias"
            },
            {
                "authorId": "31329226",
                "name": "Philipp Jovanovic"
            },
            {
                "authorId": "3370481",
                "name": "Nicolas Gailly"
            },
            {
                "authorId": "20492140",
                "name": "Linus Gasser"
            },
            {
                "authorId": "3381036",
                "name": "Ismail Khoffi"
            },
            {
                "authorId": "2030168",
                "name": "Justin Cappos"
            },
            {
                "authorId": "144067653",
                "name": "B. Ford"
            }
        ]
    },
    {
        "paperId": "e9b32a3afcb5332bd53864ebdacdd82bce933c8a",
        "externalIds": {
            "MAG": "2753677850",
            "DBLP": "conf/uss/ZhaoDXG17",
            "CorpusId": 28395740
        },
        "corpusId": 28395740,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/e9b32a3afcb5332bd53864ebdacdd82bce933c8a",
        "title": "Seeing Through The Same Lens: Introspecting Guest Address Space At Native Speed",
        "abstract": "Software-based MMU emulation lies at the heart of outof-VM live memory introspection, an important technique in the cloud setting that applications such as live forensics and intrusion detection depend on. Due to the emulation, the software-based approach is much slower compared to nativememory accessby theguest VM. The slowness not only results in undetected transient malicious behavior, but also inconsistent memory view with theguest; both undermine theeffectivenessof introspection. We propose the immersive execution environment (ImEE) with which the guest memory is accessed at native speed without any emulation. Meanwhile, the address mappings used within the ImEE are ensured to be consistent with the guest throughout the introspection session. We have implemented a prototype of the ImEE on Linux KVM. The experiment results show that ImEE-based introspection enjoysaremarkablespeed up, performing several hundred times faster than the legacy method. Hence, this design is especially useful for realtimemonitoring, incident responseand high-intensity introspection.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 29,
        "citationCount": 12,
        "influentialCitationCount": 0,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "799-813"
        },
        "citationStyles": {
            "bibtex": "@Article{Zhao2017SeeingTT,\n author = {Siqi Zhao and Xuhua Ding and Wen Xu and Dawu Gu},\n booktitle = {USENIX Security Symposium},\n pages = {799-813},\n title = {Seeing Through The Same Lens: Introspecting Guest Address Space At Native Speed},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2111005310",
                "name": "Siqi Zhao"
            },
            {
                "authorId": "40172576",
                "name": "Xuhua Ding"
            },
            {
                "authorId": "2152919753",
                "name": "Wen Xu"
            },
            {
                "authorId": "144316608",
                "name": "Dawu Gu"
            }
        ]
    },
    {
        "paperId": "f23b7ecdd03a48d4ef41fc58af008a164010f692",
        "externalIds": {
            "DBLP": "conf/uss/PiotrowskaHEMD17",
            "ArXiv": "1703.00536",
            "MAG": "2949823048",
            "CorpusId": 17509211
        },
        "corpusId": 17509211,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/f23b7ecdd03a48d4ef41fc58af008a164010f692",
        "title": "The Loopix Anonymity System",
        "abstract": "We present Loopix, a low-latency anonymous communication system that provides bi-directional 'third-party' sender and receiver anonymity and unobservability. Loopix leverages cover traffic and Poisson mixing--brief independent message delays--to provide anonymity and to achieve traffic analysis resistance against, including but not limited to, a global network adversary. Mixes and clients self-monitor and protect against active attacks via self-injected loops of traffic. The traffic loops also serve as cover traffic to provide stronger anonymity and a measure of sender and receiver unobservability. Loopix is instantiated as a network of Poisson mix nodes in a stratified topology with a low number of links, which serve to further concentrate cover traffic. Service providers mediate access in and out of the network to facilitate accounting and off-line message reception. \n \nWe provide a theoretical analysis of the Poisson mixing strategy as well as an empirical evaluation of the anonymity provided by the protocol and a functional implementation that we analyze in terms of scalability by running it on AWS EC2. We show that mix nodes in Loopix can handle upwards of 300 messages per second, at a small delay overhead of less than 1.5ms on top of the delays introduced into messages to provide security. Overall message latency is on the order of seconds - which is relatively low for a mix-system. Furthermore, many mix nodes can be securely added to the stratified topology to scale throughput without sacrificing anonymity.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 53,
        "citationCount": 154,
        "influentialCitationCount": 22,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-03-01",
        "journal": {
            "name": "ArXiv",
            "volume": "abs/1703.00536"
        },
        "citationStyles": {
            "bibtex": "@Article{Piotrowska2017TheLA,\n author = {Ania M. Piotrowska and Jamie Hayes and T. Elahi and Sebastian Meiser and G. Danezis},\n booktitle = {USENIX Security Symposium},\n journal = {ArXiv},\n title = {The Loopix Anonymity System},\n volume = {abs/1703.00536},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "153222554",
                "name": "Ania M. Piotrowska"
            },
            {
                "authorId": "9200194",
                "name": "Jamie Hayes"
            },
            {
                "authorId": "2125761",
                "name": "T. Elahi"
            },
            {
                "authorId": "1752829",
                "name": "Sebastian Meiser"
            },
            {
                "authorId": "1722262",
                "name": "G. Danezis"
            }
        ]
    },
    {
        "paperId": "f516d982f54188889cbd7a9128ab60c4a7cc4bf5",
        "externalIds": {
            "DBLP": "conf/uss/Sanchez-RolaSB17",
            "MAG": "2750799145",
            "CorpusId": 11102865
        },
        "corpusId": 11102865,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/f516d982f54188889cbd7a9128ab60c4a7cc4bf5",
        "title": "Extension Breakdown: Security Analysis of Browsers Extension Resources Control Policies",
        "abstract": "All major web browsers support browser extensions to add new features and extend their functionalities. Nevertheless, browser extensions have been the target of several attacks due to their tight relation with the browser environment. As a consequence, extensions have been abused in the past for malicious tasks such as private information gathering, browsing history retrieval, or passwords theft \u2014 leading to a number of severe targeted attacks. Even though no protection techniques existed in the past to secure extensions, all browsers now implement defensive countermeasures that, in theory, protect extensions and their resources from third party access. In this paper, we present two attacks that bypass these control techniques in every major browser family, enabling enumeration attacks against the list of installed extensions. In particular, we present a timing side-channel attack against the access control settings and an attack that takes advantage of poor programming practice, affecting a large number of Safari extensions. Due to the harmful nature of our findings, we also discuss possible countermeasures against our own attacks and reported our findings and countermeasures to the different actors involved. We believe that our study can help secure current implementations and help developers to avoid similar attacks in the future.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 27,
        "citationCount": 61,
        "influentialCitationCount": 6,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "679-694"
        },
        "citationStyles": {
            "bibtex": "@Article{S\u00e1nchez-Rola2017ExtensionBS,\n author = {Iskander S\u00e1nchez-Rola and Igor Santos and D. Balzarotti},\n booktitle = {USENIX Security Symposium},\n pages = {679-694},\n title = {Extension Breakdown: Security Analysis of Browsers Extension Resources Control Policies},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "1411264979",
                "name": "Iskander S\u00e1nchez-Rola"
            },
            {
                "authorId": "145030657",
                "name": "Igor Santos"
            },
            {
                "authorId": "1706558",
                "name": "D. Balzarotti"
            }
        ]
    },
    {
        "paperId": "f8844f2065931290520c9044d0ee2c9ef6381079",
        "externalIds": {
            "DBLP": "conf/uss/PetraccaASGJ17",
            "MAG": "2752660817",
            "CorpusId": 3718537
        },
        "corpusId": 3718537,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/f8844f2065931290520c9044d0ee2c9ef6381079",
        "title": "AWare: Preventing Abuse of Privacy-Sensitive Sensors via Operation Bindings",
        "abstract": "System designers have long struggled with the challenge of determining how to control when untrusted applications may perform operations using privacy-sensitive sensors securely and effectively. Current systems request that users authorize such operations once (i.e., on install or first use), but malicious applications may abuse such authorizations to collect data stealthily using such sensors. Proposed research methods enable systems to infer the operations associated with user input events, but malicious applications may still trick users into allowing unexpected, stealthy operations. To prevent users from being tricked, we propose to bind applications\u2019 operation requests to the associated user input events and how they were obtained explicitly, enabling users to authorize operations on privacy-sensitive sensors unambiguously and reuse such authorizations. To demonstrate this approach, we implement the AWare authorization framework for Android, extending the Android Middleware to control access to privacy-sensitive sensors. We evaluate the effectiveness of AWare in: (1) a laboratory-based user study, finding that at most 7% of the users were tricked by examples of four types of attacks when using AWare, instead of 85% on average for prior approaches; (2) a field study, showing that the user authorization effort increases by only 2.28 decisions on average per application; (3) a compatibility study with 1,000 of the most-downloaded Android applications, demonstrating that such applications can operate effectively under AWare.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 39,
        "citationCount": 34,
        "influentialCitationCount": 1,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": null,
        "journal": {
            "pages": "379-396"
        },
        "citationStyles": {
            "bibtex": "@Article{Petracca2017AWarePA,\n author = {Giuseppe Petracca and Ahmad Atamli-Reineh and Yuqiong Sun and Jens Grossklags and T. Jaeger},\n booktitle = {USENIX Security Symposium},\n pages = {379-396},\n title = {AWare: Preventing Abuse of Privacy-Sensitive Sensors via Operation Bindings},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "39411062",
                "name": "Giuseppe Petracca"
            },
            {
                "authorId": "1403977030",
                "name": "Ahmad Atamli-Reineh"
            },
            {
                "authorId": "1811691",
                "name": "Yuqiong Sun"
            },
            {
                "authorId": "1718732",
                "name": "Jens Grossklags"
            },
            {
                "authorId": "145971553",
                "name": "T. Jaeger"
            }
        ]
    },
    {
        "paperId": "fa49d089a20f99de8985924dffe404942513ef51",
        "externalIds": {
            "MAG": "2753931741",
            "DBLP": "conf/uss/McCannOW17",
            "CorpusId": 23546972
        },
        "corpusId": 23546972,
        "publicationVenue": {
            "id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
            "name": "USENIX Security Symposium",
            "type": "conference",
            "alternate_names": [
                "USENIX Secur Symp"
            ],
            "url": "http://www.usenix.org/events/bytopic/security.html"
        },
        "url": "https://www.semanticscholar.org/paper/fa49d089a20f99de8985924dffe404942513ef51",
        "title": "Towards Practical Tools for Side Channel Aware Software Engineering: 'Grey Box' Modelling for Instruction Leakages",
        "abstract": "Power (along with EM, cache and timing) leaks are of considerable concern for developers who have to deal with cryptographic components as part of their over-all software implementation, in particular in the context of embedded devices. Whilst there exist some compiler tools to detect timing leaks, similar progress towards pinpointing power and EM leaks has been hampered by limits on the amount of information available about the physical components from which such leaks originate. We suggest a novel modelling technique capable of producing high-quality instruction-level power (and/or EM) models without requiring a detailed hardware description of a processor nor information about the used process technology (access to both of which is typically restricted). We show that our methodology is e\ufb00ective at capturing di\ufb00erential data-dependent e\ufb00ects as neighbouring instructions in a sequence vary. We also explore register e\ufb00ects, and verify our models across several measurement boards to comment on board e\ufb00ects and portability. We con\ufb01rm its versatility by demonstrating the basic technique on two processors (the ARM Cortex-M0 and M4), and use the M0 models to develop ELMO, the \ufb01rst leakage simulator for the ARM Cortex M0.",
        "venue": "USENIX Security Symposium",
        "year": 2017,
        "referenceCount": 30,
        "citationCount": 83,
        "influentialCitationCount": 14,
        "isOpenAccess": false,
        "openAccessPdf": null,
        "fieldsOfStudy": [
            "Computer Science"
        ],
        "s2FieldsOfStudy": [
            {
                "category": "Computer Science",
                "source": "external"
            },
            {
                "category": "Computer Science",
                "source": "s2-fos-model"
            },
            {
                "category": "Engineering",
                "source": "s2-fos-model"
            }
        ],
        "publicationTypes": [
            "JournalArticle"
        ],
        "publicationDate": "2017-08-01",
        "journal": {
            "pages": "199-216"
        },
        "citationStyles": {
            "bibtex": "@Article{McCann2017TowardsPT,\n author = {D. McCann and E. Oswald and C. Whitnall},\n booktitle = {USENIX Security Symposium},\n pages = {199-216},\n title = {Towards Practical Tools for Side Channel Aware Software Engineering: 'Grey Box' Modelling for Instruction Leakages},\n year = {2017}\n}\n"
        },
        "authors": [
            {
                "authorId": "2073319825",
                "name": "D. McCann"
            },
            {
                "authorId": "145944405",
                "name": "E. Oswald"
            },
            {
                "authorId": "2325793",
                "name": "C. Whitnall"
            }
        ]
    }
]