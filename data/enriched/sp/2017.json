[
    {
        "@score": "1",
        "@id": "3505161",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "b/MichaelBackes1",
                        "text": "Michael Backes 0001"
                    },
                    {
                        "@pid": "124/6255",
                        "text": "Pascal Berrang"
                    },
                    {
                        "@pid": "201/9246",
                        "text": "Matthias Bieg"
                    },
                    {
                        "@pid": "63/1724",
                        "text": "Roland Eils"
                    },
                    {
                        "@pid": "70/2853",
                        "text": "Carl Herrmann"
                    },
                    {
                        "@pid": "83/8816",
                        "text": "Mathias Humbert"
                    },
                    {
                        "@pid": "201/9215",
                        "text": "Irina Lehmann"
                    }
                ]
            },
            "title": "Identifying Personal DNA Methylation Profiles by Genotype Inference.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "957-976",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/0001BBEHHL17",
            "doi": "10.1109/SP.2017.21",
            "ee": "https://doi.org/10.1109/SP.2017.21",
            "url": "https://dblp.org/rec/conf/sp/0001BBEHHL17",
            "abstract": "Since the first whole-genome sequencing, the biomedical research community has made significant steps towards a more precise, predictive and personalized medicine. Genomic data is nowadays widely considered privacy-sensitive and consequently protected by strict regulations and released only after careful consideration. Various additional types of biomedical data, however, are not shielded by any dedicated legal means and consequently disseminated much less thoughtfully. This in particular holds true for DNA methylation data as one of the most important and well-understood epigenetic element influencing human health. In this paper, we show that, in contrast to the aforementioned belief, releasing one's DNA methylation data causes privacy issues akin to releasing one's actual genome. We show that already a small subset of methylation regions influenced by genomic variants are sufficient to infer parts of someone's genome, and to further map this DNA methylation profile to the corresponding genome. Notably, we show that such re-identification is possible with 97.5% accuracy, relying on a dataset of more than 2500 genomes, and that we can reject all wrongly matched genomes using an appropriate statistical test. We provide means for countering this threat by proposing a novel cryptographic scheme for privately classifying tumors that enables a privacy-respecting medical diagnosis in a common clinical setting. The scheme relies on a combination of random forests and homomorphic encryption, and it is proven secure in the honest-but-curious model. We evaluate this scheme on real DNA methylation data, and show that we can keep the computational overhead to acceptable values for our application scenario.",
            "keywords": [
                "DNA Methylation",
                "Genotype Inference",
                "Privacy Issues",
                "Re-identification",
                "Cryptographic Scheme"
            ]
        },
        "url": "URL#3505161",
        "sema_paperId": "63571f6e747461659c21d655dcd5149d6464c06d"
    },
    {
        "@score": "1",
        "@id": "3505164",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "163/8698",
                        "text": "Ruba Abu-Salma"
                    },
                    {
                        "@pid": "s/MASasse",
                        "text": "M. Angela Sasse"
                    },
                    {
                        "@pid": "27/3087",
                        "text": "Joseph Bonneau"
                    },
                    {
                        "@pid": "201/9268",
                        "text": "Anastasia Danilova"
                    },
                    {
                        "@pid": "201/9227",
                        "text": "Alena Naiakshina"
                    },
                    {
                        "@pid": "88/5808-1",
                        "text": "Matthew Smith 0001"
                    }
                ]
            },
            "title": "Obstacles to the Adoption of Secure Communication Tools.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "137-153",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/Abu-SalmaSBDN017",
            "doi": "10.1109/SP.2017.65",
            "ee": "https://doi.org/10.1109/SP.2017.65",
            "url": "https://dblp.org/rec/conf/sp/Abu-SalmaSBDN017",
            "abstract": "The computer security community has advocated widespread adoption of secure communication tools to counter mass surveillance. Several popular personal communication tools (e.g., WhatsApp, iMessage) have adopted end-to-end encryption, and many new tools (e.g., Signal, Telegram) have been launched with security as a key selling point. However it remains unclear if users understand what protection these tools offer, and if they value that protection. In this study, we interviewed 60 participants about their experience with different communication tools and their perceptions of the tools' security properties. We found that the adoption of secure communication tools is hindered by fragmented user bases and incompatible tools. Furthermore, the vast majority of participants did not understand the essential concept of end-to-end encryption, limiting their motivation to adopt secure tools. We identified a number of incorrect mental models that underpinned participants' beliefs.",
            "keywords": [
                "Secure Communication Tools",
                "End-to-End Encryption",
                "User Adoption",
                "Mental Models",
                "Mass Surveillance"
            ]
        },
        "url": "URL#3505164",
        "sema_paperId": "7e45c1e5f86f2623aeef2eb3e62dcf207eb92790"
    },
    {
        "@score": "1",
        "@id": "3505165",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "132/9687",
                        "text": "Yasemin Acar"
                    },
                    {
                        "@pid": "b/MichaelBackes1",
                        "text": "Michael Backes 0001"
                    },
                    {
                        "@pid": "38/9378",
                        "text": "Sascha Fahl"
                    },
                    {
                        "@pid": "70/2101",
                        "text": "Simson L. Garfinkel"
                    },
                    {
                        "@pid": "133/4707",
                        "text": "Doowon Kim"
                    },
                    {
                        "@pid": "20/7983",
                        "text": "Michelle L. Mazurek"
                    },
                    {
                        "@pid": "184/6096",
                        "text": "Christian Stransky"
                    }
                ]
            },
            "title": "Comparing the Usability of Cryptographic APIs.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "154-171",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/Acar0FGKMS17",
            "doi": "10.1109/SP.2017.52",
            "ee": "https://doi.org/10.1109/SP.2017.52",
            "url": "https://dblp.org/rec/conf/sp/Acar0FGKMS17",
            "abstract": "Potentially dangerous cryptography errors are well-documented in many applications. Conventional wisdom suggests that many of these errors are caused by cryptographic Application Programming Interfaces (APIs) that are too complicated, have insecure defaults, or are poorly documented. To address this problem, researchers have created several cryptographic libraries that they claim are more usable, however, none of these libraries have been empirically evaluated for their ability to promote more secure development. This paper is the first to examine both how and why the design and resulting usability of different cryptographic libraries affects the security of code written with them, with the goal of understanding how to build effective future libraries. We conducted a controlled experiment in which 256 Python developers recruited from GitHub attempt common tasks involving symmetric and asymmetric cryptography using one of five different APIs. We examine their resulting code for functional correctness and security, and compare their results to their self-reported sentiment about their assigned library. Our results suggest that while APIs designed for simplicity can provide security benefits \u2013 reducing the decision space, as expected, prevents choice of insecure parameters \u2013 simplicity is not enough. Poor documentation, missing code examples, and a lack of auxiliary features such as secure key storage, caused even participants assigned to simplified libraries to struggle with both basic functional correctness and security. Surprisingly, the availability of comprehensive documentation and easy-to-use code examples seems to compensate for more complicated APIs in terms of functionally correct results and participant reactions, however, this did not extend to security results. We find it particularly concerning that for about 20% of functionally correct tasks, across libraries, participants believed their code was secure when it was not. Our results suggest that while new cryptographic libraries that want to promote effective security should offer a simple, convenient interface, this is not enough: they should also, and perhaps more importantly, ensure support for a broad range of common tasks and provide accessible documentation with secure, easy-to-use code examples.",
            "keywords": [
                "Cryptographic APIs",
                "Usability",
                "Security Errors",
                "Documentation",
                "Code Examples"
            ]
        },
        "url": "URL#3505165",
        "sema_paperId": "8feb09cc758a2bb79f20bd5dc67f027951eefabe"
    },
    {
        "@score": "1",
        "@id": "3505167",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "123/3274",
                        "text": "Sumayah A. Alrwais"
                    },
                    {
                        "@pid": "129/1113",
                        "text": "Xiaojing Liao"
                    },
                    {
                        "@pid": "192/2270",
                        "text": "Xianghang Mi"
                    },
                    {
                        "@pid": "95/4442-88",
                        "text": "Peng Wang 0088"
                    },
                    {
                        "@pid": "06/6268",
                        "text": "Xiaofeng Wang 0006"
                    },
                    {
                        "@pid": "54/476-1",
                        "text": "Feng Qian 0001"
                    },
                    {
                        "@pid": "12/6354",
                        "text": "Raheem A. Beyah"
                    },
                    {
                        "@pid": "58/4016",
                        "text": "Damon McCoy"
                    }
                ]
            },
            "title": "Under the Shadow of Sunshine: Understanding and Detecting Bulletproof Hosting on Legitimate Service Provider Networks.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "805-823",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/AlrwaisLMWWQBM17",
            "doi": "10.1109/SP.2017.32",
            "ee": "https://doi.org/10.1109/SP.2017.32",
            "url": "https://dblp.org/rec/conf/sp/AlrwaisLMWWQBM17",
            "abstract": "BulletProof Hosting (BPH) services provide criminal actors with technical infrastructure that is resilient to complaints of illicit activities, which serves as a basic building block for streamlining numerous types of attacks. Anecdotal reports have highlighted an emerging trend of these BPH services reselling infrastructure from lower end service providers (hosting ISPs, cloud hosting, and CDNs) instead of from monolithic BPH providers. This has rendered many of the prior methods of detecting BPH less effective, since instead of the infrastructure being highly concentrated within a few malicious Autonomous Systems (ASes) it is now agile and dispersed across a larger set of providers that have a mixture of benign and malicious clients. In this paper, we present the first systematic study on this new trend of BPH services. By collecting and analyzing a large amount of data (25 snapshots of the entire Whois IPv4 address space, 1.5 TB of passive DNS data, and longitudinal data from several blacklist feeds), we are able to identify a set of new features that uniquely characterizes BPH on sub-allocations and that are costly to evade. Based upon these features, we train a classifier for detecting malicious sub-allocated network blocks, achieving a 98% recall and 1.5% false discovery rates according to our evaluation. Using a conservatively trained version of our classifier, we scan the whole IPv4 address space and detect 39K malicious network blocks. This allows us to perform a large-scale study of the BPH service ecosystem, which sheds light on this underground business strategy, including patterns of network blocks being recycled and malicious clients being migrated to different network blocks, in an effort to evade IP address based blacklisting. Our study highlights the trend of agile BPH services and points to potential methods of detecting and mitigating this emerging threat.",
            "keywords": [
                "Bulletproof Hosting",
                "Malicious Infrastructure",
                "Network Block Detection",
                "IP Address Blacklisting",
                "Cybercrime Mitigation"
            ]
        },
        "url": "URL#3505167",
        "sema_paperId": "24943ddc3799563fed75d0d45b675a8eaf1b9a33"
    },
    {
        "@score": "1",
        "@id": "3505169",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "180/5502",
                        "text": "Maria Apostolaki"
                    },
                    {
                        "@pid": "92/4269",
                        "text": "Aviv Zohar"
                    },
                    {
                        "@pid": "51/7546",
                        "text": "Laurent Vanbever"
                    }
                ]
            },
            "title": "Hijacking Bitcoin: Routing Attacks on Cryptocurrencies.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "375-392",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/ApostolakiZV17",
            "doi": "10.1109/SP.2017.29",
            "ee": "https://doi.org/10.1109/SP.2017.29",
            "url": "https://dblp.org/rec/conf/sp/ApostolakiZV17",
            "abstract": "As the most successful cryptocurrency to date, Bitcoin constitutes a target of choice for attackers. While many attack vectors have already been uncovered, one important vector has been left out though: attacking the currency via the Internet routing infrastructure itself. Indeed, by manipulating routing advertisements (BGP hijacks) or by naturally intercepting traffic, Autonomous Systems (ASes) can intercept and manipulate a large fraction of Bitcoin traffic.This paper presents the first taxonomy of routing attacks and their impact on Bitcoin, considering both small-scale attacks, targeting individual nodes, and large-scale attacks, targeting the network as a whole. While challenging, we show that two key properties make routing attacks practical: (i) the efficiency of routing manipulation; and (ii) the significant centralization of Bitcoin in terms of mining and routing. Specifically, we find that any network attacker can hijack few (<100) BGP prefixes to isolate \u223c50% of the mining power\u2014even when considering that mining pools are heavily multi-homed. We also show that on-path network attackers can considerably slow down block propagation by interfering with few key Bitcoin messages.We demonstrate the feasibility of each attack against the deployed Bitcoin software. We also quantify their effectiveness on the current Bitcoin topology using data collected from a Bitcoin supernode combined with BGP routing data. The potential damage to Bitcoin is worrying. By isolating parts of the network or delaying block propagation, attackers can cause a significant amount of mining power to be wasted, leading to revenue losses and enabling a wide range of exploits such as double spending. To prevent such effects in practice, we provide both short and long-term countermeasures, some of which can be deployed immediately.",
            "keywords": [
                "Bitcoin",
                "Routing Attacks",
                "BGP Hijacking",
                "Mining Centralization",
                "Block Propagation Delay"
            ]
        },
        "url": "URL#3505169",
        "sema_paperId": "07db4d7b141081644b9cbb3e6d1f34c1bc80db24"
    },
    {
        "@score": "1",
        "@id": "3505170",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "71/5678",
                        "text": "Toshinori Araki"
                    },
                    {
                        "@pid": "201/9244",
                        "text": "Assi Barak"
                    },
                    {
                        "@pid": "74/3729",
                        "text": "Jun Furukawa 0001"
                    },
                    {
                        "@pid": "201/9223",
                        "text": "Tamar Lichter"
                    },
                    {
                        "@pid": "l/YehudaLindell",
                        "text": "Yehuda Lindell"
                    },
                    {
                        "@pid": "167/3062",
                        "text": "Ariel Nof"
                    },
                    {
                        "@pid": "130/3617",
                        "text": "Kazuma Ohara"
                    },
                    {
                        "@pid": "201/9238",
                        "text": "Adi Watzman"
                    },
                    {
                        "@pid": "187/5510",
                        "text": "Or Weinstein"
                    }
                ]
            },
            "title": "Optimized Honest-Majority MPC for Malicious Adversaries - Breaking the 1 Billion-Gate Per Second Barrier.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "843-862",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/ArakiBFLLNOWW17",
            "doi": "10.1109/SP.2017.15",
            "ee": "https://doi.org/10.1109/SP.2017.15",
            "url": "https://dblp.org/rec/conf/sp/ArakiBFLLNOWW17",
            "abstract": "Secure multiparty computation enables a set of parties to securely carry out a joint computation of their private inputs without revealing anything but the output. In the past few years, the efficiency of secure computation protocols has increased in leaps and bounds. However, when considering the case of security in the presence of malicious adversaries (who may arbitrarily deviate from the protocol specification), we are still very far from achieving high efficiency. In this paper, we consider the specific case of three parties and an honest majority. We provide general techniques for improving efficiency of cut-and-choose protocols on multiplication triples and utilize them to significantly improve the recently published protocol of Furukawa et al. (ePrint 2016/944). We reduce the bandwidth of their protocol down from 10 bits per AND gate to 7 bits per AND gate, and show how to improve some computationally expensive parts of their protocol. Most notably, we design cache-efficient shuffling techniques for implementing cut-and-choose without randomly permuting large arrays (which is very slow due to continual cache misses). We provide a combinatorial analysis of our techniques, bounding the cheating probability of the adversary. Our implementation achieves a rate of approximately 1.15 billion AND gates per second on a cluster of three 20-core machines with a 10Gbps network. Thus, we can securely compute 212,000 AES encryptions per second (which is hundreds of times faster than previous work for this setting). Our results demonstrate that high-throughput secure computation for malicious adversaries is possible.",
            "keywords": [
                "Secure Multiparty Computation",
                "Malicious Adversaries",
                "Cut-and-Choose Protocols",
                "Efficiency Improvement",
                "High-Throughput Computation"
            ]
        },
        "url": "URL#3505170",
        "sema_paperId": "4a77fe1e0f42d44339bf0f690deddab56ce0aa7c"
    },
    {
        "@score": "1",
        "@id": "3505171",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "150/5198",
                        "text": "Tiffany Bao"
                    },
                    {
                        "@pid": "127/9829",
                        "text": "Ruoyu Wang 0001"
                    },
                    {
                        "@pid": "119/7712",
                        "text": "Yan Shoshitaishvili"
                    },
                    {
                        "@pid": "40/2434",
                        "text": "David Brumley"
                    }
                ]
            },
            "title": "Your Exploit is Mine: Automatic Shellcode Transplant for Remote Exploits.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "824-839",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/BaoWSB17",
            "doi": "10.1109/SP.2017.67",
            "ee": "https://doi.org/10.1109/SP.2017.67",
            "url": "https://dblp.org/rec/conf/sp/BaoWSB17",
            "abstract": "Developing a remote exploit is not easy. It requires a comprehensive understanding of a vulnerability and delicate techniques to bypass defense mechanisms. As a result, attackers may prefer to reuse an existing exploit and make necessary changes over developing a new exploit from scratch. One such adaptation is the replacement of the original shellcode (i.e., the attacker-injected code that is executed as the final step of the exploit) in the original exploit with a replacement shellcode, resulting in a modified exploit that carries out the actions desired by the attacker as opposed to the original exploit author. We call this a shellcode transplant. Current automated shellcode placement methods are insufficient because they over-constrain the replacement shellcode, and so cannot be used to achieve shellcode transplant. For example, these systems consider the shellcode as an integrated memory chunk and require that the execution path of the modified exploit must be same as the original one. To resolve these issues, we present ShellSwap, a system that uses symbolic tracing, with a combination of shellcode layout remediation and path kneading to achieve shellcode transplant. We evaluated the ShellSwap system on a combination of 20 exploits and 5 pieces of shellcode that are independently developed and different from the original exploit. Among the 100 test cases, our system successfully generated 88% of the exploits.",
            "keywords": [
                "Remote Exploits",
                "Shellcode Transplant",
                "Exploit Adaptation",
                "Symbolic Tracing",
                "Shellcode Placement"
            ]
        },
        "url": "URL#3505171",
        "sema_paperId": "0aa9b26b407a36ed62d19c8c1c1c6a26d75991af"
    },
    {
        "@score": "1",
        "@id": "3505172",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "b/SebastienBardin",
                        "text": "S\u00e9bastien Bardin"
                    },
                    {
                        "@pid": "162/3665",
                        "text": "Robin David"
                    },
                    {
                        "@pid": "m/JeanYvesMarion",
                        "text": "Jean-Yves Marion"
                    }
                ]
            },
            "title": "Backward-Bounded DSE: Targeting Infeasibility Questions on Obfuscated Codes.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "633-651",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/BardinDM17",
            "doi": "10.1109/SP.2017.36",
            "ee": "https://doi.org/10.1109/SP.2017.36",
            "url": "https://dblp.org/rec/conf/sp/BardinDM17",
            "abstract": "Software deobfuscation is a crucial activity in security analysis and especially in malware analysis. While standard static and dynamic approaches suffer from well-known shortcomings, Dynamic Symbolic Execution (DSE) has recently been proposed as an interesting alternative, more robust than staticanalysis and more complete than dynamic analysis. Yet, DSE addresses only certain kinds of questions encountered by a reverser, namely feasibility questions. Many issues arising during reverse, e.g., detecting protection schemes such as opaque predicates, fall into the category of infeasibility questions. We present Backward-Bounded DSE, a generic, precise, efficient and robust method for solving infeasibility questions. We demonstrate the benefit of the method for opaque predicates and call stack tampering, and give some insight for its usage for some other protection schemes. Especially, the technique has successfully been used on state-of-the-art packers as well as on the government-grade X-Tunnel malware \u2013 allowing its entire deobfuscation. Backward-Bounded DSE does not supersede existing DSE approaches, but rather complements them by addressing infeasibility questions in a scalable and precise manner. Following this line, we proposesparse disassembly, a combination of Backward-Bounded DSE and static disassembly able to enlarge dynamic disassembly in a guaranteed way, hence getting the best of dynamic and static disassembly. This work paves the way for robust, efficient and precise disassembly tools for heavily-obfuscated binaries.",
            "keywords": [
                "Software Deobfuscation",
                "Dynamic Symbolic Execution",
                "Infeasibility Questions",
                "Opaque Predicates",
                "Backward-Bounded DSE"
            ]
        },
        "url": "URL#3505172",
        "sema_paperId": "7da217e3ee004cbbfa87ca2b85c1b43bfa5230ac"
    },
    {
        "@score": "1",
        "@id": "3505174",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "95/8429",
                        "text": "Thomas Bauerei\u00df"
                    },
                    {
                        "@pid": "142/3160",
                        "text": "Armando Pesenti Gritti"
                    },
                    {
                        "@pid": "89/2346-1",
                        "text": "Andrei Popescu 0001"
                    },
                    {
                        "@pid": "58/461",
                        "text": "Franco Raimondi"
                    }
                ]
            },
            "title": "CoSMeDis: A Distributed Social Media Platform with Formally Verified Confidentiality Guarantees.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "729-748",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/BauereissG0R17",
            "doi": "10.1109/SP.2017.24",
            "ee": "https://doi.org/10.1109/SP.2017.24",
            "url": "https://dblp.org/rec/conf/sp/BauereissG0R17",
            "abstract": "We present the design, implementation and information flow verification of CoSMeDis, a distributed social media platform. The system consists of an arbitrary number of communicating nodes, deployable at different locations over the Internet. Its registered users can post content and establish intra-node and inter-node friendships, used to regulate access control over the posts. The system's kernel has been verified in the proof assistant Isabelle/HOL and automatically extracted as Scala code. We formalized a framework for composing a class of information flow security guarantees in a distributed system, applicable to input/output automata. We instantiated this framework to confidentiality properties for CoSMeDis's sources of information: posts, friendship requests, and friendship status.",
            "keywords": [
                "Distributed Social Media",
                "Information Flow Security",
                "Confidentiality Guarantees",
                "Access Control",
                "Formal Verification"
            ]
        },
        "url": "URL#3505174",
        "sema_paperId": "8550d97e7260f20866bf208639e75a15e5746cb8"
    },
    {
        "@score": "1",
        "@id": "3505175",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "80/3503",
                        "text": "Karthikeyan Bhargavan"
                    },
                    {
                        "@pid": "b/BrunoBlanchet",
                        "text": "Bruno Blanchet"
                    },
                    {
                        "@pid": "131/6696",
                        "text": "Nadim Kobeissi"
                    }
                ]
            },
            "title": "Verified Models and Reference Implementations for the TLS 1.3 Standard Candidate.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "483-502",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/BhargavanBK17",
            "doi": "10.1109/SP.2017.26",
            "ee": "https://doi.org/10.1109/SP.2017.26",
            "url": "https://dblp.org/rec/conf/sp/BhargavanBK17",
            "abstract": "TLS 1.3 is the next version of the Transport Layer Security (TLS) protocol. Its clean-slate design is a reaction both to the increasing demand for low-latency HTTPS connections and to a series of recent high-profile attacks on TLS. The hope is that a fresh protocol with modern cryptography will prevent legacy problems, the danger is that it will expose new kinds of attacks, or reintroduce old flaws that were fixed in previous versions of TLS. After 18 drafts, the protocol is nearing completion, and the working group has appealed to researchers to analyze the protocol before publication. This paper responds by presenting a comprehensive analysis of the TLS 1.3 Draft-18 protocol. We seek to answer three questions that have not been fully addressed in previous work on TLS 1.3: (1) Does TLS 1.3 prevent well-known attacks on TLS 1.2, such as Logjam or the Triple Handshake, even if it is run in parallel with TLS 1.2? (2) Can we mechanically verify the computational security of TLS 1.3 under standard (strong) assumptions on its cryptographic primitives? (3) How can we extend the guarantees of the TLS 1.3 protocol to the details of its implementations?To answer these questions, we propose a methodology for developing verified symbolic and computational models of TLS 1.3 hand-in-hand with a high-assurance reference implementation of the protocol. We present symbolic ProVerif models for various intermediate versions of TLS 1.3 and evaluate them against a rich class of attacks to reconstruct both known and previously unpublished vulnerabilities that influenced the current design of the protocol. We present a computational CryptoVerif model for TLS 1.3 Draft-18 and prove its security. We present RefTLS, an interoperable implementation of TLS 1.0-1.3 and automatically analyze its protocol core by extracting a ProVerif model from its typed JavaScript code.",
            "keywords": [
                "Transport Layer Security (TLS)",
                "Protocol Verification",
                "Cryptographic Security",
                "TLS 1.3 Implementation",
                "Vulnerability Analysis"
            ]
        },
        "url": "URL#3505175",
        "sema_paperId": "338d4815de02be38990db8cff9f96ef8e6959c80"
    },
    {
        "@score": "1",
        "@id": "3505178",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "177/8590",
                        "text": "Fraser Brown"
                    },
                    {
                        "@pid": "201/9230",
                        "text": "Shravan Narayan"
                    },
                    {
                        "@pid": "150/9448",
                        "text": "Riad S. Wahby"
                    },
                    {
                        "@pid": "e/DREngler",
                        "text": "Dawson R. Engler"
                    },
                    {
                        "@pid": "47/4244",
                        "text": "Ranjit Jhala"
                    },
                    {
                        "@pid": "91/6118",
                        "text": "Deian Stefan"
                    }
                ]
            },
            "title": "Finding and Preventing Bugs in JavaScript Bindings.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "559-578",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/BrownNWEJS17",
            "doi": "10.1109/SP.2017.68",
            "ee": "https://doi.org/10.1109/SP.2017.68",
            "url": "https://dblp.org/rec/conf/sp/BrownNWEJS17",
            "abstract": "JavaScript, like many high-level languages, relies on runtime systemswritten in low-level C and C++. For example, the Node.js runtime systemgives JavaScript code access to the underlying filesystem, networking, and I/O by implementing utility functions in C++. Since C++'s typesystem, memory model, and execution model differ significantly fromJavaScript's, JavaScript code must call these runtime functions viaintermediate binding layer code that translates type, state, and failure between the two languages. Unfortunately, binding code isboth hard to avoid and hard to get right. This paper describes several types of exploitable errors that bindingcode creates, and develops both a suite of easily-to-build static checkersto detect such errors and a backwards-compatible, low-overhead API toprevent them. We show that binding flaws are a serious security problem byusing our checkers to craft 81 proof-of-concept exploits forsecurity flaws in the binding layers of the Node.js and Chrome, runtimesystems that support hundreds of millions of users. As one practical measure of binding bug severity, we were awarded $6,000 in bounties for just two Chrome bug reports.",
            "keywords": [
                "JavaScript Bindings",
                "Runtime Systems",
                "Static Analysis",
                "Exploitable Errors",
                "Security Flaws"
            ]
        },
        "url": "URL#3505178",
        "sema_paperId": "e11c3c6e929673cadad825405889867073ceaad5"
    },
    {
        "@score": "1",
        "@id": "3505180",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "c/JanCamenisch",
                        "text": "Jan Camenisch"
                    },
                    {
                        "@pid": "22/150-2",
                        "text": "Liqun Chen 0002"
                    },
                    {
                        "@pid": "129/9841",
                        "text": "Manu Drijvers"
                    },
                    {
                        "@pid": "63/3592",
                        "text": "Anja Lehmann"
                    },
                    {
                        "@pid": "182/5136",
                        "text": "David Novick"
                    },
                    {
                        "@pid": "166/7758",
                        "text": "Rainer Urian"
                    }
                ]
            },
            "title": "One TPM to Bind Them All: Fixing TPM 2.0 for Provably Secure Anonymous Attestation.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "901-920",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/CamenischCDLNU17",
            "doi": "10.1109/SP.2017.22",
            "ee": "https://doi.org/10.1109/SP.2017.22",
            "url": "https://dblp.org/rec/conf/sp/CamenischCDLNU17",
            "abstract": "The Trusted Platform Module (TPM) is an international standard for a security chip that can be used for the management of cryptographic keys and for remote attestation. The specification of the most recent TPM 2.0 interfaces for direct anonymous attestation unfortunately has a number of severe shortcomings. First of all, they do not allow for security proofs (indeed, the published proofs are incorrect). Second, they provide a Diffie-Hellman oracle w.r.t. the secret key of the TPM, weakening the security and preventing forward anonymity of attestations. Fixes to these problems have been proposed, but they create new issues: they enable a fraudulent TPM to encode information into an attestation signature, which could be used to break anonymity or to leak the secret key. Furthermore, all proposed ways to remove the Diffie-Hellman oracle either strongly limit the functionality of the TPM or would require significant changes to the TPM 2.0 interfaces. In this paper we provide a better specification of the TPM 2.0 interfaces that addresses these problems and requires only minimal changes to the current TPM 2.0 commands. We then show how to use the revised interfaces to build q-SDH-and LRSW-based anonymous attestation schemes, and prove their security. We finally discuss how to obtain other schemes addressing different use cases such as key-binding for U-Prove and e-cash.",
            "keywords": [
                "Trusted Platform Module (TPM)",
                "Anonymous Attestation",
                "Cryptographic Key Management",
                "Security Proofs",
                "Diffie-Hellman Oracle"
            ]
        },
        "url": "URL#3505180",
        "sema_paperId": "93849d79ad162d267affd81533b07e141d6bcce6"
    },
    {
        "@score": "1",
        "@id": "3505181",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "145/1806",
                        "text": "Nicholas Carlini"
                    },
                    {
                        "@pid": "42/5626",
                        "text": "David A. Wagner 0001"
                    }
                ]
            },
            "title": "Towards Evaluating the Robustness of Neural Networks.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "39-57",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/Carlini017",
            "doi": "10.1109/SP.2017.49",
            "ee": "https://doi.org/10.1109/SP.2017.49",
            "url": "https://dblp.org/rec/conf/sp/Carlini017",
            "abstract": "Neural networks provide state-of-the-art results for most machine learning tasks. Unfortunately, neural networks are vulnerable to adversarial examples: given an input x and any target classification t, it is possible to find a new input x' that is similar to x but classified as t. This makes it difficult to apply neural networks in security-critical areas. Defensive distillation is a recently proposed approach that can take an arbitrary neural network, and increase its robustness, reducing the success rate of current attacks' ability to find adversarial examples from 95% to 0.5%.In this paper, we demonstrate that defensive distillation does not significantly increase the robustness of neural networks by introducing three new attack algorithms that are successful on both distilled and undistilled neural networks with 100% probability. Our attacks are tailored to three distance metrics used previously in the literature, and when compared to previous adversarial example generation algorithms, our attacks are often much more effective (and never worse). Furthermore, we propose using high-confidence adversarial examples in a simple transferability test we show can also be used to break defensive distillation. We hope our attacks will be used as a benchmark in future defense attempts to create neural networks that resist adversarial examples.",
            "keywords": [
                "Adversarial Examples",
                "Defensive Distillation",
                "Robustness Evaluation",
                "Attack Algorithms",
                "Transferability Test"
            ]
        },
        "url": "URL#3505181",
        "sema_paperId": "df40ce107a71b770c9d0354b78fdd8989da80d2f"
    },
    {
        "@score": "1",
        "@id": "3505183",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "201/9242",
                        "text": "Sze Yiu Chau"
                    },
                    {
                        "@pid": "53/7986",
                        "text": "Omar Chowdhury"
                    },
                    {
                        "@pid": "31/1431",
                        "text": "Md. Endadul Hoque"
                    },
                    {
                        "@pid": "141/5401",
                        "text": "Huangyi Ge"
                    },
                    {
                        "@pid": "12/3394",
                        "text": "Aniket Kate"
                    },
                    {
                        "@pid": "n/CristinaNitaRotaru",
                        "text": "Cristina Nita-Rotaru"
                    },
                    {
                        "@pid": "l/NinghuiLi",
                        "text": "Ninghui Li"
                    }
                ]
            },
            "title": "SymCerts: Practical Symbolic Execution for Exposing Noncompliance in X.509 Certificate Validation Implementations.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "503-520",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/ChauCHGKNL17",
            "doi": "10.1109/SP.2017.40",
            "ee": "https://doi.org/10.1109/SP.2017.40",
            "url": "https://dblp.org/rec/conf/sp/ChauCHGKNL17",
            "abstract": "The X.509 Public-Key Infrastructure has long been used in the SSL/TLS protocol to achieve authentication. A recent trend of Internet-of-Things (IoT) systems employing small footprint SSL/TLS libraries for secure communication has further propelled its prominence. The security guarantees provided by X.509 hinge on the assumption that the underlying implementation rigorously scrutinizes X.509 certificate chains, and accepts only the valid ones. Noncompliant implementations of X.509 can potentially lead to attacks and/or interoperability issues. In the literature, black-box fuzzing has been used to find flaws in X.509 validation implementations, fuzzing, however, cannot guarantee coverage and thus severe flaws may remain undetected. To thoroughly analyze X.509 implementations in small footprint SSL/TLS libraries, this paper takes the complementary approach of using symbolic execution. We observe that symbolic execution, a technique proven to be effective in finding software implementation flaws, can also be leveraged to expose noncompliance in X.509 implementations. Directly applying an off-the-shelf symbolic execution engine on SSL/TLS libraries is, however, not practical due to the problem of path explosion. To this end, we propose the use of SymCerts, which are X.509 certificate chains carefully constructed with a mixture of symbolic and concrete values. Utilizing SymCerts and some domain-specific optimizations, we symbolically execute the certificate chain validation code of each library and extract path constraints describing its accepting and rejecting certificate universes. These path constraints help us identify missing checks in different libraries. For exposing subtle but intricate noncompliance with X.509 standard, we cross-validate the constraints extracted from different libraries to find further implementation flaws. Our analysis of 9 small footprint X.509 implementations has uncovered 48 instances of noncompliance. Findings and suggestions provided by us have already been incorporated by developers into newer versions of their libraries.",
            "keywords": [
                "X.509 Certificate Validation",
                "Symbolic Execution",
                "Noncompliance Detection",
                "SSL/TLS Libraries",
                "Path Constraints"
            ]
        },
        "url": "URL#3505183",
        "sema_paperId": "a905839f8ccf5a44b4bf092e8cf62422a31f8247"
    },
    {
        "@score": "1",
        "@id": "3505184",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "89/8201",
                        "text": "Yaohui Chen"
                    },
                    {
                        "@pid": "07/3804",
                        "text": "Dongli Zhang"
                    },
                    {
                        "@pid": "19/8917",
                        "text": "Ruowen Wang"
                    },
                    {
                        "@pid": "31/3517",
                        "text": "Rui Qiao"
                    },
                    {
                        "@pid": "09/2166",
                        "text": "Ahmed M. Azab"
                    },
                    {
                        "@pid": "81/7428",
                        "text": "Long Lu"
                    },
                    {
                        "@pid": "24/687",
                        "text": "Hayawardh Vijayakumar"
                    },
                    {
                        "@pid": "18/5040",
                        "text": "Wenbo Shen"
                    }
                ]
            },
            "title": "NORAX: Enabling Execute-Only Memory for COTS Binaries on AArch64.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "304-319",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/ChenZWQALVS17",
            "doi": "10.1109/SP.2017.30",
            "ee": "https://doi.org/10.1109/SP.2017.30",
            "url": "https://dblp.org/rec/conf/sp/ChenZWQALVS17",
            "abstract": "Code reuse attacks exploiting memory disclosure vulnerabilities can bypass all deployed mitigations. One promising defense against this class of attacks is to enable execute-only memory (XOM) protection on top of fine-grained address space layout randomization (ASLR). However, recent works implementing XOM, despite their efficacy, only protect programs that have been (re)built with new compiler support, leaving commercial-off-the-shelf (COTS) binaries and source-unavailable programs unprotected. We present the design and implementation of NORAX, a practical system that retrofits XOM into stripped COTS binaries on AArch64 platforms. Unlike previous techniques, NORAX requires neither source code nor debugging symbols. NORAX statically transforms existing binaries so that during runtime their code sections can be loaded into XOM memory pages with embedded data relocated and data references properly updated. NORAX allows transformed binaries to leverage the new hardware-based XOM support\u2014a feature widely available on AArch64 platforms (e.g., recent mobile devices) yet virtually unused due to the incompatibility of existing binaries. Furthermore, NORAX is designed to co-exist with other COTS binary hardening techniques, such as in-place randomization (IPR). We apply NORAX to the commonly used Android system binaries running on SAMSUNG Galaxy S6 and LG Nexus 5X devices. The results show that NORAX on average slows down the execution of transformed binaries by 1.18% and increases their memory footprint by 2.21%, suggesting NORAX is practical for real-world adoption.",
            "keywords": [
                "Execute-Only Memory",
                "COTS Binaries",
                "AArch64",
                "Code Reuse Attacks",
                "Binary Hardening Techniques"
            ]
        },
        "url": "URL#3505184",
        "sema_paperId": "85b98ef7928eba5fe2f7ab8872358778f5157a71"
    },
    {
        "@score": "1",
        "@id": "3505186",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "161/3315",
                        "text": "Geumhwan Cho"
                    },
                    {
                        "@pid": "58/3207",
                        "text": "Jun Ho Huh"
                    },
                    {
                        "@pid": "167/5722",
                        "text": "Junsung Cho"
                    },
                    {
                        "@pid": "161/3110",
                        "text": "Seongyeol Oh"
                    },
                    {
                        "@pid": "150/8107",
                        "text": "Youngbae Song"
                    },
                    {
                        "@pid": "64/5383",
                        "text": "Hyoungshick Kim"
                    }
                ]
            },
            "title": "SysPal: System-Guided Pattern Locks for Android.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "338-356",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/ChoHCOSK17",
            "doi": "10.1109/SP.2017.61",
            "ee": "https://doi.org/10.1109/SP.2017.61",
            "url": "https://dblp.org/rec/conf/sp/ChoHCOSK17",
            "abstract": "To improve the security of user-chosen Android screen lock patterns, we propose a novel system-guided pattern lock scheme called \"SysPal\" that mandates the use of a small number of randomly selected points while selecting a pattern. Users are given the freedom to use those mandated points at any position. We conducted a large-scale online study with 1,717 participants to evaluate the security and usability of three SysPal policies, varying the number of mandatory points that must be used (upon selecting a pattern) from one to three. Our results suggest that the two SysPal policies that mandate the use of one and two points can help users select significantly more secure patterns compared to the current Android policy: 22.58% and 23.19% fewer patterns were cracked. Those two SysPal policies, however, did not show any statistically significant inferiority in pattern recall success rate (the percentage of participants who correctly recalled their pattern after 24 hours). In our lab study, we asked participants to install our screen unlock application on their own Android device, and observed their real-life phone unlock behaviors for a day. Again, our lab study did not show any statistically significant difference in memorability for those two SysPal policies compared to the current Android policy.",
            "keywords": [
                "Android Security",
                "Pattern Lock",
                "User Authentication",
                "SysPal",
                "Pattern Recall"
            ]
        },
        "url": "URL#3505186",
        "sema_paperId": "df9f11bd937444015c1b077886805231d4cec952"
    },
    {
        "@score": "1",
        "@id": "3505187",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "187/9046",
                        "text": "Abraham A. Clements"
                    },
                    {
                        "@pid": "175/4787",
                        "text": "Naif Saleh Almakhdhub"
                    },
                    {
                        "@pid": "176/4061",
                        "text": "Khaled Saab 0002"
                    },
                    {
                        "@pid": "201/9222",
                        "text": "Prashast Srivastava"
                    },
                    {
                        "@pid": "53/7540",
                        "text": "Jinkyu Koo"
                    },
                    {
                        "@pid": "57/95",
                        "text": "Saurabh Bagchi"
                    },
                    {
                        "@pid": "31/1273",
                        "text": "Mathias Payer"
                    }
                ]
            },
            "title": "Protecting Bare-Metal Embedded Systems with Privilege Overlays.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "289-303",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/ClementsASSKBP17",
            "doi": "10.1109/SP.2017.37",
            "ee": "https://doi.org/10.1109/SP.2017.37",
            "url": "https://dblp.org/rec/conf/sp/ClementsASSKBP17",
            "abstract": "Embedded systems are ubiquitous in every aspect ofmodern life. As the Internet of Thing expands, our dependenceon these systems increases. Many of these interconnected systemsare and will be low cost bare-metal systems, executing without anoperating system. Bare-metal systems rarely employ any securityprotection mechanisms and their development assumptions (un-restricted access to all memory and instructions), and constraints(runtime, energy, and memory) makes applying protectionschallenging. To address these challenges we present EPOXY, an LLVM-based embedded compiler. We apply a novel technique, calledprivilege overlaying, wherein operations requiring privilegedexecution are identified and only these operations execute inprivileged mode. This provides the foundation on which code-integrity, adapted control-flow hijacking defenses, and protections for sensitive IO are applied. We also design fine-grainedrandomization schemes, that work within the constraints of bare-metal systems to provide further protection against control-flowand data corruption attacks. These defenses prevent code injection attacks and ROP attacksfrom scaling across large sets of devices. We evaluate theperformance of our combined defense mechanisms for a suite of75 benchmarks and 3 real-world IoT applications. Our results forthe application case studies show that EPOXY has, on average, a 1.8% increase in execution time and a 0.5% increase in energy usage.",
            "keywords": [
                "Embedded Systems Security",
                "Bare-Metal Systems",
                "Privilege Overlays",
                "Control-Flow Hijacking",
                "Code Injection Attacks"
            ]
        },
        "url": "URL#3505187",
        "sema_paperId": "ef69d23a736c88b82f57baefa8ed938d037880e4"
    },
    {
        "@score": "1",
        "@id": "3505188",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "150/7970",
                        "text": "Moritz Contag"
                    },
                    {
                        "@pid": "224/2345",
                        "text": "Vector Guo Li"
                    },
                    {
                        "@pid": "164/7389",
                        "text": "Andre Pawlowski"
                    },
                    {
                        "@pid": "201/9263",
                        "text": "Felix Domke"
                    },
                    {
                        "@pid": "l/KirillLevchenko",
                        "text": "Kirill Levchenko"
                    },
                    {
                        "@pid": "h/ThorstenHolz",
                        "text": "Thorsten Holz"
                    },
                    {
                        "@pid": "s/StefanSavage",
                        "text": "Stefan Savage"
                    }
                ]
            },
            "title": "How They Did It: An Analysis of Emission Defeat Devices in Modern Automobiles.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "231-250",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/ContagLPDLHS17",
            "doi": "10.1109/SP.2017.66",
            "ee": "https://doi.org/10.1109/SP.2017.66",
            "url": "https://dblp.org/rec/conf/sp/ContagLPDLHS17",
            "abstract": "Modern vehicles are required to comply with a range of environmental regulations limiting the level of emissions for various greenhouse gases, toxins and particulate matter. To ensure compliance, regulators test vehicles in controlled settings and empirically measure their emissions at the tailpipe. However, the black box nature of this testing and the standardization of its forms have created an opportunity for evasion. Using modern electronic engine controllers, manufacturers can programmatically infer when a car is undergoing an emission test and alter the behavior of the vehicle to comply with emission standards, while exceeding them during normal driving in favor of improved performance. While the use of such a defeat device by Volkswagen has brought the issue of emissions cheating to the public's attention, there have been few details about the precise nature of the defeat device, how it came to be, and its effect on vehicle behavior. In this paper, we present our analysis of two families of software defeat devices for diesel engines: one used by the Volkswagen Group to pass emissions tests in the US and Europe, and a second that we have found in Fiat Chrysler Automobiles. To carry out this analysis, we developed new static analysis firmware forensics techniques necessary to automatically identify known defeat devices and confirm their function. We tested about 900 firmware images and were able to detect a potential defeat device in more than 400 firmware images spanning eight years. We describe the precise conditions used by the firmware to detect a test cycle and how it affects engine behavior. This work frames the technical challenges faced by regulators going forward and highlights the important research agenda in providing focused software assurance in the presence of adversarial manufacturers.",
            "keywords": [
                "Emission Defeat Devices",
                "Automotive Software Compliance",
                "Firmware Analysis",
                "Environmental Regulations",
                "Volkswagen Emissions Scandal"
            ]
        },
        "url": "URL#3505188",
        "sema_paperId": "936c1a51552cc39a24861af88d32a92827692eb3"
    },
    {
        "@score": "1",
        "@id": "3505189",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "65/550",
                        "text": "V\u00e9ronique Cortier"
                    },
                    {
                        "@pid": "77/7303",
                        "text": "Constantin Catalin Dragan"
                    },
                    {
                        "@pid": "57/10027",
                        "text": "Fran\u00e7ois Dupressoir"
                    },
                    {
                        "@pid": "16/3338",
                        "text": "Benedikt Schmidt"
                    },
                    {
                        "@pid": "35/5080",
                        "text": "Pierre-Yves Strub"
                    },
                    {
                        "@pid": "09/6076",
                        "text": "Bogdan Warinschi"
                    }
                ]
            },
            "title": "Machine-Checked Proofs of Privacy for Electronic Voting Protocols.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "993-1008",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/CortierDDSSW17",
            "doi": "10.1109/SP.2017.28",
            "ee": "https://doi.org/10.1109/SP.2017.28",
            "url": "https://dblp.org/rec/conf/sp/CortierDDSSW17",
            "abstract": "We provide the first machine-checked proof of privacy-related properties (including ballot privacy) for an electronic voting protocol in the computational model. We target the popular Helios family of voting protocols, for which we identify appropriate levels of abstractions to allow the simplification and convenient reuse of proof steps across many variations of the voting scheme. The resulting framework enables machine-checked security proofs for several hundred variants of Helios and should serve as a stepping stone for the analysis of further variations of the scheme. In addition, we highlight some of the lessons learned regarding the gap between pen-and-paper and machine-checked proofs, and report on the experience with formalizing the security of protocols at this scale.",
            "keywords": [
                "Electronic Voting Protocols",
                "Privacy Proofs",
                "Ballot Privacy",
                "Helios Protocols",
                "Machine-Checked Security"
            ]
        },
        "url": "URL#3505189",
        "sema_paperId": "d5189a286616d7417cf756b4afd01fb9aefc8b74"
    },
    {
        "@score": "1",
        "@id": "3505191",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "121/1113",
                        "text": "Antoine Delignat-Lavaud"
                    },
                    {
                        "@pid": "f/CedricFournet",
                        "text": "C\u00e9dric Fournet"
                    },
                    {
                        "@pid": "12/2177",
                        "text": "Markulf Kohlweiss"
                    },
                    {
                        "@pid": "132/3972",
                        "text": "Jonathan Protzenko"
                    },
                    {
                        "@pid": "81/10809",
                        "text": "Aseem Rastogi"
                    },
                    {
                        "@pid": "11/5568",
                        "text": "Nikhil Swamy"
                    },
                    {
                        "@pid": "70/2200",
                        "text": "Santiago Zanella B\u00e9guelin"
                    },
                    {
                        "@pid": "80/3503",
                        "text": "Karthikeyan Bhargavan"
                    },
                    {
                        "@pid": "193/7408",
                        "text": "Jianyang Pan"
                    },
                    {
                        "@pid": "165/5496",
                        "text": "Jean Karim Zinzindohoue"
                    }
                ]
            },
            "title": "Implementing and Proving the TLS 1.3 Record Layer.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "463-482",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/Delignat-Lavaud17",
            "doi": "10.1109/SP.2017.58",
            "ee": "https://doi.org/10.1109/SP.2017.58",
            "url": "https://dblp.org/rec/conf/sp/Delignat-Lavaud17",
            "abstract": "The record layer is the main bridge between TLS applications and internal sub-protocols. Its core functionality is an elaborate form of authenticated encryption: streams of messages for each sub-protocol (handshake, alert, and application data) are fragmented, multiplexed, and encrypted with optional padding to hide their lengths. Conversely, the sub-protocols may provide fresh keys or signal stream termination to the record layer. Compared to prior versions, TLS 1.3 discards obsolete schemes in favor of a common construction for Authenticated Encryption with Associated Data (AEAD), instantiated with algorithms such as AES-GCM and ChaCha20-Poly1305. It differs from TLS 1.2 in its use of padding, associated data and nonces. It also encrypts the content-type used to multiplex between sub-protocols. New protocol features such as early application data (0-RTT and 0.5-RTT) and late handshake messages require additional keys and a more general model of stateful encryption. We build and verify a reference implementation of the TLS record layer and its cryptographic algorithms in F*, a dependently typed language where security and functional guarantees can be specified as pre-and post-conditions. We reduce the high-level security of the record layer to cryptographic assumptions on its ciphers. Each step in the reduction is verified by typing an F* module, for each step that involves a cryptographic assumption, this module precisely captures the corresponding game. We first verify the functional correctness and injectivity properties of our implementations of one-time MAC algorithms (Poly1305 and GHASH) and provide a generic proof of their security given these two properties. We show the security of a generic AEAD construction built from any secure one-time MAC and PRF. We extend AEAD, first to stream encryption, then to length-hiding, multiplexed encryption. Finally, we build a security model of the record layer against an adversary that controls the TLS sub-protocols. We compute concrete security bounds for the AES_128_GCM, AES_256_GCM, and CHACHA20_POLY1305 ciphersuites, and derive recommended limits on sent data before re-keying. We plug our implementation of the record layer into the miTLS library, confirm that they interoperate with Chrome and Firefox, and report initial performance results. Combining our functional correctness, security, and experimental results, we conclude that the new TLS record layer (as described in RFCs and cryptographic standards) is provably secure, and we provide its first verified implementation.",
            "pdf_url": "",
            "keywords": [
                "TLS 1.3",
                "Record Layer",
                "Authenticated Encryption",
                "Cryptographic Verification",
                "AEAD Construction"
            ]
        },
        "url": "URL#3505191"
    },
    {
        "@score": "1",
        "@id": "3505192",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "153/5733",
                        "text": "Brown Farinholt"
                    },
                    {
                        "@pid": "128/3033",
                        "text": "Mohammad Rezaeirad"
                    },
                    {
                        "@pid": "61/1749",
                        "text": "Paul Pearce"
                    },
                    {
                        "@pid": "119/7663",
                        "text": "Hitesh Dharmdasani"
                    },
                    {
                        "@pid": "201/9272",
                        "text": "Haikuo Yin"
                    },
                    {
                        "@pid": "06/2286",
                        "text": "Stevens Le Blond"
                    },
                    {
                        "@pid": "58/4016",
                        "text": "Damon McCoy"
                    },
                    {
                        "@pid": "l/KirillLevchenko",
                        "text": "Kirill Levchenko"
                    }
                ]
            },
            "title": "To Catch a Ratter: Monitoring the Behavior of Amateur DarkComet RAT Operators in the Wild.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "770-787",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/FarinholtRPDYBM17",
            "doi": "10.1109/SP.2017.48",
            "ee": "https://doi.org/10.1109/SP.2017.48",
            "url": "https://dblp.org/rec/conf/sp/FarinholtRPDYBM17",
            "abstract": "Remote Access Trojans (RATs) give remote attackers interactive control over a compromised machine. Unlike large-scale malware such as botnets, a RAT is controlled individually by a human operator interacting with the compromised machine remotely. The versatility of RATs makes them attractive to actors of all levels of sophistication: they've been used for espionage, information theft, voyeurism and extortion. Despite their increasing use, there are still major gaps in our understanding of RATs and their operators, including motives, intentions, procedures, and weak points where defenses might be most effective. In this work we study the use of DarkComet, a popular commercial RAT. We collected 19,109 samples of DarkComet malware found in the wild, and in the course of two, several-week-long experiments, ran as many samples as possible in our honeypot environment. By monitoring a sample's behavior in our system, we are able to reconstruct the sequence of operator actions, giving us a unique view into operator behavior. We report on the results of 2,747 interactive sessions captured in the course of the experiment. During these sessions operators frequently attempted to interact with victims via remote desktop, to capture video, audio, and keystrokes, and to exfiltrate files and credentials. To our knowledge, we are the first large-scale systematic study of RAT use.",
            "keywords": [
                "Remote Access Trojans",
                "DarkComet RAT",
                "Operator Behavior",
                "Honeypot Analysis",
                "Interactive Sessions"
            ]
        },
        "url": "URL#3505192",
        "sema_paperId": "f2d2dc86520943345a3b0e0563d2b3c416ab51e7"
    },
    {
        "@score": "1",
        "@id": "3505193",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "f/FelixFischer-1",
                        "text": "Felix Fischer 0001"
                    },
                    {
                        "@pid": "122/3548",
                        "text": "Konstantin B\u00f6ttinger"
                    },
                    {
                        "@pid": "51/8434",
                        "text": "Huang Xiao"
                    },
                    {
                        "@pid": "184/6096",
                        "text": "Christian Stransky"
                    },
                    {
                        "@pid": "132/9687",
                        "text": "Yasemin Acar"
                    },
                    {
                        "@pid": "b/MichaelBackes1",
                        "text": "Michael Backes 0001"
                    },
                    {
                        "@pid": "38/9378",
                        "text": "Sascha Fahl"
                    }
                ]
            },
            "title": "Stack Overflow Considered Harmful? The Impact of Copy&amp;Paste on Android Application Security.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "121-136",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/FischerBXSA0F17",
            "doi": "10.1109/SP.2017.31",
            "ee": "https://doi.org/10.1109/SP.2017.31",
            "url": "https://dblp.org/rec/conf/sp/FischerBXSA0F17",
            "abstract": "Online programming discussion platforms such as Stack Overflow serve as a rich source of information for software developers. Available information include vibrant discussions and oftentimes ready-to-use code snippets. Previous research identified Stack Overflow as one of the most important information sources developers rely on. Anecdotes report that software developers copy and paste code snippets from those information sources for convenience reasons. Such behavior results in a constant flow of community-provided code snippets into production software. To date, the impact of this behaviour on code security is unknown. We answer this highly important question by quantifying the proliferation of security-related code snippets from Stack Overflow in Android applications available on Google Play. Access to the rich source of information available on Stack Overflow including ready-to-use code snippets provides huge benefits for software developers. However, when it comes to code security there are some caveats to bear in mind: Due to the complex nature of code security, it is very difficult to provide ready-to-use and secure solutions for every problem. Hence, integrating a security-related code snippet from Stack Overflow into production software requires caution and expertise. Unsurprisingly, we observed insecure code snippets being copied into Android applications millions of users install from Google Play every day. To quantitatively evaluate the extent of this observation, we scanned Stack Overflow for code snippets and evaluated their security score using a stochastic gradient descent classifier. In order to identify code reuse in Android applications, we applied state-of-the-art static analysis. Our results are alarming: 15.4% of the 1.3 million Android applications we analyzed, contained security-related code snippets from Stack Overflow. Out of these 97.9% contain at least one insecure code snippet.",
            "pdf_url": "",
            "keywords": [
                "Android Application Security",
                "Code Snippets",
                "Stack Overflow",
                "Code Reuse",
                "Insecure Code"
            ]
        },
        "url": "URL#3505193"
    },
    {
        "@score": "1",
        "@id": "3505194",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "11/10929",
                        "text": "Yanick Fratantonio"
                    },
                    {
                        "@pid": "147/2276",
                        "text": "Chenxiong Qian"
                    },
                    {
                        "@pid": "38/860",
                        "text": "Simon P. Chung"
                    },
                    {
                        "@pid": "29/5976",
                        "text": "Wenke Lee"
                    }
                ]
            },
            "title": "Cloak and Dagger: From Two Permissions to Complete Control of the UI Feedback Loop.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "1041-1057",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/FratantonioQCL17",
            "doi": "10.1109/SP.2017.39",
            "ee": "https://doi.org/10.1109/SP.2017.39",
            "url": "https://dblp.org/rec/conf/sp/FratantonioQCL17",
            "abstract": "The effectiveness of the Android permission system fundamentally hinges on the user's correct understanding of the capabilities of the permissions being granted. In this paper, we show that both the end-users and the security community have significantly underestimated the dangerous capabilities granted by the SYSTEM_ALERT_WINDOW and the BIND_ACCESSIBILITY_SERVICE permissions: while it is known that these are security-sensitive permissions and they have been abused individually (e.g., in UI redressing attacks, accessibility attacks), previous attacks based on these permissions rely on vanishing side-channels to time the appearance of overlay UI, cannot respond properly to user input, or make the attacks literally visible. This work, instead, uncovers several design shortcomings of the Android platform and shows how an app with these two permissions can completely control the UI feedback loop and create devastating attacks. In particular, we demonstrate how such an app can launch a variety of stealthy, powerful attacks, ranging from stealing user's login credentials and security PIN, to the silent installation of a God-mode app with all permissions enabled, leaving the victim completely unsuspecting. To make things even worse, we note that when installing an app targeting a recent Android SDK, the list of its required permissions is not shown to the user and that these attacks can be carried out without needing to lure the user to knowingly enable any permission. In fact, the SYSTEM_ALERT_WINDOW permission is automatically granted for apps installed from the Play Store and our experiment shows that it is practical to lure users to unknowingly grant the BIND_ACCESSIBILITY_SERVICE permission by abusing capabilities from the SYSTEM_ALERT_WINDOW permission. We evaluated the practicality of these attacks by performing a user study: none of the 20 human subjects that took part of the experiment even suspected they had been attacked. We also found that it is straightforward to get a proof-of-concept app requiring both permissions accepted on the official store. We responsibly disclosed our findings to Google. Unfortunately, since these problems are related to design issues, these vulnerabilities are still unaddressed. We conclude the paper by proposing a novel defense mechanism, implemented as an extension to the current Android API, which would protect Android users and developers from the threats we uncovered.",
            "keywords": [
                "Android Permissions",
                "UI Feedback Loop",
                "SYSTEM_ALERT_WINDOW",
                "BIND_ACCESSIBILITY_SERVICE",
                "Stealthy Attacks"
            ]
        },
        "url": "URL#3505194",
        "sema_paperId": "18c5049806ab27e4a2a7ba6c388309843d6f90ab"
    },
    {
        "@score": "1",
        "@id": "3505195",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "14/10073",
                        "text": "Benjamin Fuller 0001"
                    },
                    {
                        "@pid": "59/6288",
                        "text": "Mayank Varia"
                    },
                    {
                        "@pid": "05/4233",
                        "text": "Arkady Yerukhimovich"
                    },
                    {
                        "@pid": "26/1767",
                        "text": "Emily Shen"
                    },
                    {
                        "@pid": "157/3800",
                        "text": "Ariel Hamlin"
                    },
                    {
                        "@pid": "86/7615",
                        "text": "Vijay Gadepally"
                    },
                    {
                        "@pid": "18/1031",
                        "text": "Richard Shay"
                    },
                    {
                        "@pid": "198/0835",
                        "text": "John Darby Mitchell"
                    },
                    {
                        "@pid": "73/2605",
                        "text": "Robert K. Cunningham"
                    }
                ]
            },
            "title": "SoK: Cryptographically Protected Database Search.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "172-191",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/FullerVYSHGSMC17",
            "doi": "10.1109/SP.2017.10",
            "ee": "https://doi.org/10.1109/SP.2017.10",
            "url": "https://dblp.org/rec/conf/sp/FullerVYSHGSMC17",
            "abstract": "Protected database search systems cryptographically isolate the roles of reading from, writing to, and administering the database. This separation limits unnecessary administrator access and protects data in the case of system breaches. Since protected search was introduced in 2000, the area has grown rapidly, systems are offered by academia, start-ups, and established companies. However, there is no best protected search system or set of techniques. Design of such systems is a balancing act between security, functionality, performance, and usability. This challenge is made more difficult by ongoing database specialization, as some users will want the functionality of SQL, NoSQL, or NewSQL databases. This database evolution will continue, and the protected search community should be able to quickly provide functionality consistent with newly invented databases. At the same time, the community must accurately and clearly characterize the tradeoffs between different approaches. To address these challenges, we provide the following contributions:1) An identification of the important primitive operations across database paradigms. We find there are a small number of base operations that can be used and combined to support a large number of database paradigms.2) An evaluation of the current state of protected search systems in implementing these base operations. This evaluation describes the main approaches and tradeoffs for each base operation. Furthermore, it puts protected search in the context of unprotected search, identifying key gaps in functionality.3) An analysis of attacks against protected search for different base queries.4) A roadmap and tools for transforming a protected search system into a protected database, including an open-source performance evaluation platform and initial user opinions of protected search.",
            "pdf_url": "",
            "keywords": [
                "Protected Database Search",
                "Cryptographic Isolation",
                "Database Paradigms",
                "Search Functionality",
                "Security Tradeoffs"
            ]
        },
        "url": "URL#3505195"
    },
    {
        "@score": "1",
        "@id": "3505198",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "134/7573",
                        "text": "Nethanel Gelernter"
                    },
                    {
                        "@pid": "201/9218",
                        "text": "Senia Kalma"
                    },
                    {
                        "@pid": "201/9224",
                        "text": "Bar Magnezi"
                    },
                    {
                        "@pid": "201/9254",
                        "text": "Hen Porcilan"
                    }
                ]
            },
            "title": "The Password Reset MitM Attack.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "251-267",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/GelernterKMP17",
            "doi": "10.1109/SP.2017.9",
            "ee": "https://doi.org/10.1109/SP.2017.9",
            "url": "https://dblp.org/rec/conf/sp/GelernterKMP17",
            "abstract": "We present the password reset MitM (PRMitM) attack and show how it can be used to take over user accounts. The PRMitM attack exploits the similarity of the registration and password reset processes to launch a man in the middle (MitM) attack at the application level. The attacker initiates a password reset process with a website and forwards every challenge to the victim who either wishes to register in the attacking site or to access a particular resource on it. The attack has several variants, including exploitation of a password reset process that relies on the victim's mobile phone, using either SMS or phone call. We evaluated the PRMitM attacks on Google and Facebook users in several experiments, and found that their password reset process is vulnerable to the PRMitM attack. Other websites and some popular mobile applications are vulnerable as well. Although solutions seem trivial in some cases, our experiments show that the straightforward solutions are not as effective as expected. We designed and evaluated two secure password reset processes and evaluated them on users of Google and Facebook. Our results indicate a significant improvement in the security. Since millions of accounts are currently vulnerable to the PRMitM attack, we also present a list of recommendations for implementing and auditing the password reset process.",
            "keywords": [
                "Password Reset Security",
                "Man-in-the-Middle Attack",
                "Account Takeover",
                "User Authentication",
                "Vulnerability Assessment"
            ]
        },
        "url": "URL#3505198",
        "sema_paperId": "34285a71b3c468a3a6b26793c8921fcd4dab8b14"
    },
    {
        "@score": "1",
        "@id": "3505199",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "139/2372",
                        "text": "Paul Grubbs"
                    },
                    {
                        "@pid": "187/5561",
                        "text": "Kevin Sekniqi"
                    },
                    {
                        "@pid": "117/2526",
                        "text": "Vincent Bindschaedler"
                    },
                    {
                        "@pid": "120/9715-1",
                        "text": "Muhammad Naveed 0001"
                    },
                    {
                        "@pid": "26/3399",
                        "text": "Thomas Ristenpart"
                    }
                ]
            },
            "title": "Leakage-Abuse Attacks against Order-Revealing Encryption.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "655-672",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/GrubbsSB0R17",
            "doi": "10.1109/SP.2017.44",
            "ee": "https://doi.org/10.1109/SP.2017.44",
            "url": "https://dblp.org/rec/conf/sp/GrubbsSB0R17",
            "abstract": "Order-preserving encryption and its generalization order-revealing encryption (OPE/ORE) allow sorting, performing range queries, and filtering data - all while only having access to ciphertexts. But OPE and ORE ciphertexts necessarily leak information about plaintexts, and what level of security they provide in practice has been unclear. In this work, we introduce new leakage-abuse attacks that recover plaintexts from OPE/ORE-encrypted databases. Underlying our new attacks is a framework in which we cast the adversary's challenge as a non-crossing bipartite matching problem. This allows easy tailoring of attacks to a specific scheme's leakage profile. In a case study of customer records, we show attacks that recover 99% of first names, 97% of last names, and 90% of birthdates held in a database, despite all values being encrypted with the OPE scheme most widely used in practice. We also show the first attack against the recent frequency-hiding Kerschbaum scheme, to which no prior attacks have been demonstrated. Our attack recovers frequently occurring plaintexts most of the time.",
            "pdf_url": "",
            "keywords": [
                "Order-Revealing Encryption",
                "Leakage-Abuse Attacks",
                "Data Recovery",
                "Plaintext Leakage",
                "Frequency-Hiding Kerschbaum Scheme"
            ]
        },
        "url": "URL#3505199"
    },
    {
        "@score": "1",
        "@id": "3505201",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "45/1437",
                        "text": "Cormac Herley"
                    },
                    {
                        "@pid": "o/PCvOorschot",
                        "text": "Paul C. van Oorschot"
                    }
                ]
            },
            "title": "SoK: Science, Security and the Elusive Goal of Security as a Scientific Pursuit.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "99-120",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/HerleyO17",
            "doi": "10.1109/SP.2017.38",
            "ee": "https://doi.org/10.1109/SP.2017.38",
            "url": "https://dblp.org/rec/conf/sp/HerleyO17",
            "abstract": "The past ten years has seen increasing calls to makesecurity research more \"scientific\".On the surface, most agree that this is desirable, given universal recognition of \"science\" as a positive force. However, we find that there is little clarity on what \"scientific\" means inthe context of computer security research, or consensus onwhat a \"Science of Security\" should look like. We selectively review work in the history and philosophy of scienceand more recent work under the label \"Science of Security\".We explore what has been done under the theme of relating science and security, put this in context with historical science, and offer observations and insights we hope maymotivate further exploration and guidance. Among our findings are thatpractices on which the rest of science has reached consensus appear little usedor recognized in security, and a pattern of methodological errors continues unaddressed.",
            "keywords": [
                "Science of Security",
                "Security Research Methodology",
                "Philosophy of Science",
                "Methodological Errors",
                "Scientific Pursuit in Security"
            ]
        },
        "url": "URL#3505201",
        "sema_paperId": "5fb1988aca0d8797daaf97dbfd56f54f7b84d230"
    },
    {
        "@score": "1",
        "@id": "3505202",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "187/8973",
                        "text": "Philipp Holzinger"
                    },
                    {
                        "@pid": "147/7971",
                        "text": "Ben Hermann"
                    },
                    {
                        "@pid": "128/5813",
                        "text": "Johannes Lerch"
                    },
                    {
                        "@pid": "94/5744",
                        "text": "Eric Bodden"
                    },
                    {
                        "@pid": "m/MiraMezini",
                        "text": "Mira Mezini"
                    }
                ]
            },
            "title": "Hardening Java&apos;s Access Control by Abolishing Implicit Privilege Elevation.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "1027-1040",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/HolzingerHLBM17",
            "doi": "10.1109/SP.2017.16",
            "ee": "https://doi.org/10.1109/SP.2017.16",
            "url": "https://dblp.org/rec/conf/sp/HolzingerHLBM17",
            "abstract": "While the Java runtime is installed on billions of devices and servers worldwide, it remains a primary attack vector for online criminals. As recent studies show, the majority of all exploited Java vulnerabilities comprise incorrect or insufficient implementations of access-control checks. This paper for the first time studies the problem in depth. As we find, attacks are enabled by shortcuts that short-circuit Java's general principle of stack-based access control. These shortcuts, originally introduced for ease of use and to improve performance, cause Java to elevate the privileges of code implicitly. As we show, this creates many pitfalls for software maintenance, making it all too easy for maintainers of the runtime to introduce blatant confused-deputy vulnerabilities even by just applying normally semantics-preserving refactorings. How can this problem be solved? Can one implement Java's access control without shortcuts, and if so, does this implementation remain usable and efficient? To answer those questions, we conducted a tool-assisted adaptation of the Java Class Library (JCL), avoiding (most) shortcuts and therefore moving to a fully explicit model of privilege elevation. As we show, the proposed changes significantly harden the JCL against attacks: they effectively hinder the introduction of new confused-deputy vulnerabilities in future library versions, and successfully restrict the capabilities of attackers when exploiting certain existing vulnerabilities. We discuss usability considerations, and through a set of large-scale experiments show that with current JVM technology such a faithful implementation of stack-based access control induces no observable performance loss.",
            "keywords": [
                "Java Security",
                "Access Control",
                "Privilege Elevation",
                "Confused-Deputy Vulnerabilities",
                "Java Class Library (JCL)"
            ]
        },
        "url": "URL#3505202",
        "sema_paperId": "e5d155abafe7d7b05e6db7ce1176cf8c99b95ece"
    },
    {
        "@score": "1",
        "@id": "3505204",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "201/9255",
                        "text": "Seulbae Kim"
                    },
                    {
                        "@pid": "201/9210",
                        "text": "Seunghoon Woo"
                    },
                    {
                        "@pid": "75/4485",
                        "text": "Heejo Lee"
                    },
                    {
                        "@pid": "13/7537",
                        "text": "Hakjoo Oh"
                    }
                ]
            },
            "title": "VUDDY: A Scalable Approach for Vulnerable Code Clone Discovery.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "595-614",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/KimWLO17",
            "doi": "10.1109/SP.2017.62",
            "ee": "https://doi.org/10.1109/SP.2017.62",
            "url": "https://dblp.org/rec/conf/sp/KimWLO17",
            "abstract": "The ecosystem of open source software (OSS) has been growing considerably in size. In addition, code clones - code fragments that are copied and pasted within or between software systems - are also proliferating. Although code cloning may expedite the process of software development, it often critically affects the security of software because vulnerabilities and bugs can easily be propagated through code clones. These vulnerable code clones are increasing in conjunction with the growth of OSS, potentially contaminating many systems. Although researchers have attempted to detect code clones for decades, most of these attempts fail to scale to the size of the ever-growing OSS code base. The lack of scalability prevents software developers from readily managing code clones and associated vulnerabilities. Moreover, most existing clone detection techniques focus overly on merely detecting clones and this impairs their ability to accurately find \"vulnerable\" clones. In this paper, we propose VUDDY, an approach for the scalable detection of vulnerable code clones, which is capable of detecting security vulnerabilities in large software programs efficiently and accurately. Its extreme scalability is achieved by leveraging function-level granularity and a length-filtering technique that reduces the number of signature comparisons. This efficient design enables VUDDY to preprocess a billion lines of code in 14 hour and 17 minutes, after which it requires a few seconds to identify code clones. In addition, we designed a security-aware abstraction technique that renders VUDDY resilient to common modifications in cloned code, while preserving the vulnerable conditions even after the abstraction is applied. This extends the scope of VUDDY to identifying variants of known vulnerabilities, with high accuracy. In this study, we describe its principles and evaluate its efficacy and effectiveness by comparing it with existing mechanisms and presenting the vulnerabilities it detected. VUDDY outperformed four state-of-the-art code clone detection techniques in terms of both scalability and accuracy, and proved its effectiveness by detecting zero-day vulnerabilities in widely used software systems, such as Apache HTTPD and Ubuntu OS Distribution.",
            "keywords": [
                "Vulnerable Code Clones",
                "Code Clone Detection",
                "Open Source Software",
                "Scalability",
                "Security Vulnerabilities"
            ]
        },
        "url": "URL#3505204",
        "sema_paperId": "4ebe9205f8a568d27c38ffb16660669b9d87b69e"
    },
    {
        "@score": "1",
        "@id": "3505205",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "k/RKusters",
                        "text": "Ralf K\u00fcsters"
                    },
                    {
                        "@pid": "157/2805-1",
                        "text": "Daniel Rausch 0001"
                    }
                ]
            },
            "title": "A Framework for Universally Composable Diffie-Hellman Key Exchange.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "881-900",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/KustersR17",
            "doi": "10.1109/SP.2017.63",
            "ee": "https://doi.org/10.1109/SP.2017.63",
            "url": "https://dblp.org/rec/conf/sp/KustersR17",
            "abstract": "The analysis of real-world protocols, in particular key exchange protocols and protocols building on these protocols, is a very complex, error-prone, and tedious task. Besides the complexity of the protocols itself, one important reason for this is that the security of the protocols has to be reduced to the security of the underlying cryptographic primitives for every protocol time and again. We would therefore like to get rid of reduction proofs for real-world key exchange protocols as much as possible and in many cases altogether, also for higher-level protocols which use the exchanged keys. So far some first steps have been taken in this direction. But existing work is still quite limited, and, for example, does not support Diffie-Hellman (DH) key exchange, a prevalent cryptographic primitive for real-world protocols. In this paper, building on work by Kusters and Tuengerthal, we provide an ideal functionality in the universal composability setting which supports several common cryptographic primitives, including DH key exchange. This functionality helps to avoid reduction proofs in the analysis of real-world protocols and often eliminates them completely. We also propose a new general ideal key exchange functionality which allows higherlevel protocols to use exchanged keys in an ideal way. As a proof of concept, we apply our framework to three practical DH key exchange protocols, namely ISO 9798-3, SIGMA, and OPTLS.",
            "pdf_url": "",
            "keywords": [
                "Universally Composable Security",
                "Diffie-Hellman Key Exchange",
                "Ideal Functionality",
                "Key Exchange Protocols",
                "Reduction Proofs"
            ]
        },
        "url": "URL#3505205"
    },
    {
        "@score": "1",
        "@id": "3505206",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "201/9209",
                        "text": "James Larisch"
                    },
                    {
                        "@pid": "48/6854",
                        "text": "David R. Choffnes"
                    },
                    {
                        "@pid": "03/6428",
                        "text": "Dave Levin"
                    },
                    {
                        "@pid": "m/BruceMMaggs",
                        "text": "Bruce M. Maggs"
                    },
                    {
                        "@pid": "31/3833",
                        "text": "Alan Mislove"
                    },
                    {
                        "@pid": "79/5135",
                        "text": "Christo Wilson"
                    }
                ]
            },
            "title": "CRLite: A Scalable System for Pushing All TLS Revocations to All Browsers.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "539-556",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/LarischCLMMW17",
            "doi": "10.1109/SP.2017.17",
            "ee": "https://doi.org/10.1109/SP.2017.17",
            "url": "https://dblp.org/rec/conf/sp/LarischCLMMW17",
            "abstract": "Currently, no major browser fully checks for TLS/SSL certificate revocations. This is largely due to the fact that the deployed mechanisms for disseminating revocations (CRLs, OCSP, OCSP Stapling, CRLSet, and OneCRL) are each either incomplete, insecure, inefficient, slow to update, not private, or some combination thereof. In this paper, we present CRLite, an efficient and easily-deployable system for proactively pushing all TLS certificate revocations to browsers. CRLite servers aggregate revocation information for all known, valid TLS certificates on the web, and store them in a space-efficient filter cascade data structure. Browsers periodically download and use this data to check for revocations of observed certificates in real-time. CRLite does not require any additional trust beyond the existing PKI, and it allows clients to adopt a fail-closed security posture even in the face of network errors or attacks that make revocation information temporarily unavailable. We present a prototype of name that processes TLS certificates gathered by Rapid7, the University of Michigan, and Google's Certificate Transparency on the server-side, with a Firefox extension on the client-side. Comparing CRLite to an idealized browser that performs correct CRL/OCSP checking, we show that CRLite reduces latency and eliminates privacy concerns. Moreover, CRLite has low bandwidth costs: it can represent all certificates with an initial download of 10 MB (less than 1 byte per revocation) followed by daily updates of 580 KB on average. Taken together, our results demonstrate that complete TLS/SSL revocation checking is within reach for all clients.",
            "keywords": [
                "TLS Certificate Revocation",
                "CRLite",
                "Revocation Checking",
                "Browser Security",
                "Privacy Concerns"
            ]
        },
        "url": "URL#3505206",
        "sema_paperId": "3738309409460ad745ceae4d8a8bea8ea5e1d977"
    },
    {
        "@score": "1",
        "@id": "3505207",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "151/0324",
                        "text": "Kiron Lebeck"
                    },
                    {
                        "@pid": "201/9217",
                        "text": "Kimberly Ruth"
                    },
                    {
                        "@pid": "k/TadayoshiKohno",
                        "text": "Tadayoshi Kohno"
                    },
                    {
                        "@pid": "23/2758",
                        "text": "Franziska Roesner"
                    }
                ]
            },
            "title": "Securing Augmented Reality Output.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "320-337",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/LebeckRKR17",
            "doi": "10.1109/SP.2017.13",
            "ee": "https://doi.org/10.1109/SP.2017.13",
            "url": "https://dblp.org/rec/conf/sp/LebeckRKR17",
            "abstract": "Augmented reality (AR) technologies, such as Microsoft's HoloLens head-mounted display and AR-enabled car windshields, are rapidly emerging. AR applications provide users with immersive virtual experiences by capturing input from a user's surroundings and overlaying virtual output on the user's perception of the real world. These applications enable users to interact with and perceive virtual content in fundamentally new ways. However, the immersive nature of AR applications raises serious security and privacy concerns. Prior work has focused primarily on input privacy risks stemming from applications with unrestricted access to sensor data. However, the risks associated with malicious or buggy AR output remain largely unexplored. For example, an AR windshield application could intentionally or accidentally obscure oncoming vehicles or safety-critical output of other AR applications. In this work, we address the fundamental challenge of securing AR output in the face of malicious or buggy applications. We design, prototype, and evaluate Arya, an AR platform that controls application output according to policies specified in a constrained yet expressive policy framework. In doing so, we identify and overcome numerous challenges in securing AR output.",
            "keywords": [
                "Augmented Reality Security",
                "AR Output Control",
                "Immersive Technology Risks",
                "Policy Framework",
                "Malicious AR Applications"
            ]
        },
        "url": "URL#3505207",
        "sema_paperId": "4b25786fab8d98625b6115d187b717ede0936e26"
    },
    {
        "@score": "1",
        "@id": "3505208",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "130/0417",
                        "text": "Mathias L\u00e9cuyer"
                    },
                    {
                        "@pid": "123/9751",
                        "text": "Riley Spahn"
                    },
                    {
                        "@pid": "g/RoxanaGeambasu",
                        "text": "Roxana Geambasu"
                    },
                    {
                        "@pid": "22/1218",
                        "text": "Tzu-Kuo Huang"
                    },
                    {
                        "@pid": "58/968",
                        "text": "Siddhartha Sen 0001"
                    }
                ]
            },
            "title": "Pyramid: Enhancing Selectivity in Big Data Protection with Count Featurization.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "78-95",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/LecuyerSGHS17",
            "doi": "10.1109/SP.2017.60",
            "ee": "https://doi.org/10.1109/SP.2017.60",
            "url": "https://dblp.org/rec/conf/sp/LecuyerSGHS17",
            "abstract": "Protecting vast quantities of data poses a daunting challenge for the growing number of organizations that collect, stockpile, and monetize it. The ability to distinguish data that is actually needed from data collected \"just in case\" would help these organizations to limit the latter's exposure to attack. A natural approach might be to monitor data use and retain only the working-set of in-use data in accessible storage, unused data can be evicted to a highly protected store. However, many of today's big data applications rely on machine learning (ML) workloads that are periodically retrained by accessing, and thus exposing to attack, the entire data store. Training set minimization methods, such as count featurization, are often used to limit the data needed to train ML workloads to improve performance or scalability. We present Pyramid, a limited-exposure data management system that builds upon count featurization to enhance data protection. As such, Pyramid uniquely introduces both the idea and proof-of-concept for leveraging training set minimization methods to instill rigor and selectivity into big data management. We integrated Pyramid into Spark Velox, a framework for ML-based targeting and personalization. We evaluate it on three applications and show that Pyramid approaches state-of-the-art models while training on less than 1% of the raw data.",
            "pdf_url": "",
            "keywords": [
                "Big Data Protection",
                "Count Featurization",
                "Data Management",
                "Training Set Minimization",
                "Limited-Exposure Data Management"
            ]
        },
        "url": "URL#3505208"
    },
    {
        "@score": "1",
        "@id": "3505209",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "134/8710",
                        "text": "Chaz Lever"
                    },
                    {
                        "@pid": "44/10958",
                        "text": "Platon Kotzias"
                    },
                    {
                        "@pid": "56/490",
                        "text": "Davide Balzarotti"
                    },
                    {
                        "@pid": "35/3587",
                        "text": "Juan Caballero"
                    },
                    {
                        "@pid": "26/216",
                        "text": "Manos Antonakakis"
                    }
                ]
            },
            "title": "A Lustrum of Malware Network Communication: Evolution and Insights.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "788-804",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/LeverKBCA17",
            "doi": "10.1109/SP.2017.59",
            "ee": "https://doi.org/10.1109/SP.2017.59",
            "url": "https://dblp.org/rec/conf/sp/LeverKBCA17",
            "abstract": "Both the operational and academic security communities have used dynamic analysis sandboxes to execute malware samples for roughly a decade. Network information derived from dynamic analysis is frequently used for threat detection, network policy, and incident response. Despite these common and important use cases, the efficacy of the network detection signal derived from such analysis has yet to be studied in depth. This paper seeks to address this gap by analyzing the network communications of 26.8 million samples that were collected over a period of five years. Using several malware and network datasets, our large scale study makes three core contributions. (1) We show that dynamic analysis traces should be carefully curated and provide a rigorous methodology that analysts can use to remove potential noise from such traces. (2) We show that Internet miscreants are increasingly using potentially unwanted programs (PUPs) that rely on a surprisingly stable DNS and IP infrastructure. This indicates that the security community is in need of better protections against such threats, and network policies may provide a solid foundation for such protections. (3) Finally, we see that, for the vast majority of malware samples, network traffic provides the earliest indicator of infection\u2014several weeks and often months before the malware sample is discovered. Therefore, network defenders should rely on automated malware analysis to extract indicators of compromise and not to build early detection systems.",
            "keywords": [
                "Malware Analysis",
                "Network Communication",
                "Dynamic Analysis Sandboxes",
                "Indicators of Compromise",
                "Potentially Unwanted Programs (PUPs)"
            ]
        },
        "url": "URL#3505209",
        "sema_paperId": "1ccdb56323b1e0925e24b94fc595fdf89727b2f9"
    },
    {
        "@score": "1",
        "@id": "3505215",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "73/2223",
                        "text": "Paul Marinescu"
                    },
                    {
                        "@pid": "201/9265",
                        "text": "Chad Parry"
                    },
                    {
                        "@pid": "143/5694",
                        "text": "Marjori Pomarole"
                    },
                    {
                        "@pid": "39/5423-1",
                        "text": "Yuan Tian 0001"
                    },
                    {
                        "@pid": "89/1945",
                        "text": "Patrick Tague"
                    },
                    {
                        "@pid": "45/4905",
                        "text": "Ioannis Papagiannis"
                    }
                ]
            },
            "title": "IVD: Automatic Learning and Enforcement of Authorization Rules in Online Social Networks.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "1094-1109",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/MarinescuPPTTP17",
            "doi": "10.1109/SP.2017.33",
            "ee": "https://doi.org/10.1109/SP.2017.33",
            "url": "https://dblp.org/rec/conf/sp/MarinescuPPTTP17",
            "abstract": "Authorization bugs, when present in online social networks, are usually caused by missing or incorrect authorization checks and can allow attackers to bypass the online social network's protections. Unfortunately, there is no practical way to fully guarantee that an authorization bug will never be introduced\u2014even with good engineering practices\u2014as a web application and its data model become more complex. Unlike other web application vulnerabilities such as XSS and CSRF, there is no practical general solution to prevent missing or incorrect authorization checks. In this paper we propose Invariant Detector (IVD), a defense-in-depth system that automatically learns authorization rules from normal data manipulation patterns and distills them into likely invariants. These invariants, usually learned during the testing or pre-release stages of new features, are then used to block any requests that may attempt to exploit bugs in the social network's authorization logic. IVD acts as an additional layer of defense, working behind the scenes, complementary to privacy frameworks and testing. We have designed and implemented IVD to handle the unique challenges posed by modern online social networks. IVD is currently running at Facebook, where it infers and evaluates daily more than 200,000 invariants from a sample of roughly 500 million client requests, and checks the resulting invariants every second against millions of writes made to a graph database containing trillions of entities. Thus far IVD has detected several high impact authorization bugs and has successfully blocked attempts to exploit them before code fixes were deployed.",
            "keywords": [
                "Online Social Networks",
                "Authorization Rules",
                "Invariant Detection",
                "Authorization Bugs",
                "Defense-in-Depth System"
            ]
        },
        "url": "URL#3505215",
        "sema_paperId": "8210f6a9b276f954b4bb852c5f9ee73e0f23d3b7"
    },
    {
        "@score": "1",
        "@id": "3505217",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "153/5802",
                        "text": "Stephanos Matsumoto"
                    },
                    {
                        "@pid": "09/7407",
                        "text": "Raphael M. Reischuk"
                    }
                ]
            },
            "title": "IKP: Turning a PKI Around with Decentralized Automated Incentives.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "410-426",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/MatsumotoR17",
            "doi": "10.1109/SP.2017.57",
            "ee": "https://doi.org/10.1109/SP.2017.57",
            "url": "https://dblp.org/rec/conf/sp/MatsumotoR17",
            "abstract": "Despite a great deal of work to improve the TLS PKI, CA misbehavior continues to occur, resulting in unauthorized certificates that can be used to mount man-in-the-middle attacks against HTTPS sites. CAs lack the incentives to invest in higher security, and the manual effort required to report a rogue certificate deters many from contributing to the security of the TLS PKI. In this paper, we present IKP, a platform that automates responses to unauthorized certificates and provides incentives for CAs to behave correctly and for others to report potentially unauthorized certificates. Domains in IKP specify criteria for their certificates, and CAs specify reactions such as financial penalties that execute in case of unauthorized certificate issuance. By leveraging smart contracts and blockchain-based consensus, we can decentralize IKP while still providing automated incentives. We describe a theoretical model for payment flows and implement IKP in Ethereum to show that decentralizing and automating PKIs with financial incentives is both economically sound and technically viable.",
            "keywords": [
                "Decentralized PKI",
                "Automated Incentives",
                "Certificate Authority Misbehavior",
                "Unauthorized Certificates",
                "Smart Contracts"
            ]
        },
        "url": "URL#3505217",
        "sema_paperId": "8908fba577037c02f58867e8031d51df85d545ab"
    },
    {
        "@score": "1",
        "@id": "3505218",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "182/2006",
                        "text": "Najmeh Miramirkhani"
                    },
                    {
                        "@pid": "201/9250",
                        "text": "Mahathi Priya Appini"
                    },
                    {
                        "@pid": "04/8280",
                        "text": "Nick Nikiforakis"
                    },
                    {
                        "@pid": "09/1231",
                        "text": "Michalis Polychronakis"
                    }
                ]
            },
            "title": "Spotless Sandboxes: Evading Malware Analysis Systems Using Wear-and-Tear Artifacts.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "1009-1024",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/MiramirkhaniANP17",
            "doi": "10.1109/SP.2017.42",
            "ee": "https://doi.org/10.1109/SP.2017.42",
            "url": "https://dblp.org/rec/conf/sp/MiramirkhaniANP17",
            "abstract": "Malware sandboxes, widely used by antivirus companies, mobile application marketplaces, threat detection appliances, and security researchers, face the challenge of environment-aware malware that alters its behavior once it detects that it is being executed on an analysis environment. Recent efforts attempt to deal with this problem mostly by ensuring that well-known properties of analysis environments are replaced with realistic values, and that any instrumentation artifacts remain hidden. For sandboxes implemented using virtual machines, this can be achieved by scrubbing vendor-specific drivers, processes, BIOS versions, and other VM-revealing indicators, while more sophisticated sandboxes move away from emulation-based and virtualization-based systems towards bare-metal hosts. We observe that as the fidelity and transparency of dynamic malware analysis systems improves, malware authors can resort to other system characteristics that are indicative of artificial environments. We present a novel class of sandbox evasion techniques that exploit the \"wear and tear\" that inevitably occurs on real systems as a result of normal use. By moving beyond how realistic a system looks like, to how realistic its past use looks like, malware can effectively evade even sandboxes that do not expose any instrumentation indicators, including bare-metal systems. We investigate the feasibility of this evasion strategy by conducting a large-scale study of wear-and-tear artifacts collected from real user devices and publicly available malware analysis services. The results of our evaluation are alarming: using simple decision trees derived from the analyzed data, malware can determine that a system is an artificial environment and not a real user device with an accuracy of 92.86%. As a step towards defending against wear-and-tear malware evasion, we develop statistical models that capture a system's age and degree of use, which can be used to aid sandbox operators in creating system images that exhibit a realistic wear-and-tear state.",
            "keywords": [
                "Malware Analysis",
                "Sandbox Evasion",
                "Wear-and-Tear Artifacts",
                "Environment-Aware Malware",
                "Dynamic Analysis Systems"
            ]
        },
        "url": "URL#3505218",
        "sema_paperId": "73c6a2a9ea28c0008582503e8265f70c16167100"
    },
    {
        "@score": "1",
        "@id": "3505220",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "67/6496",
                        "text": "Payman Mohassel"
                    },
                    {
                        "@pid": "82/4816-1",
                        "text": "Yupeng Zhang 0001"
                    }
                ]
            },
            "title": "SecureML: A System for Scalable Privacy-Preserving Machine Learning.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "19-38",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/MohasselZ17",
            "doi": "10.1109/SP.2017.12",
            "ee": "https://doi.org/10.1109/SP.2017.12",
            "url": "https://dblp.org/rec/conf/sp/MohasselZ17",
            "abstract": "Machine learning is widely used in practice to produce predictive models for applications such as image processing, speech and text recognition. These models are more accurate when trained on large amount of data collected from different sources. However, the massive data collection raises privacy concerns. In this paper, we present new and efficient protocols for privacy preserving machine learning for linear regression, logistic regression and neural network training using the stochastic gradient descent method. Our protocols fall in the two-server model where data owners distribute their private data among two non-colluding servers who train various models on the joint data using secure two-party computation (2PC). We develop new techniques to support secure arithmetic operations on shared decimal numbers, and propose MPC-friendly alternatives to non-linear functions such as sigmoid and softmax that are superior to prior work. We implement our system in C++. Our experiments validate that our protocols are several orders of magnitude faster than the state of the art implementations for privacy preserving linear and logistic regressions, and scale to millions of data samples with thousands of features. We also implement the first privacy preserving system for training neural networks.",
            "keywords": [
                "Privacy-Preserving Machine Learning",
                "Secure Two-Party Computation",
                "Stochastic Gradient Descent",
                "Non-Colluding Servers",
                "Secure Arithmetic Operations"
            ]
        },
        "url": "URL#3505220",
        "sema_paperId": "2b7f9117eb6608a58be4c078ca3d69c0e5ccb875"
    },
    {
        "@score": "1",
        "@id": "3505221",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "80/1239-7",
                        "text": "Jens M\u00fcller 0007"
                    },
                    {
                        "@pid": "138/0964",
                        "text": "Vladislav Mladenov"
                    },
                    {
                        "@pid": "27/8331",
                        "text": "Juraj Somorovsky"
                    },
                    {
                        "@pid": "58/5730",
                        "text": "J\u00f6rg Schwenk"
                    }
                ]
            },
            "title": "SoK: Exploiting Network Printers.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "213-230",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/MullerMSS17",
            "doi": "10.1109/SP.2017.47",
            "ee": "https://doi.org/10.1109/SP.2017.47",
            "url": "https://dblp.org/rec/conf/sp/MullerMSS17",
            "abstract": "The idea of a paperless office has been dreamed of for more than three decades. However, nowadays printers are still one of the most essential devices for daily work and common Internet users. Instead of removing them, printers evolved from simple devices into complex network computer systems, installed directly into company networks, and carrying considerable confidential data in their print jobs. This makes them to an attractive attack target. In this paper we conduct a large scale analysis of printer attacks and systematize our knowledge by providing a general methodology for security analyses of printers. Based on our methodology, we implemented an open-source tool called PRinter Exploitation Toolkit (PRET). We used PRET to evaluate 20 printer models from different vendors and found all of them to be vulnerable to at least one of the tested attacks. These attacks included, for example, simple DoS attacks or skilled attacks, extracting print jobs and system files. On top of our systematic analysis we reveal novel insights that enable attacks from the Internet by using advanced cross-site printing techniques, combined with printer CORS spoofing. Finally, we show how to apply our attacks to systems beyond typical printers like Google Cloud Print or document processing websites.",
            "keywords": [
                "Printer Security",
                "Network Printers",
                "Vulnerability Assessment",
                "Denial of Service Attacks",
                "Cross-Site Printing Techniques"
            ]
        },
        "url": "URL#3505221",
        "sema_paperId": "3b56cea1f5d57851cdc9371ca35bb6d426c3c22b"
    },
    {
        "@score": "1",
        "@id": "3505222",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "61/7355",
                        "text": "Van Chan Ngo"
                    },
                    {
                        "@pid": "201/9204",
                        "text": "Mario Dehesa-Azuara"
                    },
                    {
                        "@pid": "38/2612",
                        "text": "Matthew Fredrikson"
                    },
                    {
                        "@pid": "75/425",
                        "text": "Jan Hoffmann 0002"
                    }
                ]
            },
            "title": "Verifying and Synthesizing Constant-Resource Implementations with Types.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "710-728",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/NgoDFH17",
            "doi": "10.1109/SP.2017.53",
            "ee": "https://doi.org/10.1109/SP.2017.53",
            "url": "https://dblp.org/rec/conf/sp/NgoDFH17",
            "abstract": "Side channel attacks have been used to extract critical data such as encryption keys and confidential user data in a variety of adversarial settings. In practice, this threat is addressed by adhering to a constant-time programming discipline, which imposes strict constraints on the way in which programs are written. This introduces an additional hurdle for programmers faced with the already difficult task of writing secure code, highlighting the need for solutions that give the same source-level guarantees while supporting more natural programming models. We propose a novel type system for verifying that programs correctly implement constant-resource behavior. Our type system extends recent work on automatic amortized resource analysis (AARA), a set of techniques that automatically derive provable upper bounds on the resource consumption of programs. We devise new techniques that build on the potential method to achieve compositionality, precision, and automation. A strict global requirement that a program always maintains constant resource usage is too restrictive for most practical applications. It is sufficient to require that the program's resource behavior remain constant with respect to an attacker who is only allowed to observe part of the program's state and behavior. To account for this, our type system incorporates information flow tracking into its resource analysis. This allows our system to certify programs that need to violate the constant-time requirement in certain cases, as long as doing so does not leak confidential information to attackers. We formalize this guarantee by defining a new notion of resource-aware noninterference, and prove that our system enforces it. Finally, we show how our type inference algorithm can be used to synthesize a constant-time implementation from one that cannot be verified as secure, effectively repairing insecure programs automatically. We also show how a second novel AARA system that computes lower bounds on resource usage can be used to derive quantitative bounds on the amount of information that a program leaks through its resource use. We implemented each of these systems in Resource Aware ML, and show that it can be applied to verify constant-time behavior in a number of applicationsincluding encryption and decryption routines, database queries, and other resource-aware functionality.",
            "pdf_url": "",
            "keywords": [
                "Constant-Time Programming",
                "Resource Analysis",
                "Information Flow Tracking",
                "Noninterference",
                "Amortized Resource Analysis (AARA)"
            ]
        },
        "url": "URL#3505222"
    },
    {
        "@score": "1",
        "@id": "3505224",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "201/9235",
                        "text": "Katarzyna Olejnik"
                    },
                    {
                        "@pid": "82/5414",
                        "text": "Italo Dacosta"
                    },
                    {
                        "@pid": "201/9213",
                        "text": "Joana Soares Machado"
                    },
                    {
                        "@pid": "10/3024",
                        "text": "K\u00e9vin Huguenin"
                    },
                    {
                        "@pid": "58/10432",
                        "text": "Mohammad Emtiyaz Khan"
                    },
                    {
                        "@pid": "h/JPHubaux",
                        "text": "Jean-Pierre Hubaux"
                    }
                ]
            },
            "title": "SmarPer: Context-Aware and Automatic Runtime-Permissions for Mobile Devices.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "1058-1076",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/OlejnikDMHKH17",
            "doi": "10.1109/SP.2017.25",
            "ee": "https://doi.org/10.1109/SP.2017.25",
            "url": "https://dblp.org/rec/conf/sp/OlejnikDMHKH17",
            "abstract": "Permission systems are the main defense that mobile platforms, such as Android and iOS, offer to users to protect their private data from prying apps. However, due to the tension between usability and control, such systems have several limitations that often force users to overshare sensitive data. We address some of these limitations with SmarPer, an advanced permission mechanism for Android. To address the rigidity of current permission systems and their poor matching of users' privacy preferences, SmarPer relies on contextual information and machine learning methods to predict permission decisions at runtime. Note that the goal of SmarPer is to mimic the users' decisions, not to make privacy-preserving decisions per se. Using our SmarPer implementation, we collected 8,521 runtime permission decisions from 41 participants in real conditions. With this unique data set, we show that using an efficient Bayesian linear regression model results in a mean correct classification rate of 80% (\u00b13%). This represents a mean relative reduction of approximately 50% in the number of incorrect decisions when compared with a user-defined static permission policy, i.e., the model used in current permission systems. SmarPer also focuses on the suboptimal trade-off between privacy and utility, instead of only \"allow\" or \"deny\" type of decisions, SmarPer also offers an \"obfuscate\" option where users can still obtain utility by revealing partial information to apps. We implemented obfuscation techniques in SmarPer for different data types and evaluated them during our data collection campaign. Our results show that 73% of the participants found obfuscation useful and it accounted for almost a third of the total number of decisions. In short, we are the first to show, using a large dataset of real in situ permission decisions, that it is possible to learn users' unique decision patterns at runtime using contextual information while supporting data obfuscation, this is an important step towards automating the management of permissions in smartphones.",
            "keywords": [
                "Mobile Permission Management",
                "Context-Aware Permissions",
                "Runtime Permissions",
                "Data Obfuscation",
                "User Privacy Preferences"
            ]
        },
        "url": "URL#3505224",
        "sema_paperId": "126055c9105fb2694b62549f81c28dfd13f58860"
    },
    {
        "@score": "1",
        "@id": "3505226",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "61/1749",
                        "text": "Paul Pearce"
                    },
                    {
                        "@pid": "24/973",
                        "text": "Roya Ensafi"
                    },
                    {
                        "@pid": "53/10825",
                        "text": "Frank Li 0001"
                    },
                    {
                        "@pid": "87/840",
                        "text": "Nick Feamster"
                    },
                    {
                        "@pid": "p/VernPaxson",
                        "text": "Vern Paxson"
                    }
                ]
            },
            "title": "Augur: Internet-Wide Detection of Connectivity Disruptions.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "427-443",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/PearceELFP17",
            "doi": "10.1109/SP.2017.55",
            "ee": "https://doi.org/10.1109/SP.2017.55",
            "url": "https://dblp.org/rec/conf/sp/PearceELFP17",
            "abstract": "Anecdotes, news reports, and policy briefings collectively suggest that Internet censorship practices are pervasive. The scale and diversity of Internet censorship practices makes it difficult to precisely monitor where, when, and how censorship occurs, as well as what is censored. The potential risks in performing the measurements make this problem even more challenging. As a result, many accounts of censorship begin\u2014and end\u2014with anecdotes or short-term studies from only a handful of vantage points. We seek to instead continuously monitor information about Internet reachability, to capture the onset or termination of censorship across regions and ISPs. To achieve this goal, we introduce Augur, a method and accompanying system that utilizes TCP/IP side channels to measure reachability between two Internet locations without directly controlling a measurement vantage point at either location. Using these side channels, coupled with techniques to ensure safety by not implicating individual users, we develop scalable, statistically robust methods to infer network-layer filtering, and implement a corresponding system capable of performing continuous monitoring of global censorship. We validate our measurements of Internet-wide disruption in nearly 180 countries over 17 days against sites known to be frequently blocked, we also identify the countries where connectivity disruption is most prevalent.",
            "keywords": [
                "Internet Censorship",
                "Network Reachability",
                "Connectivity Disruptions",
                "Censorship Measurement",
                "Global Monitoring"
            ]
        },
        "url": "URL#3505226",
        "sema_paperId": "db1220282dc2c80f407d36882267a5312974979a"
    },
    {
        "@score": "1",
        "@id": "3505227",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "201/9221",
                        "text": "Mathias V. Pedersen"
                    },
                    {
                        "@pid": "24/2197",
                        "text": "Aslan Askarov"
                    }
                ]
            },
            "title": "From Trash to Treasure: Timing-Sensitive Garbage Collection.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "693-709",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/PedersenA17",
            "doi": "10.1109/SP.2017.64",
            "ee": "https://doi.org/10.1109/SP.2017.64",
            "url": "https://dblp.org/rec/conf/sp/PedersenA17",
            "abstract": "This paper studies information flows via timing channels in the presence ofautomatic memory management. We construct a series of example attacks thatillustrate that garbage collectors form a shared resource that can be used toreliably leak sensitive information at a rate of up to 1 byte/sec on a contemporarygeneral-purpose computer. The createdchannel is also observable across a network connection in a datacenter-likesetting. We subsequently present a design of automatic memory management that isprovably resilient against such attacks.",
            "keywords": [
                "Garbage Collection",
                "Timing Channels",
                "Memory Management",
                "Information Leakage",
                "Resilient Design"
            ]
        },
        "url": "URL#3505227",
        "sema_paperId": "b32aac2a4ec33ee509901d2e2eeaa6897a6e5ecc"
    },
    {
        "@score": "1",
        "@id": "3505228",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "149/2447",
                        "text": "Theofilos Petsios"
                    },
                    {
                        "@pid": "68/5424",
                        "text": "Adrian Tang"
                    },
                    {
                        "@pid": "s/SalvatoreJStolfo",
                        "text": "Salvatore J. Stolfo"
                    },
                    {
                        "@pid": "k/AngelosDKeromytis",
                        "text": "Angelos D. Keromytis"
                    },
                    {
                        "@pid": "74/28",
                        "text": "Suman Jana"
                    }
                ]
            },
            "title": "NEZHA: Efficient Domain-Independent Differential Testing.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "615-632",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/PetsiosTSKJ17",
            "doi": "10.1109/SP.2017.27",
            "ee": "https://doi.org/10.1109/SP.2017.27",
            "url": "https://dblp.org/rec/conf/sp/PetsiosTSKJ17",
            "abstract": "Differential testing uses similar programs as cross-referencing oracles to find semantic bugs that do not exhibit explicit erroneous behaviors like crashes or assertion failures. Unfortunately, existing differential testing tools are domain-specific and inefficient, requiring large numbers of test inputs to find a single bug. In this paper, we address these issues by designing and implementing NEZHA, an efficient input-format-agnostic differential testing framework. The key insight behind NEZHA's design is that current tools generate inputs by simply borrowing techniques designed for finding crash or memory corruption bugs in individual programs (e.g., maximizing code coverage). By contrast, NEZHA exploits the behavioral asymmetries between multiple test programs to focus on inputs that are more likely to trigger semantic bugs. We introduce the notion of \u03b4-diversity, which summarizes the observed asymmetries between the behaviors of multiple test applications. Based on \u03b4-diversity, we design two efficient domain-independent input generation mechanisms for differential testing, one gray-box and one black-box. We demonstrate that both of these input generation schemes are significantly more efficient than existing tools at finding semantic bugs in real-world, complex software. NEZHA's average rate of finding differences is 52 times and 27 times higher than that of Frankencerts and Mucerts, two popular domain-specific differential testing tools that check SSL/TLS certificate validation implementations, respectively. Moreover, performing differential testing with NEZHA results in 6 times more semantic bugs per tested input, compared to adapting state-of-the-art general-purpose fuzzers like American Fuzzy Lop (AFL) to differential testing by running them on individual test programs for input generation. NEZHA discovered 778 unique, previously unknown discrepancies across a wide variety of applications (ELF and XZ parsers, PDF viewers and SSL/TLS libraries), many of which constitute previously unknown critical security vulnerabilities. In particular, we found two critical evasion attacks against ClamAV, allowing arbitrary malicious ELF/XZ files to evade detection. The discrepancies NEZHA found in the X.509 certificate validation implementations of the tested SSL/TLS libraries range from mishandling certain types of KeyUsage extensions, to incorrect acceptance of specially crafted expired certificates, enabling man-in-the-middle attacks. All of our reported vulnerabilities have been confirmed and fixed within a week from the date of reporting.",
            "keywords": [
                "Differential Testing",
                "Semantic Bugs",
                "Input Generation",
                "Behavioral Asymmetries",
                "\u03b4-Diversity"
            ]
        },
        "url": "URL#3505228",
        "sema_paperId": "0b549912e5f111c7c60eadda634ef4484427b684"
    },
    {
        "@score": "1",
        "@id": "3505234",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "90/130",
                        "text": "Davide Quarta"
                    },
                    {
                        "@pid": "152/9286",
                        "text": "Marcello Pogliani"
                    },
                    {
                        "@pid": "163/9937",
                        "text": "Mario Polino"
                    },
                    {
                        "@pid": "70/2534",
                        "text": "Federico Maggi"
                    },
                    {
                        "@pid": "13/8366",
                        "text": "Andrea Maria Zanchettin"
                    },
                    {
                        "@pid": "z/StefanoZanero",
                        "text": "Stefano Zanero"
                    }
                ]
            },
            "title": "An Experimental Security Analysis of an Industrial Robot Controller.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "268-286",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/QuartaPPMZZ17",
            "doi": "10.1109/SP.2017.20",
            "ee": "https://doi.org/10.1109/SP.2017.20",
            "url": "https://dblp.org/rec/conf/sp/QuartaPPMZZ17",
            "abstract": "Industrial robots, automated manufacturing, and efficient logistics processes are at the heart of the upcoming fourth industrial revolution. While there are seminal studies on the vulnerabilities of cyber-physical systems in the industry, as of today there has been no systematic analysis of the security of industrial robot controllers. We examine the standard architecture of an industrial robot and analyze a concrete deployment from a systems security standpoint. Then, we propose an attacker model and confront it with the minimal set of requirements that industrial robots should honor: precision in sensing the environment, correctness in execution of control logic, and safety for human operators. Following an experimental and practical approach, we then show how our modeled attacker can subvert such requirements through the exploitation of software vulnerabilities, leading to severe consequences that are unique to the robotics domain. We conclude by discussing safety standards and security challenges in industrial robotics.",
            "keywords": [
                "Industrial Robot Security",
                "Cyber-Physical Systems",
                "Attacker Model",
                "Software Vulnerabilities",
                "Safety Standards"
            ]
        },
        "url": "URL#3505234",
        "sema_paperId": "70458418dbc487e2497295f16cb94bc9a1c6fa4d"
    },
    {
        "@score": "1",
        "@id": "3505236",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "180/7297",
                        "text": "Eyal Ronen"
                    },
                    {
                        "@pid": "s/AdiShamir",
                        "text": "Adi Shamir"
                    },
                    {
                        "@pid": "189/1578",
                        "text": "Achi-Or Weingarten"
                    },
                    {
                        "@pid": "77/3571",
                        "text": "Colin O&apos;Flynn"
                    }
                ]
            },
            "title": "IoT Goes Nuclear: Creating a ZigBee Chain Reaction.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "195-212",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/RonenSWO17",
            "doi": "10.1109/SP.2017.14",
            "ee": "https://doi.org/10.1109/SP.2017.14",
            "url": "https://dblp.org/rec/conf/sp/RonenSWO17",
            "abstract": "Within the next few years, billions of IoT devices will densely populate our cities. In this paper we describe a new type of threat in which adjacent IoT devices will infect each other with a worm that will rapidly spread over large areas, provided that the density of compatible IoT devices exceeds a certain critical mass. In particular, we developed and verified such an infection using the popular Philips Hue smart lamps as a platform. The worm spreads by jumping directly from one lamp to its neighbors, using only their built-in ZigBee wireless connectivity and their physical proximity. The attack can start by plugging in a single infected bulb anywhere in the city, and then catastrophically spread everywhere within minutes. It enables the attacker to turn all the city lights on or off, to permanently brick them, or to exploit them in a massive DDOS attack. To demonstrate the risks involved, we use results from percolation theory to estimate the critical mass of installed devices for a typical city such as Paris whose area is about 105 square kilometers: The chain reaction will fizzle if there are fewer than about 15,000 randomly located smart lamps in the whole city, but will spread everywhere when the number exceeds this critical mass (which had almost certainly been surpassed already). To make such an attack possible, we had to find a way to remotely yank already installed lamps from their current networks, and to perform over-the-air firmware updates. We overcame the first problem by discovering and exploiting a major bug in the implementation of the Touchlink part of the ZigBee Light Link protocol, which is supposed to stop such attempts with a proximity test. To solve the second problem, we developed a new version of a side channel attack to extract the global AES-CCM key (for each device type) that Philips uses to encrypt and authenticate new firmware. We used only readily available equipment costing a few hundred dollars, and managed to find this key without seeing any actual updates. This demonstrates once again how difficult it is to get security right even for a large company that uses standard cryptographic techniques to protect a major product.",
            "keywords": [
                "IoT Security",
                "ZigBee Protocol",
                "Worm Infection",
                "Smart Lamp Vulnerabilities",
                "Percolation Theory"
            ]
        },
        "url": "URL#3505236",
        "sema_paperId": "e79f66525f923afafc004043575f84ebe1a2b6a6"
    },
    {
        "@score": "1",
        "@id": "3505243",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "20/3101",
                        "text": "Reza Shokri"
                    },
                    {
                        "@pid": "117/3772",
                        "text": "Marco Stronati"
                    },
                    {
                        "@pid": "186/8335",
                        "text": "Congzheng Song"
                    },
                    {
                        "@pid": "46/6275",
                        "text": "Vitaly Shmatikov"
                    }
                ]
            },
            "title": "Membership Inference Attacks Against Machine Learning Models.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "3-18",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/ShokriSSS17",
            "doi": "10.1109/SP.2017.41",
            "ee": "https://doi.org/10.1109/SP.2017.41",
            "url": "https://dblp.org/rec/conf/sp/ShokriSSS17",
            "abstract": "We quantitatively investigate how machine learning models leak information about the individual data records on which they were trained. We focus on the basic membership inference attack: given a data record and black-box access to a model, determine if the record was in the model's training dataset. To perform membership inference against a target model, we make adversarial use of machine learning and train our own inference model to recognize differences in the target model's predictions on the inputs that it trained on versus the inputs that it did not train on. We empirically evaluate our inference techniques on classification models trained by commercial \"machine learning as a service\" providers such as Google and Amazon. Using realistic datasets and classification tasks, including a hospital discharge dataset whose membership is sensitive from the privacy perspective, we show that these models can be vulnerable to membership inference attacks. We then investigate the factors that influence this leakage and evaluate mitigation strategies.",
            "pdf_url": "",
            "keywords": [
                "Membership Inference Attacks",
                "Privacy Leakage",
                "Model Inference",
                "Training Data Membership",
                "Mitigation Strategies"
            ]
        },
        "url": "URL#3505243"
    },
    {
        "@score": "1",
        "@id": "3505244",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "168/9531",
                        "text": "Suphannee Sivakorn"
                    },
                    {
                        "@pid": "145/1793",
                        "text": "George Argyros"
                    },
                    {
                        "@pid": "145/6061",
                        "text": "Kexin Pei"
                    },
                    {
                        "@pid": "k/AngelosDKeromytis",
                        "text": "Angelos D. Keromytis"
                    },
                    {
                        "@pid": "74/28",
                        "text": "Suman Jana"
                    }
                ]
            },
            "title": "HVLearn: Automated Black-Box Analysis of Hostname Verification in SSL/TLS Implementations.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "521-538",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/SivakornAPKJ17",
            "doi": "10.1109/SP.2017.46",
            "ee": "https://doi.org/10.1109/SP.2017.46",
            "url": "https://dblp.org/rec/conf/sp/SivakornAPKJ17",
            "abstract": "SSL/TLS is the most commonly deployed family of protocols for securing network communications. The security guarantees of SSL/TLS are critically dependent on the correct validation of the X.509 server certificates presented during the handshake stage of the SSL/TLS protocol. Hostname verification is a critical component of the certificate validation process that verifies the remote server's identity by checking if the hostname of the server matches any of the names present in the X.509 certificate. Hostname verification is a highly complex process due to the presence of numerous features and corner cases such as wildcards, IP addresses, international domain names, and so forth. Therefore, testing hostname verification implementations present a challenging task. In this paper, we present HVLearn, a novel black-box testing framework for analyzing SSL/TLS hostname verification implementations, which is based on automata learning algorithms. HVLearn utilizes a number of certificate templates, i.e., certificates with a common name (CN) set to a specific pattern, in order to test different rules from the corresponding specification. For each certificate template, HVLearn uses automata learning algorithms to infer a Deterministic Finite Automaton (DFA) that describes the set of all hostnames that match the CN of a given certificate. Once a model is inferred for a certificate template, HVLearn checks the model for bugs by finding discrepancies with the inferred models from other implementations or by checking against regular-expression-based rules derived from the specification. The key insight behind our approach is that the acceptable hostnames for a given certificate template form a regular language. Therefore, we can leverage automata learning techniques to efficiently infer DFA models that accept the corresponding regular language. We use HVLearn to analyze the hostname verification implementations in a number of popular SSL/TLS libraries and applications written in a diverse set of languages like C, Python, and Java. We demonstrate that HVLearn can achieve on average 11.21% higher code coverage than existing black/gray-box fuzzing techniques. By comparing the DFA models inferred by HVLearn, we found 8 unique violations of the RFC specifications in the tested hostname verification implementations. Several of these violations are critical and can render the affected implementations vulnerable to active man-in-the-middle attacks.",
            "keywords": [
                "SSL/TLS Protocols",
                "Hostname Verification",
                "Automata Learning",
                "Black-Box Testing",
                "X.509 Certificate Validation"
            ]
        },
        "url": "URL#3505244",
        "sema_paperId": "e6662b0a3c7ef8f4d6318fc26f1062b0bb7a06d7"
    },
    {
        "@score": "1",
        "@id": "3505245",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "04/5072",
                        "text": "Adam D. Smith 0001"
                    },
                    {
                        "@pid": "31/8315",
                        "text": "Abhradeep Thakurta"
                    },
                    {
                        "@pid": "23/10309",
                        "text": "Jalaj Upadhyay"
                    }
                ]
            },
            "title": "Is Interaction Necessary for Distributed Private Learning?",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "58-77",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/SmithTU17",
            "doi": "10.1109/SP.2017.35",
            "ee": "https://doi.org/10.1109/SP.2017.35",
            "url": "https://dblp.org/rec/conf/sp/SmithTU17",
            "abstract": "Recent large-scale deployments of differentially private algorithms employ the local model for privacy (sometimes called PRAM or randomized response), where data are randomized on each individual's device before being sent to a server that computes approximate, aggregate statistics. The server need not be trusted for privacy, leaving data control in users' hands. For an important class of convex optimization problems (including logistic regression, support vector machines, and the Euclidean median), the best known locally differentially-private algorithms are highly interactive, requiring as many rounds of back and forth as there are users in the protocol. We ask: how much interaction is necessary to optimize convex functions in the local DP model? Existing lower bounds either do not apply to convex optimization, or say nothing about interaction. We provide new algorithms which are either noninteractive or use relatively few rounds of interaction. We also show lower bounds on the accuracy of an important class of noninteractive algorithms, suggesting a separation between what is possible with and without interaction.",
            "keywords": [
                "Differential Privacy",
                "Local Model",
                "Convex Optimization",
                "Noninteractive Algorithms",
                "Interaction Complexity"
            ]
        },
        "url": "URL#3505245",
        "sema_paperId": "caead4b535884d058aaff54b05d863dd0eb3dcbc"
    },
    {
        "@score": "1",
        "@id": "3505246",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "124/3091",
                        "text": "Yunpeng Song"
                    },
                    {
                        "@pid": "05/7884",
                        "text": "Zhongmin Cai"
                    },
                    {
                        "@pid": "07/5905",
                        "text": "Zhi-Li Zhang"
                    }
                ]
            },
            "title": "Multi-touch Authentication Using Hand Geometry and Behavioral Information.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "357-372",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/SongCZ17",
            "doi": "10.1109/SP.2017.54",
            "ee": "https://doi.org/10.1109/SP.2017.54",
            "url": "https://dblp.org/rec/conf/sp/SongCZ17",
            "abstract": "In this paper we present a simple and reliable authentication method for mobile devices equipped with multi-touch screens such as smart phones, tablets and laptops. Users are authenticated by performing specially designed multi-touch gestures with one swipe on the touchscreen. During this process, both hand geometry and behavioral characteristics are recorded in the multi-touch traces and used for authentication. By combining both geometry information and behavioral characteristics, we overcome the problem of behavioral variability plaguing many behavior based authentication techniques \u2013 which often leads to less accurate authentication or poor user experience \u2013 while also ensuring the discernibility of different users with possibly similar handshapes. We evaluate the design of the proposed authentication method thoroughly using a large multi-touch dataset collected from 161 subjects with an elaborately designed procedure to capture behavior variability. The results demonstrate that the fusion of behavioral information with hand geometry features produces effective resistance to behavioral variability over time while at the same time retains discernibility. Our approach achieves EER of 5.84% with only 5 training samples and the performance is further improved to EER of 1.88% with enough training. Security analyses are also conducted to demonstrate that the proposed method is resilient against common smartphone authentication threats such as smudge attack, shoulder surfing attack and statistical attack. Finally, user acceptance of the method is illustrated via a usability study.",
            "keywords": [
                "Multi-touch Authentication",
                "Hand Geometry",
                "Behavioral Characteristics",
                "User Authentication",
                "Behavioral Variability"
            ]
        },
        "url": "URL#3505246",
        "sema_paperId": "452c89bff8a61fe33430ed55bb6a68b90df806a4"
    },
    {
        "@score": "1",
        "@id": "3505247",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "134/8950",
                        "text": "Oleksii Starov"
                    },
                    {
                        "@pid": "04/8280",
                        "text": "Nick Nikiforakis"
                    }
                ]
            },
            "title": "XHOUND: Quantifying the Fingerprintability of Browser Extensions.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "941-956",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/StarovN17",
            "doi": "10.1109/SP.2017.18",
            "ee": "https://doi.org/10.1109/SP.2017.18",
            "url": "https://dblp.org/rec/conf/sp/StarovN17",
            "abstract": "In recent years, researchers have shown that unwanted web tracking is on the rise, as advertisers are trying to capitalize on users' online activity, using increasingly intrusive and sophisticated techniques. Among these, browser fingerprinting has received the most attention since it allows trackers to uniquely identify users despite the clearing of cookies and the use of a browser's private mode. In this paper, we investigate and quantify the fingerprintability of browser extensions, such as, AdBlock and Ghostery. We show that an extension's organic activity in a page's DOM can be used to infer its presence, and develop XHound, the first fully automated system for fingerprinting browser extensions. By applying XHound to the 10,000 most popular Google Chrome extensions, we find that a significant fraction of popular browser extensions are fingerprintable and could thus be used to supplement existing fingerprinting methods. Moreover, by surveying the installed extensions of 854 users, we discover that many users tend to install different sets of fingerprintable browser extensions and could thus be uniquely, or near-uniquely identifiable by extension-based fingerprinting. We use XHound's results to build a proof-of-concept extension-fingerprinting script and show that trackers can fingerprint tens of extensions in just a few seconds. Finally, we describe why the fingerprinting of extensions is more intrusive than the fingerprinting of other browser and system properties, and sketch two different approaches towards defending against extension-based fingerprinting.",
            "keywords": [
                "Browser Fingerprinting",
                "Web Tracking",
                "Browser Extensions",
                "Fingerprintability",
                "User Identification"
            ]
        },
        "url": "URL#3505247",
        "sema_paperId": "c48341fddb8779c645af39f717253f05ab3ad4e0"
    },
    {
        "@score": "1",
        "@id": "3505248",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "139/9789",
                        "text": "Yixin Sun"
                    },
                    {
                        "@pid": "126/2313",
                        "text": "Anne Edmundson"
                    },
                    {
                        "@pid": "87/840",
                        "text": "Nick Feamster"
                    },
                    {
                        "@pid": "61/5309",
                        "text": "Mung Chiang"
                    },
                    {
                        "@pid": "39/6266",
                        "text": "Prateek Mittal"
                    }
                ]
            },
            "title": "Counter-RAPTOR: Safeguarding Tor Against Active Routing Attacks.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "977-992",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/SunEFCM17",
            "doi": "10.1109/SP.2017.34",
            "ee": "https://doi.org/10.1109/SP.2017.34",
            "url": "https://dblp.org/rec/conf/sp/SunEFCM17",
            "abstract": "Tor is vulnerable to network-level adversaries who can observe both ends of the communication to deanonymize users. Recent work has shown that Tor is susceptible to the previously unknown active BGP routing attacks, called RAPTOR attacks, which expose Tor users to more network-level adversaries. In this paper, we aim to mitigate and detect such active routing attacks against Tor. First, we present a new measurement study on the resilience of the Tor network to active BGP prefix attacks. We show that ASes with high Tor bandwidth can be less resilient to attacks than other ASes. Second, we present a new Tor guard relay selection algorithm that incorporates resilience of relays into consideration to proactively mitigate such attacks. We show that the algorithm successfully improves the security for Tor clients by up to 36% on average (up to 166% for certain clients). Finally, we build a live BGP monitoring system that can detect routing anomalies on the Tor network in real time by performing an AS origin check and novel detection analytics. Our monitoring system successfully detects simulated attacks that are modeled after multiple known attack types as well as a real-world hijack attack (performed by us), while having low false positive rates.",
            "keywords": [
                "Tor Network",
                "Active Routing Attacks",
                "BGP Prefix Attacks",
                "Relay Selection Algorithm",
                "Routing Anomalies Detection"
            ]
        },
        "url": "URL#3505248",
        "sema_paperId": "08d0d3e3ecb7914e8b29edbca4ab70f39c3822b7"
    },
    {
        "@score": "1",
        "@id": "3505249",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "12/7905",
                        "text": "Ewa Syta"
                    },
                    {
                        "@pid": "14/11314",
                        "text": "Philipp Jovanovic"
                    },
                    {
                        "@pid": "176/5301",
                        "text": "Eleftherios Kokoris-Kogias"
                    },
                    {
                        "@pid": "176/5570",
                        "text": "Nicolas Gailly"
                    },
                    {
                        "@pid": "122/9716",
                        "text": "Linus Gasser"
                    },
                    {
                        "@pid": "176/5341",
                        "text": "Ismail Khoffi"
                    },
                    {
                        "@pid": "f/MichaelJFischer",
                        "text": "Michael J. Fischer"
                    },
                    {
                        "@pid": "f/BryanFord",
                        "text": "Bryan Ford"
                    }
                ]
            },
            "title": "Scalable Bias-Resistant Distributed Randomness.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "444-460",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/SytaJKGGKFF17",
            "doi": "10.1109/SP.2017.45",
            "ee": "https://doi.org/10.1109/SP.2017.45",
            "url": "https://dblp.org/rec/conf/sp/SytaJKGGKFF17",
            "abstract": "Bias-resistant public randomness is a critical component in many (distributed) protocols. Generating public randomness is hard, however, because active adversaries may behave dishonestly to bias public random choices toward their advantage. Existing solutions do not scale to hundreds or thousands of participants, as is needed in many decentralized systems. We propose two large-scale distributed protocols, RandHound and RandHerd, which provide publicly-verifiable, unpredictable, and unbiasable randomness against Byzantine adversaries. RandHound relies on an untrusted client to divide a set of randomness servers into groups for scalability, and it depends on the pigeonhole principle to ensure output integrity, even for non-random, adversarial group choices. RandHerd implements an efficient, decentralized randomness beacon. RandHerd is structurally similar to a BFT protocol, but uses RandHound in a one-time setup to arrange participants into verifiably unbiased random secret-sharing groups, which then repeatedly produce random output at predefined intervals. Our prototype demonstrates that RandHound and RandHerd achieve good performance across hundreds of participants while retaining a low failure probability by properly selecting protocol parameters, such as a group size and secret-sharing threshold. For example, when sharding 512 nodes into groups of 32, our experiments show that RandHound can produce fresh random output after 240 seconds. RandHerd, after a setup phase of 260 seconds, is able to generate fresh random output in intervals of approximately 6 seconds. For this configuration, both protocols operate at a failure probability of at most 0.08% against a Byzantine adversary.",
            "pdf_url": "",
            "keywords": [
                "Distributed Randomness",
                "Byzantine Fault Tolerance",
                "Public Randomness Generation",
                "Scalable Protocols",
                "Bias-Resistant Randomness"
            ]
        },
        "url": "URL#3505249"
    },
    {
        "@score": "1",
        "@id": "3505250",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "119/7737",
                        "text": "Alin Tomescu"
                    },
                    {
                        "@pid": "14/3973",
                        "text": "Srinivas Devadas"
                    }
                ]
            },
            "title": "Catena: Efficient Non-equivocation via Bitcoin.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "393-409",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/TomescuD17",
            "doi": "10.1109/SP.2017.19",
            "ee": "https://doi.org/10.1109/SP.2017.19",
            "url": "https://dblp.org/rec/conf/sp/TomescuD17",
            "abstract": "We present Catena, an efficiently-verifiable Bitcoinwitnessing scheme. Catena enables any number of thin clients, such as mobile phones, to efficiently agree on a log of application-specific statements managed by an adversarial server. Catenaimplements a log as an OP_RETURN transaction chain andprevents forks in the log by leveraging Bitcoin's security againstdouble spends. Specifically, if a log server wants to equivocate ithas to double spend a Bitcoin transaction output. Thus, Catenalogs are as hard to fork as the Bitcoin blockchain: an adversarywithout a large fraction of the network's computational powercannot fork Bitcoin and thus cannot fork a Catena log either. However, different from previous Bitcoin-based work, Catenadecreases the bandwidth requirements of log auditors from 90GB to only tens of megabytes. More precisely, our clients onlyneed to download all Bitcoin block headers (currently less than35 MB) and a small, 600-byte proof for each statement in a block. We implement Catena in Java using the bitcoinj library and use itto extend CONIKS, a recent key transparency scheme, to witnessits public-key directory in the Bitcoin blockchain where it can beefficiently verified by auditors. We show that Catena can securemany systems today, such as public-key directories, Tor directoryservers and software transparency schemes.",
            "keywords": [
                "Bitcoin-based Witnessing",
                "Log Management",
                "Non-equivocation",
                "Efficient Verification",
                "Thin Clients"
            ]
        },
        "url": "URL#3505250",
        "sema_paperId": "17e97ec4353a76664a0d665fb3839bea3e09aaa1"
    },
    {
        "@score": "1",
        "@id": "3505254",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "14/1915-7",
                        "text": "Junjie Wang 0007"
                    },
                    {
                        "@pid": "61/9197",
                        "text": "Bihuan Chen 0001"
                    },
                    {
                        "@pid": "99/4916",
                        "text": "Lei Wei"
                    },
                    {
                        "@pid": "51/3710-3",
                        "text": "Yang Liu 0003"
                    }
                ]
            },
            "title": "Skyfire: Data-Driven Seed Generation for Fuzzing.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "579-594",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/WangCWL17",
            "doi": "10.1109/SP.2017.23",
            "ee": "https://doi.org/10.1109/SP.2017.23",
            "url": "https://dblp.org/rec/conf/sp/WangCWL17",
            "abstract": "Programs that take highly-structured files as inputs normally process inputs in stages: syntax parsing, semantic checking, and application execution. Deep bugs are often hidden in the application execution stage, and it is non-trivial to automatically generate test inputs to trigger them. Mutation-based fuzzing generates test inputs by modifying well-formed seed inputs randomly or heuristically. Most inputs are rejected at the early syntax parsing stage. Differently, generation-based fuzzing generates inputs from a specification (e.g., grammar). They can quickly carry the fuzzing beyond the syntax parsing stage. However, most inputs fail to pass the semantic checking (e.g., violating semantic rules), which restricts their capability of discovering deep bugs. In this paper, we propose a novel data-driven seed generation approach, named Skyfire, which leverages the knowledge in the vast amount of existing samples to generate well-distributed seed inputs for fuzzing programs that process highly-structured inputs. Skyfire takes as inputs a corpus and a grammar, and consists of two steps. The first step of Skyfire learns a probabilistic context-sensitive grammar (PCSG) to specify both syntax features and semantic rules, and then the second step leverages the learned PCSG to generate seed inputs. We fed the collected samples and the inputs generated by Skyfire as seeds of AFL to fuzz several open-source XSLT and XML engines (i.e., Sablotron, libxslt, and libxml2). The results have demonstrated that Skyfire can generate well-distributed inputs and thus significantly improve the code coverage (i.e., 20% for line coverage and 15% for function coverage on average) and the bug-finding capability of fuzzers. We also used the inputs generated by Skyfire to fuzz the closed-source JavaScript and rendering engine of Internet Explorer 11. Altogether, we discovered 19 new memory corruption bugs (among which there are 16 new vulnerabilities and received 33.5k USD bug bounty rewards) and 32 denial-of-service bugs.",
            "keywords": [
                "Fuzzing",
                "Seed Generation",
                "Probabilistic Context-Sensitive Grammar",
                "Deep Bugs",
                "Input Generation"
            ]
        },
        "url": "URL#3505254",
        "sema_paperId": "fef524c90ba47e5b3a062727fd6342240063fda7"
    },
    {
        "@score": "1",
        "@id": "3505255",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "56/4499-23",
                        "text": "Liang Wang 0023"
                    },
                    {
                        "@pid": "139/2372",
                        "text": "Paul Grubbs"
                    },
                    {
                        "@pid": "96/939",
                        "text": "Jiahui Lu"
                    },
                    {
                        "@pid": "117/2526",
                        "text": "Vincent Bindschaedler"
                    },
                    {
                        "@pid": "68/158",
                        "text": "David Cash"
                    },
                    {
                        "@pid": "26/3399",
                        "text": "Thomas Ristenpart"
                    }
                ]
            },
            "title": "Side-Channel Attacks on Shared Search Indexes.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "673-692",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/WangGLBCR17",
            "doi": "10.1109/SP.2017.50",
            "ee": "https://doi.org/10.1109/SP.2017.50",
            "url": "https://dblp.org/rec/conf/sp/WangGLBCR17",
            "abstract": "Full-text search systems, such as Elasticsearch and Apache Solr, enable document retrieval based on keyword queries. In many deployments these systems are multi-tenant, meaning distinct users' documents reside in, and their queries are answered by, one or more shared search indexes. Large deployments may use hundreds of indexes across which user documents are randomly assigned. The results of a search query are filtered to remove documents to which a client should not have access. We show the existence of exploitable side channels in modern multi-tenant search. The starting point for our attacks is a decade-old observation that the TF-IDF scores used to rank search results can potentially leak information about other users' documents. To the best of our knowledge, no attacks have been shown that exploit this side channel in practice, and constructing a working side channel requires overcoming numerous challenges in real deployments. We nevertheless develop a new attack, called STRESS (Search Text RElevance Score Side channel), and in so doing show how an attacker can map out the number of indexes used by a service, obtain placement of a document within each index, and then exploit co-tenancy with all other users to (1) discover the terms in other tenants' documents or (2) determine the number of documents (belonging to other tenants) that contain a term of interest. In controlled experiments, we demonstrate the attacks on popular services such as GitHub and Xen.do. We conclude with a discussion of countermeasures.",
            "keywords": [
                "Multi-Tenant Search Systems",
                "Side-Channel Attacks",
                "TF-IDF Scores",
                "Document Retrieval",
                "Information Leakage"
            ]
        },
        "url": "URL#3505255",
        "sema_paperId": "96b92737b6a37901b67fb1cac786dbe0aa9e8f50"
    },
    {
        "@score": "1",
        "@id": "3505257",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "162/0214",
                        "text": "Primal Wijesekera"
                    },
                    {
                        "@pid": "161/9928",
                        "text": "Arjun Baokar"
                    },
                    {
                        "@pid": "180/5452",
                        "text": "Lynn Tsai"
                    },
                    {
                        "@pid": "04/8882",
                        "text": "Joel Reardon"
                    },
                    {
                        "@pid": "07/1108",
                        "text": "Serge Egelman"
                    },
                    {
                        "@pid": "42/5626",
                        "text": "David A. Wagner 0001"
                    },
                    {
                        "@pid": "47/6517",
                        "text": "Konstantin Beznosov"
                    }
                ]
            },
            "title": "The Feasibility of Dynamically Granted Permissions: Aligning Mobile Privacy with User Preferences.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "1077-1093",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/WijesekeraBTREW17",
            "doi": "10.1109/SP.2017.51",
            "ee": "https://doi.org/10.1109/SP.2017.51",
            "url": "https://dblp.org/rec/conf/sp/WijesekeraBTREW17",
            "abstract": "Current smartphone operating systems regulate application permissions by prompting users on an ask-on-first-use basis. Prior research has shown that this method is ineffective because it fails to account for context: the circumstances under which an application first requests access to data may be vastly different than the circumstances under which it subsequently requests access. We performed a longitudinal 131-person field study to analyze the contextuality behind user privacy decisions to regulate access to sensitive resources. We built a classifier to make privacy decisions on the user's behalf by detecting when context has changed and, when necessary, inferring privacy preferences based on the user's past decisions and behavior. Our goal is to automatically grant appropriate resource requests without further user intervention, deny inappropriate requests, and only prompt the user when the system is uncertain of the user's preferences. We show that our approach can accurately predict users' privacy decisions 96.8% of the time, which is a four-fold reduction in error rate compared to current systems.",
            "keywords": [
                "Mobile Privacy",
                "Dynamic Permissions",
                "User Context",
                "Privacy Preferences",
                "Contextual Access Control"
            ]
        },
        "url": "URL#3505257",
        "sema_paperId": "466703f30f9a9563d382b7618f260b7c5b77eab1"
    },
    {
        "@score": "1",
        "@id": "3505258",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "158/2764",
                        "text": "Dongpeng Xu 0001"
                    },
                    {
                        "@pid": "09/6585-2",
                        "text": "Jiang Ming 0002"
                    },
                    {
                        "@pid": "54/2696",
                        "text": "Dinghao Wu"
                    }
                ]
            },
            "title": "Cryptographic Function Detection in Obfuscated Binaries via Bit-Precise Symbolic Loop Mapping.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "921-937",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/XuMW17",
            "doi": "10.1109/SP.2017.56",
            "ee": "https://doi.org/10.1109/SP.2017.56",
            "url": "https://dblp.org/rec/conf/sp/XuMW17",
            "abstract": "Cryptographic functions have been commonly abused by malware developers to hide malicious behaviors, disguise destructive payloads, and bypass network-based firewalls. Now-infamous crypto-ransomware even encrypts victim's computer documents until a ransom is paid. Therefore, detecting cryptographic functions in binary code is an appealing approach to complement existing malware defense and forensics. However, pervasive control and data obfuscation schemes make cryptographic function identification a challenging work. Existing detection methods are either brittle to work on obfuscated binaries or ad hoc in that they can only identify specific cryptographic functions. In this paper, we propose a novel technique called bit-precise symbolic loop mapping to identify cryptographic functions in obfuscated binary code. Our trace-based approach captures the semantics of possible cryptographic algorithms with bit-precise symbolic execution in a loop. Then we perform guided fuzzing to efficiently match boolean formulas with known reference implementations. We have developed a prototype called CryptoHunt and evaluated it with a set of obfuscated synthetic examples, well-known cryptographic libraries, and malware. Compared with the existing tools, CryptoHunt is a general approach to detecting commonly used cryptographic functions such as TEA, AES, RC4, MD5, and RSA under different control and data obfuscation scheme combinations.",
            "keywords": [
                "Cryptographic Function Detection",
                "Obfuscated Binaries",
                "Symbolic Execution",
                "Malware Analysis",
                "CryptoHunt"
            ]
        },
        "url": "URL#3505258",
        "sema_paperId": "3a9a6e20242ccb36ce09157988d4ad02d84dd800"
    },
    {
        "@score": "1",
        "@id": "3505259",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "54/4089",
                        "text": "Hao Yang"
                    },
                    {
                        "@pid": "201/9243",
                        "text": "Xiulin Ma"
                    },
                    {
                        "@pid": "150/8306",
                        "text": "Kun Du"
                    },
                    {
                        "@pid": "62/4119-1",
                        "text": "Zhou Li 0001"
                    },
                    {
                        "@pid": "36/5143",
                        "text": "Hai-Xin Duan"
                    },
                    {
                        "@pid": "13/9969",
                        "text": "XiaoDong Su"
                    },
                    {
                        "@pid": "193/2510",
                        "text": "Guang Liu"
                    },
                    {
                        "@pid": "201/9253",
                        "text": "Zhifeng Geng"
                    },
                    {
                        "@pid": "82/4905",
                        "text": "Jianping Wu"
                    }
                ]
            },
            "title": "How to Learn Klingon without a Dictionary: Detection and Measurement of Black Keywords Used by the Underground Economy.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "751-769",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/YangMDLDSLGW17",
            "doi": "10.1109/SP.2017.11",
            "ee": "https://doi.org/10.1109/SP.2017.11",
            "url": "https://dblp.org/rec/conf/sp/YangMDLDSLGW17",
            "abstract": "Online underground economy is an important channel that connects the merchants of illegal products and their buyers, which is also constantly monitored by legal authorities. As one common way for evasion, the merchants and buyers together create a vocabulary of jargons (called \"black keywords\" in this paper) to disguise the transaction (e.g., \"smack\" is one street name for \"heroin\" [1]). Black keywords are often \"unfriendly\" to the outsiders, which are created by either distorting the original meaning of common words or tweaking other black keywords. Understanding black keywords is of great importance to track and disrupt the underground economy, but it is also prohibitively difficult: the investigators have to infiltrate the inner circle of criminals to learn their meanings, a task both risky and time-consuming. In this paper, we make the first attempt towards capturing and understanding the ever-changing black keywords. We investigated the underground business promoted through blackhat SEO (search engine optimization) and demonstrate that the black keywords targeted by the SEOers can be discovered through a fully automated approach. Our insights are two-fold: first, the pages indexed under black keywords are more likely to contain malicious or fraudulent content (e.g., SEO pages) and alarmed by off-the-shelf detectors, second, people tend to query multiple similar black keywords to find the merchandise. Therefore, we could infer whether a search keyword is \"black\" by inspecting the associated search results and then use the related search queries to extend our findings. To this end, we built a system called KDES (Keywords Detection and Expansion System), and applied it to the search results of Baidu, China's top search engine. So far, we have already identified 478,879 black keywords which were clustered under 1,522 core words based on text similarity. We further extracted the information like emails, mobile phone numbers and instant messenger IDs from the pages and domains relevant to the underground business. Such information helps us gain better understanding about the underground economy of China in particular. In addition, our work could help search engine vendors purify the search results and disrupt the channel of the underground market. Our co-authors from Baidu compared our results with their blacklist, found many of them (e.g., long-tail and obfuscated keywords) were not in it, and then added them to Baidu's internal blacklist.",
            "keywords": [
                "Underground Economy",
                "Black Keywords",
                "Blackhat SEO",
                "Keyword Detection",
                "Information Extraction"
            ]
        },
        "url": "URL#3505259",
        "sema_paperId": "e636af181a19a7a58f7d233a58481676e9031f8d"
    },
    {
        "@score": "1",
        "@id": "3505261",
        "info": {
            "authors": {
                "author": [
                    {
                        "@pid": "82/4816-1",
                        "text": "Yupeng Zhang 0001"
                    },
                    {
                        "@pid": "98/8283",
                        "text": "Daniel Genkin"
                    },
                    {
                        "@pid": "k/JonathanKatz",
                        "text": "Jonathan Katz"
                    },
                    {
                        "@pid": "18/9002",
                        "text": "Dimitrios Papadopoulos 0001"
                    },
                    {
                        "@pid": "p/CharalamposPapamanthou",
                        "text": "Charalampos Papamanthou"
                    }
                ]
            },
            "title": "vSQL: Verifying Arbitrary SQL Queries over Dynamic Outsourced Databases.",
            "venue": "IEEE Symposium on Security and Privacy",
            "pages": "863-880",
            "year": "2017",
            "type": "Conference and Workshop Papers",
            "access": "closed",
            "key": "conf/sp/ZhangGKPP17",
            "doi": "10.1109/SP.2017.43",
            "ee": "https://doi.org/10.1109/SP.2017.43",
            "url": "https://dblp.org/rec/conf/sp/ZhangGKPP17",
            "abstract": "Cloud database systems such as Amazon RDS or Google Cloud SQLenable the outsourcing of a large database to a server who then responds to SQL queries. A natural problem here is to efficiently verify the correctness of responses returned by the (untrusted) server. In this paper we present vSQL, a novel cryptographic protocol for publicly verifiable SQL queries on dynamic databases. At a high level, our construction relies on two extensions of the CMT interactive-proof protocol [Cormode et al., 2012]: (i) supporting outsourced input via the use of a polynomial-delegation protocol with succinct proofs, and (ii) supporting auxiliary input (i.e., non-deterministic computation) efficiently. Compared to previous verifiable-computation systems based on interactive proofs, our construction has verification cost polylogarithmic in the auxiliary input (which for SQL queries can be as large as the database) rather than linear. In order to evaluate the performance and expressiveness of our scheme, we tested it on SQL queries based on the TPC-H benchmark on a database with 6 million rows and 13 columns. The server overhead in our scheme (which is typically the main bottleneck) is up to 120 times lower than previousapproaches based on succinct arguments of knowledge (SNARKs), and moreover we avoid the need for query-dependent pre-processing which is required by optimized SNARK-based schemes. In our construction, the server/client time and the communication cost are comparable to, and sometimessmaller than, those of existing customized solutions which only support specific queries.",
            "pdf_url": "",
            "keywords": [
                "Cloud Databases",
                "Verifiable Computation",
                "SQL Query Verification",
                "Dynamic Outsourced Databases",
                "Cryptographic Protocols"
            ]
        },
        "url": "URL#3505261"
    },
    {
        "@score": "1",
        "@id": "3524115",
        "info": {
            "title": "2017 IEEE Symposium on Security and Privacy, SP 2017, San Jose, CA, USA, May 22-26, 2017",
            "venue": "IEEE Symposium on Security and Privacy",
            "publisher": "IEEE Computer Society",
            "year": "2017",
            "type": "Editorship",
            "key": "conf/sp/2017",
            "ee": "https://ieeexplore.ieee.org/xpl/conhome/7957740/proceeding",
            "url": "https://dblp.org/rec/conf/sp/2017",
            "abstract": null
        },
        "url": "URL#3524115",
        "sema_paperId": "b5da4e9ffc35700829b3f0700a8432fcab9e8f30"
    }
]